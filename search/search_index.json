{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to PSPDevNotes","text":"<p>\u521b\u5efa\u8fd9\u4e2a\u7f51\u7ad9\u7684\u521d\u8877\uff0c\u4e00\u4e2a\u662f\u60f3\u7814\u7a76\u53e4\u65e9\u8bbe\u5907\uff0c\u53e6\u4e00\u4e2a\u662f\u60f3\u4f5c\u4e3a\u5b66\u4e60\u7684\u5951\u673a\u3002\u901a\u8fc7\u4e00\u4e2a\u8fd1 20 \u5e74\u524d\u7684\u8bbe\u5907\uff0c\u5b66\u4e60\u8ba1\u7b97\u673a\u77e5\u8bc6\u3002</p>"},{"location":"#goals","title":"Goals","text":"<ul> <li>\u719f\u6089 Linux \u5f00\u53d1\u73af\u5883\uff0cBash Shell \u7684\u6709\u5173\u77e5\u8bc6</li> <li>\u719f\u6089 GNU \u7684\u4e00\u7cfb\u5217\u5de5\u5177\uff0c\u4e86\u89e3\u5927\u578b C/C++\u9879\u76ee\u5982\u4f55\u7ec4\u7ec7</li> <li>\u7ec3\u4e60\u4f7f\u7528 git \u548c GitHub\uff0c\u5c1d\u8bd5\u4f7f\u7528 CI/CD \u5de5\u5177</li> <li>\u5b66\u4e60\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840<ul> <li>\u4e86\u89e3MIPS\u67b6\u6784\u6c47\u7f16\u7684\u6709\u5173\u77e5\u8bc6\u548c\u5904\u7406\u5668\u6d41\u6c34\u7ebf\u7684\u8bbe\u8ba1</li> <li>\u4e86\u89e3\u7f16\u8bd1\u548c\u94fe\u63a5\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u4e86\u89e3\u7a0b\u5e8f\u52a0\u8f7d\u7684\u76f8\u5173\u6982\u5ff5</li> <li>\u4e86\u89e3\u5185\u5b58\u76f8\u5173\u6982\u5ff5</li> <li>\u4e86\u89e3\u5f02\u5e38\u63a7\u5236\u6d41\uff08ECF\uff09\u3001\u7cfb\u7edf\u8c03\u7528\uff0c\u5185\u6838\u6001\u4e0e\u7528\u6237\u6001\u7a0b\u5e8f</li> <li>\u5b66\u4e60\u7ebf\u7a0b\u7684\u6982\u5ff5\uff0c\u4f53\u4f1a\u5e76\u53d1</li> </ul> </li> <li>\u4ece GNU Make \u5230 CMake</li> <li>\u4e86\u89e3\u4e0d\u540c\u5e73\u53f0\u7684\u5dee\u5f02</li> <li>\u5b66\u4e60\u5982\u4f55\u5c06\u4e0d\u540c\u5de5\u5177\u6574\u5408\u6210\u4e00\u5957\u5de5\u4f5c\u6d41</li> </ul>"},{"location":"#todo","title":"TODO\uff1a","text":"<ul> <li> \u6784\u5efa\u7684\u76ee\u6807</li> <li> \u73af\u5883\u914d\u7f6e<ul> <li> PSPDEV</li> <li> VSCode</li> </ul> </li> <li> PSPDEV\u76ee\u5f55\u7ed3\u6784</li> <li> \u7f16\u8bd1\u4f53\u7cfb<ul> <li> \u4ece\u6e90\u4ee3\u7801\u6784\u5efaPSPSDK</li> <li> Makefile \u793a\u4f8b\u89e3\u6790</li> </ul> </li> <li> PSP \u6587\u4ef6\u683c\u5f0f</li> <li> Hello World</li> <li> \u547d\u4ee4\u884c\u5de5\u5177\u8be6\u89e3\uff08\u53c2\u6570\u3001\u6e90\u4ee3\u7801\uff09</li> <li> \u9759\u6001\u94fe\u63a5<ul> <li> \u5f15\u5165\u7b2c\u4e09\u65b9\u5e93\uff08\u9759\u6001\u94fe\u63a5\uff09</li> <li> \u5bfc\u5165\u5916\u90e8<code>prx</code>\u6a21\u5757\uff08\u52a8\u6001\u94fe\u63a5\uff09<ul> <li> Stub/Resident Libraries<ul> <li> \u6a21\u5757\u5bfc\u51fa</li> <li> \u6a21\u5757\u5bfc\u5165</li> </ul> </li> <li> PRX\u6587\u4ef6<ul> <li> Sections</li> </ul> </li> <li> \u6a21\u5757\u52a0\u8f7d</li> </ul> </li> </ul> </li> <li> \u6a21\u5757</li> <li> \u64cd\u4f5c\u7cfb\u7edf\u67b6\u6784</li> <li> \u5185\u6838\u6a21\u5757</li> <li> \u7528\u6237\u6a21\u5757</li> <li> \u8bbe\u5907\u529f\u80fd<ul> <li> \u663e\u793a</li> <li> \u5b9e\u7528\u7a0b\u5e8f(Utility)<ul> <li> \u5f39\u7a97(Dialog)</li> <li> \u5c4f\u5e55\u952e\u76d8(On Screen Keyboard. A.k.a OSK)</li> </ul> </li> <li> \u7f51\u7edc</li> <li> \u89c6\u9891\u89e3\u7801</li> <li> I/O</li> <li> \u65f6\u95f4</li> </ul> </li> <li> \u865a\u62df\u5185\u5b58</li> <li> \u7f13\u5b58 (Cache)</li> <li> \u8c03\u8bd5</li> <li> PSPLink</li> <li> PPSSPP</li> <li> \u53d1\u5e03<ul> <li> EBOOT.PBP</li> <li> ISO / CSO</li> </ul> </li> <li> Github Actions \u81ea\u52a8\u6784\u5efa</li> <li> \u9006\u5411\u5de5\u7a0b<ul> <li> MIPS\u6c47\u7f16</li> <li> \u9759\u6001\u5206\u6790\u5de5\u5177(Ghidra &amp; Scripts)</li> </ul> </li> <li> \u8865\u4e01<ul> <li> \u9759\u6001\u4fee\u6539\uff08ELF\u6587\u4ef6\uff09</li> <li> \u52a8\u6001\u4fee\u6539\uff08\u63d2\u4ef6/CWCheat\uff09</li> <li> \u7f16\u5199CFW\u63d2\u4ef6</li> <li> \u6c49\u5316\u6559\u7a0b</li> </ul> </li> </ul>"},{"location":"#roadmap","title":"Roadmap","text":"<ul> <li> <p>\u5982\u6b32\u638c\u63e1\u57fa\u672c\u6e38\u620f\u5f00\u53d1\u6280\u5de7\uff0c\u53ef\u4eceThird Party Libraries\u76f4\u63a5\u8df3\u81f3\u8c03\u8bd5\u6b65\u9aa4\u3002\u7814\u7a76SDL\u9879\u76ee\u3002\u4f7f\u7528PSP\u90e8\u5206\u529f\u80fd\u53ef\u80fd\u9700\u8981\u9605\u8bfbStubLib\u4e00\u8282</p> </li> <li> <p>\u5982\u6b32\u5f00\u53d1Plugin\u6216\u8005Patch\u73b0\u6709\u6e38\u620f\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfbStubLib\u4e00\u8282</p> </li> <li> <p>\u5982\u6b32\u5bf9\u73b0\u6709\u6e38\u620f\u8fdb\u884c\u6c49\u5316\uff0c\u8bf7\u9605\u8bfbStubLib\u3001Debug\u53caReverse Engineering\u548cPatch\u4e00\u8282\u3002</p> </li> </ul>"},{"location":"#_1","title":"\u62b1\u6028","text":"<p>\u5168\u662fdeprecated\u548ctemporary fix.\u5fc5\u987b\u9760\u8be2\u95ee\u6765\u5f97\u77e5\u5404\u79cd\u4f7f\u7528\u65b9\u6cd5best practice</p>"},{"location":"#_2","title":"\u81f4\u8c22","text":"<ul> <li>PSPDEV / PSPSDK(Unofficial)</li> <li>PSP Homebrew Discord</li> <li>rust-psp</li> <li>ppsspp</li> <li>uofw</li> <li>IridescentRose</li> <li>Official PSP\u2122 (PlayStation\u00aePortable) SDK</li> </ul>"},{"location":"SDLDev/","title":"SDL2 Development Notes","text":"<p>SDL3 \u5df2\u7ecf\u53d1\u5e03\uff0c\u7136\u800cSDL2\u4ecd\u7136\u662f<code>stable</code>\u7248\u672c\u3002 \u5148\u7528SDL2\u907f\u514d\u9ebb\u70e6\u3002</p> <ul> <li>SDL_image\u6709\u70b9\u95ee\u9898\uff0c\u4f3c\u4e4e\u7528\u4e0d\u4e86<ul> <li>\u5efa\u8bae\u4f7f\u7528stb_image\u7b49\u66ff\u4ee3</li> <li>\u6e32\u67d3\u65f6\u65b9\u5411\u8c03\u6574\u53ef\u4ee5\u4f7f\u7528<code>SDL_RenderCopyEx</code></li> </ul> </li> </ul> <p>\u8de8\u5e73\u53f0\u5b9e\u9a8c\u9700\u8981\u4f7f\u7528\u5b8f</p>"},{"location":"SDLDev/#input-devices","title":"Input Devices","text":"<pre><code> if (SDL_PollEvent(&amp;event)) {\n            switch (event.type) {\n                case SDL_QUIT:\n                    running = 0;\n                    break;\n                case SDL_CONTROLLERDEVICEADDED:\n                    SDL_GameControllerOpen(event.cdevice.which);\n                    break;\n                case SDL_CONTROLLERBUTTONDOWN:\n                    if(event.cbutton.button == SDL_CONTROLLER_BUTTON_START)\n                        running = 0;\n                    break;\n            }\n        }\n</code></pre> <p>SDL_CONTROLLER_BUTTON_INVALID</p> <p>-1</p> <p>SDL_CONTROLLER_BUTTON_A</p> <p>0</p> <p>SDL_CONTROLLER_BUTTON_B</p> <p>1</p> <p>SDL_CONTROLLER_BUTTON_X</p> <p>2</p> <p>SDL_CONTROLLER_BUTTON_Y</p> <p>3</p> <p>SDL_CONTROLLER_BUTTON_BACK</p> <p>4</p> <p>SDL_CONTROLLER_BUTTON_GUIDE</p> <p>5</p> <p>SDL_CONTROLLER_BUTTON_START</p> <p>6</p> <p>SDL_CONTROLLER_BUTTON_LEFTSTICK</p> <p>7</p> <p>SDL_CONTROLLER_BUTTON_RIGHTSTICK</p> <p>8</p> <p>SDL_CONTROLLER_BUTTON_LEFTSHOULDER</p> <p>9</p> <p>SDL_CONTROLLER_BUTTON_RIGHTSHOULDER</p> <p>10</p> <p>SDL_CONTROLLER_BUTTON_DPAD_UP</p> <p>11</p> <p>SDL_CONTROLLER_BUTTON_DPAD_DOWN</p> <p>12</p> <p>SDL_CONTROLLER_BUTTON_DPAD_LEFT</p> <p>13</p> <p>SDL_CONTROLLER_BUTTON_DPAD_RIGHT</p> <p>14</p> <p>SDL_CONTROLLER_BUTTON_MISC1</p> <p>15</p> <p>SDL_CONTROLLER_BUTTON_PADDLE1</p> <p>16</p> <p>SDL_CONTROLLER_BUTTON_PADDLE2</p> <p>17</p> <p>SDL_CONTROLLER_BUTTON_PADDLE3</p> <p>18</p> <p>SDL_CONTROLLER_BUTTON_PADDLE4</p> <p>19</p> <p>SDL_CONTROLLER_BUTTON_TOUCHPAD</p> <p>20</p> <p>SDL_CONTROLLER_BUTTON_MAX</p>"},{"location":"buildformsource/","title":"Build PSPDEV from source","text":"<p>\u5728\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u770b\u5230\uff0cpspdev \u5728 GitHub \u4e0a\u5df2\u7ecf\u63d0\u4f9b\u4e86\u9762\u5bf9\u591a\u4e2a\u5e73\u53f0\u7f16\u8bd1\u597d\u7684 Release \u7248\u672c\u7684\u4e0b\u8f7d\u3002\u5229\u7528\u6211\u4eec\u6240\u5b66\u7684\u5bf9\u7f16\u8bd1\u4f53\u7cfb\u7684\u8ba4\u8bc6\uff0c\u5c1d\u8bd5\u770b\u770b\u5982\u4f55\u7528\u4e00\u7cfb\u5217\u5de5\u5177\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u751f\u6210\u6240\u9700\u7684\u6587\u4ef6\u3002</p> <p>\u5728 PSPDEV \u7684 Github Repository \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8bb8\u591a Shell \u811a\u672c\u3002\u8ba9\u6211\u4eec\u5177\u4f53\u770b\u770b\u4ed6\u4eec\u4ee5\u4f55\u79cd\u987a\u5e8f\u6267\u884c\uff0c\u90fd\u505a\u4e86\u4e9b\u4ec0\u4e48\u6765\u5f97\u5230 Release\u3002</p> <p>\u53c2\u8003\u9605\u8bfb</p> <p>MIT Missing Semester: Shell Scripts</p> <p>Hint</p> <p>\u7f16\u8bd1\u6e90\u4ee3\u7801\u662f\u4e2a\u8017\u65f6\u8017\u529b\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u60f3\u76f4\u63a5\u5f00\u53d1\uff0c\u8fd8\u662f\u53bb\u4e0b\u8f7dRelease\u7248\u672c\uff01</p>"},{"location":"buildformsource/#_1","title":"\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784","text":"<pre><code>pspdev\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 build-all.sh\n\u251c\u2500\u2500 build-extra.sh\n\u251c\u2500\u2500 depends\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 check-dependencies.sh\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 check-pspdev.sh\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 check-sh-is-not-dash.sh\n\u251c\u2500\u2500 prepare-arch.sh\n\u251c\u2500\u2500 prepare-debian-ubuntu.sh\n\u251c\u2500\u2500 prepare-fedora.sh\n\u251c\u2500\u2500 prepare-gentoo.sh\n\u251c\u2500\u2500 prepare-mac-os.sh\n\u2514\u2500\u2500 scripts\n    \u251c\u2500\u2500 001-psptoolchain.sh\n    \u251c\u2500\u2500 002-pspsdk.sh\n    \u251c\u2500\u2500 003-psp-packages.sh\n    \u251c\u2500\u2500 004-psplinkusb-extra.sh\n    \u2514\u2500\u2500 005-ebootsigner-extra.sh\n</code></pre>"},{"location":"buildformsource/#pspdev","title":"<code>pspdev</code>\u6839\u76ee\u5f55\u4e2d\u7684\u811a\u672c","text":"<p>\u5982\u679c\u53ea\u60f3\u81ea\u5df1 build \u7684\u8bdd\uff0cgit clone \u5230\u672c\u5730\u540e\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u914d\u7f6e\u5e76\u6267\u884c\u4e0b\u9762\u4e24\u4e2a\u811a\u672c\u3002\u7b2c\u4e8c\u4e2a\u811a\u672c\u4f1a\u81ea\u52a8\u6267\u884c\u5b50\u76ee\u5f55\u4e2d\u7684\u811a\u672c\u3002</p>"},{"location":"buildformsource/#pspdevprepare-sh","title":"<code>pspdev/prepare-*.sh</code>","text":"<ul> <li>\u8fd9\u4e9b\u811a\u672c\u7528\u4e8e\u5b89\u88c5\u7f16\u8bd1\u548c\u8fd0\u884c\u65f6\u6240\u9700\u7684\u5404\u79cd\u4f9d\u8d56</li> </ul> prepare-debian-ubuntu.sh<pre><code>  #!/bin/bash\n\n  # Install build dependencies\n  sudo apt-get install $@ \\\n  git gzip libarchive-dev libcurl4 libcurl4-openssl-dev libelf-dev libgpgme-dev libncurses5-dev libreadline-dev libssl-dev \\\n  libtool-bin libusb-dev m4 make patch pkg-config python3 python3-venv subversion tar tcl texinfo unzip wget xz-utils \\\n  sudo fakeroot libarchive-tools curl libgmp3-dev libmpfr-dev libmpc-dev python3-pip autoconf automake bison bzip2 cmake doxygen flex g++ gcc\n</code></pre>"},{"location":"buildformsource/#pspdevbuild-allsh","title":"<code>pspdev/build-all.sh</code>","text":"<ul> <li>\u81ea\u52a8\u6267\u884c<code>pspdev/depends</code>\u4e0b\u7684\u811a\u672c\u68c0\u67e5\u4f9d\u8d56\u5b89\u88c5\u60c5\u51b5<ul> <li><code>check-pspdev.sh</code>\uff1a\u662f\u5426\u5df2\u7ecf\u624b\u52a8\u521b\u5efa PSPDEV \u76ee\u5f55\u5e76\u6307\u5b9a\u73af\u5883\u53d8\u91cf</li> <li><code>check-dependencies.sh</code>\uff1a\u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u6240\u9700\u4f9d\u8d56</li> <li><code>check-sh-is-not-dash.sh</code>\uff1a\u662f\u5426\u4f7f\u7528 bash \u4f5c\u4e3a\u9ed8\u8ba4\u7ec8\u7aef</li> </ul> </li> <li>\u81ea\u52a8\u6267\u884c<code>pspdev/scripts</code>\u4e0b\u7684\u811a\u672c\u4e0b\u8f7d\u591a\u4e2a\u9879\u76ee\u7684\u6e90\u7801\u5e76\u8fdb\u884c\u7f16\u8bd1</li> </ul>"},{"location":"buildformsource/#depends","title":"\u5b50\u76ee\u5f55<code>depends</code>\u4e0b\u7684\u811a\u672c","text":""},{"location":"buildformsource/#check-pspdevsh","title":"<code>check-pspdev.sh</code>","text":"<ul> <li>\u6267\u884c\u524d\u9700\u8981\u624b\u52a8\u8bbe\u7f6e PSPDEV \u73af\u5883\u53d8\u91cf\u5e76\u6539\u53d8 PATH \u73af\u5883\u53d8\u91cf</li> <li> <p>\u68c0\u67e5\u5982\u4e0b\u914d\u7f6e <pre><code>  #!/bin/sh\n  # check-pspdev.sh by Naomi Peori (naomi@peori.ca)\n\n  ## Check if $PSPDEV is set.\n  if test ! $PSPDEV; then { echo \"ERROR: Set \\$PSPDEV before continuing.\"; exit 1; } fi\n\n  ## Check for the $PSPDEV directory.\n  ls -ld $PSPDEV &gt; /dev/null 2&gt;&amp;1 || mkdir -p $PSPDEV &gt; /dev/null 2&gt;&amp;1 || { echo \"ERROR: Create $PSPDEV before continuing.\"; exit 1; }\n\n  ## Check for write permission.\n  touch $PSPDEV/test.tmp &gt; /dev/null 2&gt;&amp;1 || { echo \"ERROR: Grant write permissions for $PSPDEV before continuing.\"; exit 1; }\n\n  ## Check for $PSPDEV/bin in the path.\n  echo $PATH | grep $PSPDEV/bin &gt; /dev/null 2&gt;&amp;1 || { echo \"ERROR: Add $PSPDEV/bin to your path before continuing.\"; exit 1; }\n</code></pre></p> </li> <li> <p>\u4ec0\u4e48\u662f\u73af\u5883\u53d8\u91cf\uff1f</p> <ul> <li>\u53c2\u8003 MIT Missing Semester \u7b2c\u4e00\u96c6</li> </ul> </li> <li> <p>\u5982\u4f55\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1f</p> <ul> <li><code>export &lt;NAME&gt;='&lt;value&gt;'</code></li> <li>\u901a\u8fc7\u5728<code>~/.bashrc</code>\u4e2d\u6dfb\u52a0\u8fd9\u4e00\u884c\u4f7f\u5f97\u6bcf\u6b21\u542f\u52a8 shell \u65f6\u751f\u6548</li> <li>\u8f93\u5165<code>source ~/.bashrc</code>\u4ee5\u91cd\u65b0\u52a0\u8f7d</li> </ul> </li> </ul> <p>\u5b98\u65b9\u8bf4\u660e</p> <p>Add this to your login script (example: ~/.bash_profile) Note: Ensure that you have full access to the PSPDEV path. You can change the PSPDEV path with the following requirements: only use absolute paths, don't use spaces, only use Latin characters. <pre><code>export PSPDEV=/usr/local/pspdev\nexport PATH=$PATH:$PSPDEV/bin\n</code></pre></p>"},{"location":"buildformsource/#check-dependenciessh","title":"<code>check-dependencies.sh</code>","text":"<ul> <li>\u8d1f\u8d23\u68c0\u67e5\u5982\u4e0b\u4f9d\u8d56 <pre><code>     check_program   which\n     check_program   git\n     check_program   patch\n     check_program   autoconf\n     check_program   automake\n     check_program   make\n     check_program   cmake\n     check_program   gcc\n     check_program   g++\n     check_program   bison\n     check_program   flex\n     check_program   python3\n     check_program   pip3\n     check_program   gpgme-tool\n\n     # macOS uses it's own fork of libtool\n     if [ \"$(uname)\" != \"Darwin\" ]; then\n     check_program libtoolize\n     else\n     check_program glibtoolize\n     fi\n\n     check_library   libarchive\n     check_library   openssl\n     check_library   ncurses\n</code></pre></li> </ul>"},{"location":"buildformsource/#scripts","title":"\u5b50\u76ee\u5f55<code>scripts</code>\u4e0b\u7684\u811a\u672c","text":""},{"location":"buildformsource/#github-action","title":"\u4f7f\u7528 Github Action \u81ea\u52a8\u6784\u5efa","text":"<p>\u5728<code>PSPDEV</code>\u7684\u4ed3\u5e93\u4e2d\uff0c\u6709\u81ea\u52a8\u6784\u5efa\u7684\u4ee3\u7801\u53ef\u4f9b\u53c2\u8003\u3002</p>"},{"location":"buildtarget/","title":"\u6211\u4eec\u8981\u6784\u5efa\u7684\u662f\u4ec0\u4e48\uff1f","text":"<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u7f16\u5199\u80fd\u5728PSP\u4e0a\u8fd0\u884c\u7684\u8f6f\u4ef6\uff08\u5e38\u88ab\u79f0\u4e3a<code>PSP Module</code>\uff09\uff0c\u4ece\u5e94\u7528\u4e0a\u53ef\u5206\u4e3a\u81ea\u5236\u6e38\u620f\uff08<code>Homebrew</code>\uff09\u548c\u63d2\u4ef6(<code>Plugin</code>)\u3002</p> <p>\u53c2\u8003\u9605\u8bfb</p> <p>PSP Modules, Exports, Imports and Patches https://uofw.github.io/upspd/docs/</p> <p>\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e0bPSP\u3002</p>"},{"location":"buildtarget/#psp","title":"PSP\u7684\u6b63\u89c4\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u4f17\u6240\u5468\u77e5\uff0cPSP\u662f\u7d22\u5c3c2004\u5e74\u63a8\u51fa\u7684\u4e00\u6b3e\u6e38\u620f\u673a\u3002\u5176\u6e38\u620f\u901a\u8fc7UMD\u5149\u76d8\u53d1\u884c\u3002\u5728\u8fd0\u884c\u5b98\u65b9\u56fa\u4ef6\u7684PSP\u4e0a\uff0cPSP\u901a\u8fc7\u8bfb\u53d6\u63d2\u5165\u7684UMD\u5149\u76d8\u8fd0\u884c\u6e38\u620f\u3002PSP\u652f\u6301\u8bfb\u53d6\u8bb0\u5fc6\u68d2\uff0c\u4e3b\u8981\u7528\u4e8e\u50a8\u5b58\u6e38\u620f\u5b58\u6863\u6570\u636e\u7b49\u3002</p>"},{"location":"buildtarget/#cfw","title":"\u81ea\u5b9a\u4e49\u56fa\u4ef6\uff08CFW\uff09","text":"<p>PSP\u63a8\u51fa\u4ee5\u540e\uff0c\u5404\u8def\u5927\u795e\u4e89\u76f8\u7834\u89e3PSP\u56fa\u4ef6\uff0c\u5229\u7528\u5404\u79cd\u6f0f\u6d1e\u63a8\u51fa\u4e86\u4f17\u591a\u81ea\u5b9a\u4e49\u56fa\u4ef6\u3002\u5728\u81ea\u5b9a\u4e49\u56fa\u4ef6\u4e0b\uff0cPSP\u53ef\u4ee5\u8fd0\u884c\u50a8\u5b58\u5728\u8bb0\u5fc6\u68d2\u4e2d\u7684UMD\u5149\u76d8\u955c\u50cf\u6216\u8005\u7231\u597d\u8005\u81ea\u5df1\u7f16\u5199\u7684<code>PSP Module</code>\u6587\u4ef6\u3002</p> <p>\u7ecf\u8fc720\u5e74\u8fed\u4ee3\uff0c\u4e00\u822c\u8ba4\u4e3a\u76ee\u524d\u529f\u80fd\u6700\u5b8c\u5584\u7684CFW\u4e3a6.60PRO\u3002\u4e92\u8054\u7f51\u4e0a\u6709\u8bb8\u591a\u5b89\u88c5\u6559\u7a0b\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u65b0\u8fd1\u7684<code>ARK-4</code> CFW\u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9</p> <p>\u672c\u6587\u6240\u6709\u793a\u4f8b\u7a0b\u5e8f\u5747\u57286.60PRO\u56fa\u4ef6\u4e0b\u7684PSP1000\u578b\u53f7\u4e2d\u6d4b\u8bd5\u901a\u8fc7\u3002</p>"},{"location":"buildtarget/#emulator","title":"\u6a21\u62df\u5668\uff08Emulator\uff09","text":"<p>\u968f\u7740\u5176\u4ed6\u8bbe\u5907\u6027\u80fd\u7684\u63d0\u5347\uff0c\u5e02\u9762\u4e0a\u4e5f\u5f00\u59cb\u51fa\u73b0\u8d8a\u6765\u8d8a\u591a\u7684PSP\u6a21\u62df\u5668\u3002\u5176\u4e2d\u6700\u8457\u540d\u7684\u5f53\u5c5ePPSSPP\u3002\u5982\u679c\u4f60\u6ca1\u6709\u5b9e\u4f53\u7684PSP\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u5668\u6765\u4eab\u53d7\u524d\u4eba\u5236\u4f5c\u7684\u7cbe\u826f\u6e38\u620f\u6216\u6d4b\u8bd5\u81ea\u5df1\u5f00\u53d1\u7684<code>PSP Module</code>\u3002</p>"},{"location":"buildtarget/#_2","title":"\u6587\u4ef6\u683c\u5f0f","text":"<p>\u524d\u6587\u5df2\u7ecf\u63d0\u5230\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u7f16\u5199<code>PSP Module</code>\u3002\u6211\u4eec\u6709\u5fc5\u8981\u63d0\u53ca\u8fd0\u884cCFW\u7684PSP\u53ef\u4ee5\u8fd0\u884c\u7684<code>PSP Module</code>\u7a0b\u5e8f\u7684\u6587\u4ef6\u683c\u5f0f\u3002</p> <ul> <li>ELF</li> <li>PRX</li> </ul> <p>A program that is loaded in memory is called a program module or simply a module. The PSP\u2122 kernel is responsible for managing the modules in memory.</p> <p>The PSP\u2122 kernel loader can handle two types of object files. One is a relocatable object file format unique to the PSP\u2122 kernel called a PRX file, and the other is a normal ELF executable object file.</p> <p>\u5bf9\u4e8e\u81ea\u5236\u6e38\u620f\u6765\u8bf4\uff0c\u4e3a\u4e86\u80fd\u8ba9\u5176\u5728\u4e3b\u754c\u9762\uff08<code>XMB</code>\uff09\u7684\u6e38\u620f\u83dc\u5355\u4e2d\u663e\u793a\uff0c\u9700\u8981\u5c06\u5176\u5c01\u88c5\u4e3aEBOOT.PBP</p> <p>\u793a\u4f8b\uff1a\u6211\u4eec\u5047\u8bbe\u4f60\u5df2\u7ecf\u62e5\u6709\u4e00\u53f0\u914d\u5907CFW\u7684PSP</p> <p>A typical Plugin </p> <p>A typical Homebrew </p>"},{"location":"cmake/","title":"Working with CMake","text":""},{"location":"cmake/#psp-cmake","title":"psp-cmake","text":"<p>Nothing but a Shell Script. Passing the Toolchain file to CMake.</p> <pre><code>#!/bin/bash\n\n## Make sure PSPDEV is set\nif [ -z \"${PSPDEV}\" ]; then\n    echo \"The PSPDEV environment variable has not been set\"\n    exit 1\nfi\n\ncmake \\\n  -DCMAKE_TOOLCHAIN_FILE=\"${PSPDEV}/psp/share/pspdev.cmake\" \\\n  \"$@\"\n</code></pre>"},{"location":"cmake/#toolchain-cmake-file","title":"Toolchain CMake file","text":"<p>~/pspdev/psp/share/pspdev.cmake <pre><code>if(DEFINED ENV{PSPDEV})\n    SET(PSPDEV $ENV{PSPDEV})\nelse()\n    message(FATAL_ERROR \"The environment variable PSPDEV needs to be defined.\")\nendif()\n\nSET(CMAKE_SYSTEM_NAME Generic)\nSET(CMAKE_SYSTEM_VERSION 1)\nSET(CMAKE_SYSTEM_PROCESSOR mips)\nSET(CMAKE_C_COMPILER psp-gcc)\nSET(CMAKE_CXX_COMPILER psp-g++)\nSET(CMAKE_C_FLAGS_INIT \"-I${PSPDEV}/psp/include -I${PSPDEV}/psp/sdk/include -DPSP -G0\")\nSET(CMAKE_CXX_FLAGS_INIT \"-I${PSPDEV}/psp/include -I${PSPDEV}/psp/sdk/include -DPSP -G0\")\nSET(CMAKE_EXE_LINKER_FLAGS_INIT \"-L${PSPDEV}/lib -L${PSPDEV}/psp/lib -L${PSPDEV}/psp/sdk/lib -Wl,-zmax-page-size=128\")\n#SET(CMAKE_SHARED_LINKER_FLAGS_INIT \"...\")\n#SET(CMAKE_STATIC_LINKER_FLAGS_CONFIG_INIT \"...\")\n#SET(CMAKE_STATIC_LINKER_FLAGS_INIT \"...\")\nSET(CMAKE_INSTALL_PREFIX \"${PSPDEV}/psp\" CACHE PATH \"install path\")\n\nSET(CMAKE_FIND_ROOT_PATH ${PSPDEV} ${PSPDEV}/psp ${PSPDEV}/psp/sdk)\nSET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\nSET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\nSET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n\nSET(PKG_CONFIG_EXECUTABLE \"${PSPDEV}/bin/psp-pkg-config\" CACHE STRING \"Path to pkg-config\")\n\n## Add Default PSPSDK Libraries according to build.mak and add stdc++ for C++ builds so this doesn't need to be done manually later\ninclude_directories(${PSPDEV}/psp/include ${PSPDEV}/psp/sdk/include)\nlink_directories( ${PSPDEV}/lib ${PSPDEV}/psp/lib ${PSPDEV}/psp/sdk/lib)\n\nadd_definitions(\"-D__PSP__\")\nadd_definitions(\"-DPSP\")\nSET(PLATFORM_PSP TRUE)\nSET(PSP TRUE)\n\ninclude(\"${PSPDEV}/psp/share/CreatePBP.cmake\")\n</code></pre> CreatePBP.cmake <pre><code># File defining macro outputting PSP-specific EBOOT.PBP out of passed executable target.\n#\n# Copyright 2020 - Daniel 'dbeef' Zalega\n# Copyright 2021 - max_ishere\n\ncmake_minimum_required(VERSION 3.10)\n\noption(BUILD_PRX \"Build a PRX for use with PSPLink\" OFF)\noption(ENC_PRX \"Encrypt the PRX to allow running on official firmware\" OFF)\n\nmacro(create_pbp_file)\n\n  set(oneValueArgs\n    TARGET          # defined by an add_executable call before calling create_pbp_file\n    TITLE           # optional, string, target's name in PSP menu\n    ICON_PATH       # optional, absolute path to .png file, 144x82\n    BACKGROUND_PATH # optional, absolute path to .png file, 480x272\n    PREVIEW_PATH    # optional, absolute path to .png file, 480x272\n    )\n  set(options\n    BUILD_PRX # optional, generates and uses PRX file instead of ELF in EBOOT.PBP\n    ENC_PRX   # optional, replaces PRX file with encrypted version.\n    )\n  cmake_parse_arguments(\"ARG\" \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN})\n\n  # As pack-pbp takes undefined arguments in form of \"NULL\" string,\n  # set each undefined macro variable to such value:\n  foreach(arg ${oneValueArgs})\n    if (NOT DEFINED ARG_${arg})\n      set(ARG_${arg} \"NULL\")\n    endif()\n  endforeach()\n\n  # Build a PRX anyway if the -DBUILD_PRX=ON was set\n  if(${BUILD_PRX})\n    set(ARG_BUILD_PRX ${BUILD_PRX})\n  endif()\n\n  # Encrypt the PRX anyway if the -DENC_PRX=ON was set\n  if(${ENC_PRX})\n      set(ARG_ENC_PRX ${ENC_PRX})\n  endif()\n\n  if(NOT ${ARG_BUILD_PRX} AND ${ARG_ENC_PRX})\n    message(WARNING \"Encrypting PRX requires BUILD_PRX to be set, otherwise there is nothing to encrypt.\\n\"\n      \"ENC_PRX flag for target '${ARG_TARGET}' will be ignored.\")\n  endif()\n\n  if(${ARG_BUILD_PRX})\n    target_link_options(${ARG_TARGET}\n      PUBLIC -specs=${PSPDEV}/psp/sdk/lib/prxspecs\n      PUBLIC -Wl,-q,-T${PSPDEV}/psp/sdk/lib/linkfile.prx\n      PUBLIC ${PSPDEV}/psp/sdk/lib/prxexports.o)\n  endif()\n\n  if(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"Release\" AND NOT ${ARG_BUILD_PRX})\n    add_custom_command(\n      TARGET ${ARG_TARGET}\n      POST_BUILD COMMAND\n      \"${PSPDEV}/bin/psp-strip\" \"$&lt;TARGET_FILE:${ARG_TARGET}&gt;\"\n      COMMENT \"Stripping binary\"\n      )\n  elseif(${ARG_BUILD_PRX})\n    add_custom_command(\n      TARGET ${ARG_TARGET}\n      POST_BUILD COMMAND\n      ${CMAKE_COMMAND} -E cmake_echo_color --cyan \"Not stripping binary because building PRX.\"\n      )\n  else()\n    add_custom_command(\n      TARGET ${ARG_TARGET}\n      POST_BUILD COMMAND\n      ${CMAKE_COMMAND} -E cmake_echo_color --cyan \"Not stripping binary, build type is ${CMAKE_BUILD_TYPE}.\"\n      )\n  endif()\n\n  add_custom_command(\n    TARGET ${ARG_TARGET}\n    POST_BUILD COMMAND\n    \"$ENV{PSPDEV}/bin/psp-fixup-imports\" \"$&lt;TARGET_FILE_DIR:${ARG_TARGET}&gt;/${ARG_TARGET}\"\n    COMMENT \"Calling psp-fixup-imports\"\n    )\n\n  if (${ARG_BUILD_PRX})\n    add_custom_command(\n      TARGET ${ARG_TARGET}\n      POST_BUILD COMMAND\n      \"${PSPDEV}/bin/psp-prxgen\" \"$&lt;TARGET_FILE_DIR:${ARG_TARGET}&gt;/${ARG_TARGET}\"\n      \"$&lt;TARGET_FILE_DIR:${ARG_TARGET}&gt;/${ARG_TARGET}.prx\"\n      COMMENT \"Calling prxgen\"\n      )\n\n    if(${ARG_ENC_PRX})\n      add_custom_command(\n    TARGET ${ARG_TARGET}\n    POST_BUILD COMMAND\n    \"${PSPDEV}/bin/PrxEncrypter\" \"$&lt;TARGET_FILE_DIR:${ARG_TARGET}&gt;/${ARG_TARGET}.prx\"\n    \"$&lt;TARGET_FILE_DIR:${ARG_TARGET}&gt;/${ARG_TARGET}.prx\"\n    COMMENT \"Calling PrxEncrypter\"\n    )\n    else()\n      add_custom_command(\n    TARGET ${ARG_TARGET}\n    POST_BUILD COMMAND\n    ${CMAKE_COMMAND} -E cmake_echo_color --cyan \"Not encrypting PRX, use ENC_PRX flag if you need to.\"\n    )\n    endif()\n\n  else()\n    add_custom_command(\n      TARGET ${ARG_TARGET}\n      POST_BUILD COMMAND\n      ${CMAKE_COMMAND} -E cmake_echo_color --cyan \"Not building PRX\"\n      )\n  endif()\n\n  add_custom_command(\n    TARGET ${ARG_TARGET}\n    POST_BUILD COMMAND\n    \"${PSPDEV}/bin/mksfoex\" \"-d\" \"MEMSIZE=1\" \"${ARG_TITLE}\" \"PARAM.SFO\"\n    COMMENT \"Calling mksfoex\"\n    )\n\n  if(${ARG_BUILD_PRX})\n    add_custom_command(\n      TARGET ${ARG_TARGET}\n      POST_BUILD COMMAND\n      \"${PSPDEV}/bin/pack-pbp\" \"EBOOT.PBP\" \"PARAM.SFO\" \"${ARG_ICON_PATH}\" \"NULL\" \"${ARG_PREVIEW_PATH}\"\n      \"${ARG_BACKGROUND_PATH}\" \"NULL\" \"$&lt;TARGET_FILE_DIR:${ARG_TARGET}&gt;/${ARG_TARGET}.prx\" \"NULL\"\n      COMMENT \"Calling pack-pbp with PRX file\"\n      )\n  else()\n    add_custom_command(\n      TARGET ${ARG_TARGET}\n      POST_BUILD COMMAND\n      \"${PSPDEV}/bin/pack-pbp\" \"EBOOT.PBP\" \"PARAM.SFO\" \"${ARG_ICON_PATH}\" \"NULL\" \"${ARG_PREVIEW_PATH}\"\n      \"${ARG_BACKGROUND_PATH}\" \"NULL\" \"$&lt;TARGET_FILE_DIR:${ARG_TARGET}&gt;/${ARG_TARGET}\" \"NULL\"\n      COMMENT \"Calling pack-pbp with ELF file\"\n      )\n  endif()\n\n  add_custom_command(\n    TARGET ${ARG_TARGET}\n    POST_BUILD COMMAND\n    ${CMAKE_COMMAND} -E cmake_echo_color --cyan \"EBOOT.PBP file created.\"\n    )\n\nendmacro()\n</code></pre></p>"},{"location":"cmake/#compile-your-own-bins","title":"Compile your own bins","text":""},{"location":"cmake/#psp-specific-code","title":"PSP Specific Code","text":""},{"location":"cmake/#porting-3rd-party-libs-to-psp","title":"Porting 3rd party libs to PSP","text":"<p>Using <code>./configure</code></p> <p>View pspdev/psp-packages for more info + <code>patch</code> file + <code>BUILD</code> file</p>"},{"location":"cwcheat/","title":"Patching Using CW Cheat","text":"<p>\u91d1\u624b\u6307\uff08CW Cheat\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u8868\u793a\u5185\u5b58\u4fee\u6539\u7684\u6587\u672c\u683c\u5f0f\u3002\u6587\u4ef6\u540e\u7f00\u540d\u901a\u5e38\u4e3a<code>.db</code>\u6216<code>.ini</code></p> <p>\u7528\u4e8e\u66ff\u6362\u5185\u5b58\u4e2d\u6570\u503c/\u673a\u5668\u4ee3\u7801\uff0c\u6216\u5411\u5185\u5b58\u4e2d\u6dfb\u52a0\u6570\u636e/\u673a\u5668\u4ee3\u7801\u3002</p> <p>\u5728PPSSPP\u652f\u6301\u6b64\u79cd\u683c\u5f0f\u540e\u5f97\u5230\u63a8\u5e7f\u3002</p> <p>\u901a\u8fc7\u5728PSP\u4e2d\u5b89\u88c5\u652f\u6301\u6b64\u7c7b\u683c\u5f0f\u7684PRX\u63d2\u4ef6(\u5982<code>CWCheat PSP</code>\u3001<code>CheatMaster Fusion PSP</code>)\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5b9e\u65f6\u52a0\u8f7d<code>CW Cheat</code>\u6587\u4ef6\u5e76\u4f9d\u636e\u5176\u6307\u4ee4\u4fee\u6539\u5185\u5b58\u503c\u3002\u5bf9\u4e8ePPSSPP\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5728PPSSPP\u4e2d\u8bbe\u7f6e\u5e76\u8fdb\u884c\u52a0\u8f7d\u3002</p> <p>\u672c\u8d28\u4e0a\u662f\u5185\u5b58\u4fee\u6539\u5668\u3002</p>"},{"location":"cwcheat/#_1","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"cwcheat/#cwcheat-psp","title":"<code>CWCheat PSP</code>","text":""},{"location":"cwcheat/#adding-cheat-codes","title":"Adding cheat codes","text":"<p>Cheat codes can be added by editing cheat.db and cheatpops.db (for PS1 games) in the seplugins/cwcheats/ folder:</p>"},{"location":"cwcheat/#load-cheat-codes","title":"Load cheat codes","text":"<p>Activate the cheat menu with the game running, select the cheat that you would like to enable or disable then return to the game.</p> <p>Select (hold 3 seconds) - Activate plugin</p> <p>Cross - Select</p> <p>Circle - Cancel</p> <p>Triangle - Enable all cheats</p>"},{"location":"cwcheat/#cheatmaster-fusion-psp","title":"<code>CheatMaster Fusion PSP</code>","text":"<p>\u5728\u56fd\u5185\u4f7f\u7528\u8f83\u591a\uff0c\u540c\u6837\u517c\u5bb9<code>CW Cheat</code>\u683c\u5f0f</p> <p>[Gamebrew\u5b58\u6863] \u56fd\u5185\u7684\u4f7f\u7528\u6559\u7a0b</p>"},{"location":"cwcheat/#ppsspp","title":"<code>PPSSPP</code>","text":""},{"location":"cwcheat/#_2","title":"\u57fa\u672c\u8bed\u6cd5","text":"<p>\u53c2\u8003\u8d44\u6599\uff1ahttps://datacrystal.romhacking.net/wiki/CwCheat</p> <pre><code>_S ULJM-05011 -&gt; Game ID.\n_G Puzzle Bobble Pocket [JP] -&gt; Game title.\n_C0 999999999 Points -&gt; Code name (_C0 to disable; _C1 to enable).\n_L 0x20566E30 0x3B9AC9FF -&gt; Code line (often has more than 1 line).\n</code></pre> <p>\u793a\u4f8b\uff1a</p> <ul> <li> <p>https://github.com/rezual/nge_2_re/blob/master/ULJS00064.ini</p> </li> <li> <p>https://raw.githubusercontent.com/Saramagrean/CWCheat-Database-Plus-/master/cheat.db</p> </li> </ul>"},{"location":"cwcheat/#cw-cheat","title":"\u5236\u4f5cCW Cheat","text":"<p>https://github.com/Bunkai9448/digipet_PSP/blob/main/Cheat4steps.md</p>"},{"location":"debug/","title":"Debug Tutorial","text":"<p>\u8c03\u8bd5\u662f\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5341\u5206\u91cd\u8981\u7684\u73af\u8282\u3002</p> <p>\u901a\u5e38\u6765\u8bb2\u6211\u4eec\u4e24\u79cd\u60c5\u51b5\u4e0b\u4f1a\u5728\u60f3\u8c03\u8bd5\u7a0b\u5e8f\uff1a + \u5f00\u53d1\u8fc7\u7a0b + \u9006\u5411\u8fc7\u7a0b</p> <p>\u9488\u5bf9\u8fd9\u4e24\u79cd\u4e0d\u540c\u7684\u9700\u6c42\uff0c\u6211\u4eec\u63a8\u8350\u5982\u4e0b\u4e24\u79cdDebug\u65b9\u6cd5\u3002 + \u5b9e\u673aDebug + \u6a21\u62df\u5668Debug</p> <p>\u5b9e\u9645\u4e0a\u4e3b\u8981\u662f\u56e0\u4e3aPPSSPP\u7684\u9650\u5236\uff0c\u4e0d\u80fd\u76f4\u63a5\u52a0\u8f7dELF\u6587\u4ef6\uff0c\u800c\u4e14PSPDEV\u751f\u6210PRX\u65f6\u53c8\u81ea\u52a8strip\u4e86\u7b26\u53f7\u8868\uff0c\u5bfc\u81f4\u52a0\u8f7d\u7684\u7a0b\u5e8f\u5b8c\u5168\u6ca1\u6709\u7b26\u53f7\u4fe1\u606f\u3002 \u5bf9\u4e8e\u9006\u5411\u5de5\u7a0b\u6765\u8bb2\uff0c\u56e0\u4e3a\u53d1\u884c\u7684\u6e38\u620f\u672c\u6765\u5c31\u5df2\u7ecf\u79fb\u9664\u4e86\u7b26\u53f7\u8868\uff0c\u6ca1\u6709\u51fd\u6570\u540d\u4ec0\u4e48\u7684\u63d0\u793a\u5012\u4e5f\u65e0\u59a8\u3002\u4f46\u4f7f\u7528<code>PPSSPP</code>Debug\u81ea\u5df1\u5199\u7684\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u80fd\u663e\u793a\u5bf9\u5e94\u7684\u6e90\u6587\u4ef6\u548c\u884c\u53f7\uff0c\u751a\u81f3\u8fde\u51fd\u6570\u540d\u90fd\u4e0d\u77e5\u9053\uff0c\u5c31\u5341\u5206\u75db\u82e6\u4e86\u3002</p> <p>\u521a\u624d\u5f97\u77e5\uff0cPPSSPP\u53ef\u4ee5\u5bfc\u51fa\u548c\u5bfc\u5165\u7b26\u53f7\u8868\uff0c\u8fd8\u53ef\u4ee5\u4e0eGhida\u4ea4\u4e92\uff0c\u8fdb\u884c\u9759\u6001\u5206\u6790 \u53c2\u89c1https://github.com/Bunkai9448/digipet_PSP/blob/main/RE_Guide.md#Text-File</p> <p>\u5b9e\u673aDebug\u5c31\u4f7f\u7528pspsh\u4e0epsp-gdb\uff0c\u9006\u5411\u7684\u65f6\u5019\u4f7f\u7528PPSSPP\u5c31\u5341\u5206\u65b9\u4fbf\u4e86\u3002</p>"},{"location":"debug/#debug-using-pspsh-psp-gdb","title":"Debug Using <code>pspsh</code> &amp; <code>psp-gdb</code>","text":"<p>\u4f7f\u7528\u5b9e\u673aDebug\u6709\u5f88\u591a\u597d\u5904</p>"},{"location":"debug/#psplink","title":"PSPLink","text":"<p>PSPLink is a development tool which provides a text terminal on the PSP. Some of the features it provides are: Terminal access through SIO, Wifi or USB. Access to the PC\u2019s file system through USB and the host: device Preconfigured tty (stdin, stdout, stderr) Exception handler for catching software bugs Remote GDB stub over Wifi and USB for source level debugging Real time kernel inspection (Thread/Module lists, memory dumping and patching</p>"},{"location":"debug/#pspinside","title":"PSPInside","text":""},{"location":"debug/#debug-using-ppsspp","title":"Debug Using <code>PPSSPP</code>","text":"<ul> <li>\u300a\u8be1\u8ba1\u5bf9\u903b\u8f91\u300b\u6c49\u5316\u7814\u7a76</li> <li>https://datacrystal.romhacking.net/wiki/Blaze_Union/Tutorials</li> <li>https://github.com/Bunkai9448/digipet_PSP/blob/main/RE_Guide.md</li> </ul> <p>PPSSPP\u81ea\u5e26\u7684\u8c03\u8bd5\u5de5\u5177\u7b97\u5f88\u5f3a\u5927\u4e86\u3002\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u5b83\u7684\u529f\u80fd\u3002</p> <ul> <li>\u67e5\u770b\u5bc4\u5b58\u5668</li> <li>\u67e5\u770b\u5185\u5b58</li> <li>\u7ed9\u7cfb\u7edf\u8c03\u7528\u6253\u65ad\u70b9</li> </ul> <p>\u5177\u4f53\u7528\u6cd5\u53ef\u4ee5\u53c2\u8003\u94fe\u63a5\u3002</p> <p>\u51e0\u79cd\u5185\u5b58\u5730\u5740\u7684\u53d8\u6362</p> <ul> <li>PSP\u7684\u5185\u5b58\u5730\u5740\u7a7a\u95f4</li> <li>Dump\u51fa\u7684\u5185\u5b58</li> <li>ELF\u4e2d\u7684vmaddr</li> </ul>"},{"location":"debug/#debug-using-ppsspp-with-ghidra","title":"Debug using <code>PPSSPP</code> with <code>Ghidra</code>","text":""},{"location":"debug/#makefile-example-from-retroarch","title":"Makefile Example (From <code>RetroArch</code>)","text":"<ul> <li>After <code>include</code> <pre><code>debug:\n    /snap/bin/ppsspp-emu.ppsspp-sdl EBOOT.BIN\n</code></pre></li> </ul> <p>If you are using Ubuntu and install PPSSPP from snap. + Program Location: /snap/bin/ppsspp-emu.ppsspp-sdl + <code>PSP</code> Folder Location: ~/snap/ppsspp-emu/common/.config/ppsspp</p>"},{"location":"environment/","title":"Set Up the Environment","text":"<p>\u5728\u5f00\u59cb\u7f16\u5199\u7a0b\u5e8f\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u914d\u7f6e\u597d\u76f8\u5173\u7684\u73af\u5883\u3002</p> <p>\u53c2\u89c1\uff1ahttps://pspdev.github.io/</p> <p>\u6ce8\u610f\uff1a\u4f7f\u7528Ubuntu 22.04\u53ca\u4ee5\u4e0a\u7248\u672c</p>"},{"location":"environment/#install-pspdev-toolchain","title":"Install PSPDEV Toolchain","text":""},{"location":"environment/#dependencies","title":"Dependencies","text":"<p>\u60f3\u4f7f\u7528PSPDev\u63d0\u4f9b\u7684\u5de5\u5177\u94fe\uff0c\u9996\u5148\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56 <pre><code>sudo apt-get update\nsudo apt-get install build-essential cmake pkgconf libreadline8 libusb-0.1 libgpgme11 libarchive-tools fakeroot\n</code></pre> \u8fd9\u5176\u4e2d\u6709<code>CMake</code>\u3001<code>pkgconf</code>\u4e4b\u7c7b\u7684\u6784\u5efa\u5de5\u5177\uff0c\u4e5f\u6709\u7528\u4e8e\u8fde\u63a5PSP\u8fdb\u884c\u8c03\u8bd5\u7684<code>libusb</code>\u7b49\u5de5\u5177</p>"},{"location":"environment/#download-pspdev-from-website","title":"Download PSPDev from website","text":"<ul> <li> <p>Using <code>curl</code> <pre><code>curl -JLO URL_of_the_file\n</code></pre></p> </li> <li> <p>Using <code>wget</code> <pre><code>wget URL\n</code></pre></p> </li> </ul>"},{"location":"environment/#extract-the-file-using-tar","title":"Extract the file using <code>tar</code>","text":"<p><code>tar -xvf pspdev-ubuntu-latest.tar.gz</code></p> <p>\u73b0\u5728\u5f53\u524d\u76ee\u5f55\u5e94\u8be5\u51fa\u73b0\u4e00\u4e2a\u540d\u4e3apspdev\u7684\u6587\u4ef6\u5939\u3002</p>"},{"location":"environment/#vscode","title":"\u4f7f\u7528VSCode\u8fdc\u7a0b\u8fde\u63a5\u4e4b","text":""},{"location":"environment/#ssh","title":"SSH","text":"<p>\u914d\u7f6eSSH <code>sudo apt install openssh-server</code></p>"},{"location":"environment/#vscode_1","title":"VSCode\u8fde\u63a5\u670d\u52a1\u5668\u4e0b\u8f7d\u5361\u4f4f","text":"<p>https://blog.csdn.net/qq_45021180/article/details/131444776</p>"},{"location":"environment/#ccincludepath","title":"\u8bbe\u7f6eC/C++\u63d2\u4ef6\u7684includePath","text":"<p>VSCode\u5e76\u4e0d\u77e5\u9053\u4f60\u8981\u7528\u5230\u7684PSPSDK\u4e2d\u7684\u5934\u6587\u4ef6\u5728\u54ea\u91cc\uff0c\u65e0\u6cd5\u63d0\u4f9b\u81ea\u52a8\u8865\u5168\uff0c\u4f1a\u6807\u6ce8\u7ea2\u6ce2\u6d6a\u7ebf\u3002\u5728C/C++\u63d2\u4ef6\u7684json\u914d\u7f6e\u6587\u4ef6\u4e2d\u4fee\u6539 \u672c\u8d28\u4e0a\u9488\u5bf9PSP\u7684\u5f00\u53d1\u5c31\u662f\u8de8\u5e73\u53f0\u7f16\u8bd1\u3002\u4e0ex86\u4e0b\u5bf9arm\u67b6\u6784\u7684\u5f00\u53d1\u6d41\u7a0b\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904 https://code.visualstudio.com/docs/cpp/configure-intellisense-crosscompilation</p> <p>https://code.visualstudio.com/docs/cpp/launch-json-reference</p>"},{"location":"environment/#git-proxy-config","title":"Git Proxy Config","text":"<pre><code>git config --global http.proxy \"http://...\"\ngit config --global https.proxy \"http://\"\n</code></pre> <pre><code>git config --global --unset http.proxy\ngit config --global --unset https.proxy\n</code></pre>"},{"location":"format/","title":"Format Specification","text":"<p>\u5728PSP\u5f00\u53d1\u4e2d\u6d89\u53ca\u7684\u6587\u4ef6\u683c\u5f0f</p> <p>\u63a8\u8350\u9605\u8bfb\uff1a</p> <p>Yet another PSP Documentation Chapter 26: File Formats (2006)</p>"},{"location":"format/#elf","title":"ELF","text":"<p>\u7ecf\u5178\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u3002\u7ecf\u8fc7<code>psp-prxgen</code>\u53ef\u4ee5\u53d8\u6362\u4e3aPRX\u3002</p>"},{"location":"format/#prx","title":"PRX","text":"<p>\u7279\u6b8a\u7684\u53ef\u6267\u884c\u6587\u4ef6 + Encrypted \u5728OFW\u4e0a\u8fd0\u884c\uff0c\u7406\u8bba\u4e0a\u9700\u8981\u7d22\u5c3c\u6388\u6743\u52a0\u5bc6 + Unencrypted \u5728CFW\u4e0a\u8fd0\u884c</p> <p>PRX \u6587\u4ef6\u9700\u8981\u91cd\u70b9\u8bb2\u4e00\u4e0b\u3002\u5b83\u91cc\u9762\u6d89\u53ca\u5230\u592a\u591a\u4f7f\u7528StubLibrary\u548c\u5bfc\u5165\u5bfc\u51fa\u76f8\u5173\u7684\u89c4\u5219</p>"},{"location":"format/#sfo","title":"SFO","text":"<p>SFO\uff08System File Object\uff09\u7528\u4e8e\u50a8\u5b58\u9700\u8981\u5728PSP XMB\uff08XrossMediaBar\uff09\u4e2d\u663e\u793a\u7684\u6587\u4ef6\u3002</p> <p>SFO\u540c\u6837\u5b58\u5728\u4e8ePS3\u3001PS Vita\u548cPS4\u4e0a\u3002</p> <ul> <li>SFO\u4e2d\u5305\u542b\u7684\u503c\u53ef\u4ee5\u7b80\u5316\u4e3a\u5185\u5bb9\u7684\u8f93\u5165/\u8f93\u51fa\uff1a<ul> <li>\u542f\u52a8\u4fee\u6539\u5668\uff08\u5927\u591a\u6570\u4e3aint32\u6570\u636e\uff09\uff0c\u5728\u5185\u5bb9\u88ab\u6267\u884c\u65f6\u53d1\u9001\u7ed9\u5185\u5bb9\uff0c\u4ee5\u6fc0\u6d3b\u7279\u5b9a\u529f\u80fd\u6216\u8bbe\u7f6e\uff08\u4f8b\u5982\u6e38\u620f\u7684\u97f3\u9891\u548c\u89c6\u9891\u6a21\u5f0f\uff09\u3002</li> <li>\u5173\u4e8e\u5185\u5bb9\u53ca\u5176\u9650\u5236\u7684\u4fe1\u606f\u6587\u672c\uff08\u5927\u591a\u6570\u4e3aUTF-8\u6570\u636e\uff09\uff0c\u4f8b\u5982\u6e38\u620f\u7684\u6807\u9898\u548c\u7248\u672c\u3002</li> </ul> </li> </ul>"},{"location":"format/#pbp","title":"PBP","text":""},{"location":"githubactions/","title":"CI/CD","text":"<p>\u81ea\u52a8\u6784\u5efa EBOOT.PBP</p> <p>\u53c2\u8003\u8d44\u6599\uff1ahttps://github.com/IridescentRose/PSP-GH-Actions-Test/</p> <p>Using CMake &amp; build yourself. https://github.com/Iridescence-Technologies/Stardust-Celeste/blob/edge/.github/workflows/stardust.yml</p>"},{"location":"githubactions/#_1","title":"\u5173\u4e8e\u6301\u7eed\u90e8\u7f72","text":"<p>\u6301\u7eed\u90e8\u7f72 (CD) \u662f\u4f7f\u7528\u81ea\u52a8\u5316\u53d1\u5e03\u548c\u90e8\u7f72\u8f6f\u4ef6\u66f4\u65b0\u7684\u505a\u6cd5\u3002 \u6211\u4eec\u5e0c\u671b Github \u5728\u4ee3\u7801\u66f4\u65b0\u65f6\u81ea\u52a8\u4e3a\u6211\u4eec\u6784\u5efa\u548c\u53d1\u5e03 EBOOT.PBP</p>"},{"location":"githubactions/#github-actions","title":"Github Actions","text":"<p>PSPDev \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5df2\u7ecf\u914d\u7f6e\u597d PSP \u5f00\u53d1\u73af\u5883\u7684 Docker\uff0c\u53ef\u4ee5\u4f7f\u7528 GithubActions \u901a\u8fc7 Docker \u6784\u5efa EBOOT.PBP</p> <pre><code># This is a basic workflow to help you get started with Actions\n\nname: CI\n\n# Controls when the workflow will run\non:\n  # Triggers the workflow on push or pull request events but only for the master branch\n  push:\n    branches: [master]\n  pull_request:\n    branches: [master]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n    # Docker Image\n    container: pspdev/pspdev:latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      - name: Install Dependencies\n        run: |\n          apk add cmake gmp mpc1 mpfr4 make\n\n      - name: Checkout\n        uses: actions/checkout@v2\n\n      - name: Build\n        run: |\n          make\n\n      - name: Upload a Build Artifact\n        uses: actions/upload-artifact@v2.3.0\n        with:\n          # Artifact name\n          name: PSP_Artifact # optional, default is artifact\n          # A file, directory or wildcard pattern that describes what to upload\n          path: EBOOT.PBP\n          if-no-files-found: warn # optional, default is warn\n          retention-days: 30 # optional\n</code></pre>"},{"location":"helloworld/","title":"Our first example","text":"<p>\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff08\u6a21\u5757\uff09\u867d\u7136\u4ec5\u4ec5\u662f\u5b9e\u73b0\u4e86\u6253\u5370 Hello World \u7684\u90e8\u5206\uff0c\u5176\u4e2d\u8574\u542b\u7684\u77e5\u8bc6\u5374\u5f02\u5e38\u7e41\u6742\u3002\u5bf9\u4e8e\u521d\u6b21\u63a5\u89e6PSP\u5f00\u53d1\u7684\u4eba\u72b9\u4e3a\u56f0\u96be\uff0e\u76ee\u800c\u6211\u4eec\u9996\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u8ba1\u7b97\u673a\u7cfb\u7edf\u76f8\u5173\u7684\u6982\u5ff5\u3002</p> <p>\u63a8\u8350\u9605\u8bfb\uff1aCS:APP \u5f02\u5e38\u63a7\u5236\u6d41</p>"},{"location":"helloworld/#_1","title":"\u7cfb\u7edf\u8c03\u7528","text":"<p>\u6709\u4e9b\u64cd\u4f5c\u7528\u6237\u6001\u7a0b\u5e8f\u6ca1\u6709\u6743\u9650\u6267\u884c\uff0c\u5fc5\u987b\u4f9d\u9760\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u51fd\u6570\uff0e\u901a\u8fc7PPSSPP\u7684\u53cd\u6c47\u7f16\u529f\u80fd\u53ef\u4ee5\u770b\u5230\u7a0b\u5e8f\u5982\u4f55\u8c03\u7528\u8fd9\u4e9b\u5bf9\u7528\u6237\u800c\u8a00\u4e0d\u53ef\u518d\u5206\u7684\u6700\u57fa\u672c\u7684\u51fd\u6570\u3002</p> <p>\u6ce8\uff1a\u5e0c\u671bPPSSPP\u4eca\u540e\u80fd\u591f\u63d0\u4f9b\u5bf9elf\u6587\u4ef6\u7684\u652f\u6301\u4ee5\u4fbf\u4e8edebug \u5176\u5b9e\u6211\u4eec\u9762\u5bf9\u4e00\u4e2a\u73b0\u6210\u7684\u5e93\u65f6\u5c31\u6709\u70b9\u50cf\u9762\u5bf9\u64cd\u4f5c\u7cfb\u7edf\uff1a\u6211\u4eec\u4e0d\u4e86\u89e3\u4e5f\u4e0d\u5173\u5fc3\u5b83\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u800c\u53ea\u4e13\u6ce8\u4e8e\u5b83\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u63a5\u53e3</p>"},{"location":"helloworld/#thread","title":"\u7ebf\u7a0b\uff08Thread\uff09","text":"<ul> <li>\u8fdb\u7a0b\uff08Process\uff09\u662f\u5728\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e0d\u540c\u5730\u5740\u7a7a\u95f4\u4e0b\u540c\u65f6\u8fd0\u884c\u7684\u7a0b\u5e8f</li> <li>\u7ebf\u7a0b\u662f\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u62bd\u8c61\u51fa\u7684\u5728\u540c\u4e00\u5730\u5740\u7a7a\u95f4\u4e2d\u540c\u65f6\u6267\u884c\u7684\u4ee3\u7801\uff0e</li> </ul> <p>\u5728\u9762\u5bf9\u5e76\u53d1\u7684\u95ee\u9898\u65f6\uff0c\u4e24\u8005\u8981\u8003\u8651\u7684\u95ee\u9898\u6709\u8bf8\u591a\u76f8\u4f3c\u6027\uff0e</p>"},{"location":"helloworld/#_2","title":"\u5206\u5757\u89e3\u8bfb","text":"<ol> <li>\u5947\u602a\u7684\u5b8f PSP_MODULE_INFO() \u5728\u751f\u6210PRX\u65f6\u6709\u7528\uff0c\u7f6e\u4e8e<code>.rodata.sceModuleInfo</code>\uff0c\u53c2\u770b\u6587\u4ef6\u683c\u5f0f\u4e00\u8282</li> <li>Exit Call Back \u56de\u8c03\u51fd\u6570\uff1a\u67d0\u4e8b\u4ef6\u53d1\u751f\u65f6\uff08\u6536\u5230\u4fe1\u53f7\u65f6\uff09\u5f02\u5e38\u63a7\u5236\u6d41\u5207\u5165\u7684\u51fd\u6570 \u76ee\u6807\uff1a\u6ce8\u518c\u56de\u8c03\u51fd\u6570 \u624b\u6bb5\uff1a\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u6ce8\u518c \u6709\u4e86\u5b83\u6211\u4eec\u5c31\u53ef\u4ee5\u5728PSP\u4e0a\u6309Home\u952e\u8c03\u51fa\u9000\u51fa\u5bf9\u8bdd\u6846</li> <li>Event Loop \u5faa\u73af\u6267\u884c</li> <li>\u7cfb\u7edf\u7ea7\u51fd\u6570\u8c03\u7528 pspsdk\u66b4\u9732\u51fa\u7684\u53ef\u4f9b\u8c03\u7528\u800c\u4e0d\u660e\u5b9e\u73b0\u7684\u51fd\u6570</li> </ol>"},{"location":"makefilesample/","title":"Makefile Example","text":"<p>\u7f16\u5199\u597d\u4ee3\u7801\u4e4b\u540e\uff0c\u8fd8\u9700\u8981\u7f16\u8bd1\u6c47\u7f16\u94fe\u63a5\u624d\u80fd\u751f\u6210 PSP \u53ef\u6267\u884c\u7684\u6587\u4ef6\u3002PSPDev \u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u7684 GNU \u5de5\u5177\u94fe\u4f9b\u7f16\u8bd1\u4f7f\u7528\u3002</p>"},{"location":"makefilesample/#_1","title":"\u63a8\u8350\u9605\u8bfb","text":"<p>\u3010\u3010\u6280\u672f\u6742\u8c08\u3011C \u7f16\u8bd1\u4f53\u7cfb\u3011 https://www.bilibili.com/video/BV1J14y1D7Sw</p> <p>\u3010\u5176\u4ed6\u3011make \u5230\u5e95\u5e72\u4e86\u4e9b\u4ec0\u4e48 http://bbs.chinaemu.org/read-htm-tid-86754-uid-12451.html</p>"},{"location":"makefilesample/#ebootpbp","title":"EBOOT.PBP \u7684\u6784\u5efa\u6d41\u7a0b","text":"<ol> <li>\u7f16\u8bd1\u751f\u6210.o \u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\uff08\u81ea\u5df1\u8d1f\u8d23\uff09\u3002\u6307\u5b9a\u53d8\u91cf<code>OBJS</code></li> <li> <p>\u94fe\u63a5\u9759\u6001\u94fe\u63a5\u5e93\uff08.a \u6587\u4ef6\uff0c\u5728 pspdev/psp/sdk/lib \u4e2d\uff09\u751f\u6210 ELF \u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u3002\u6307\u5b9a\u53d8\u91cf<code>LIBS</code> <pre><code>$(TARGET).elf: $(OBJS) $(EXPORT_OBJ)\n  $(LINK.c) $^ $(LIBS) -o $@\n  $(FIXUP) $@\n</code></pre>     \u6ce8\uff1aLINK.C \u662f GNU MAKE \u4e2d\u9ed8\u8ba4\u7684\u53d8\u91cf\uff0c\u4f1a\u5c55\u5f00\uff0c\u7528\u4e8e\u7f16\u8bd1\u548c\u94fe\u63a5\u3002\u53ef\u4f7f\u7528<code>make -p | grep LINK.c</code>\u67e5\u770b</p> <p>\u6ce8\uff1a\u53c2\u8003 CSAPP 7.6.2 \u4e0e\u9759\u6001\u5e93\u94fe\u63a5 3.  \u4f7f\u7528<code>psp-fixup-imports</code>\u4fee\u590d ELF \u6587\u4ef6\u7684\u5bfc\u5165\u8868\u3002 <pre><code>$(TARGET).elf: $(OBJS) $(EXPORT_OBJ)\n    $(LINK.c) $^ $(LIBS) -o $@\n    $(FIXUP) $@\n</code></pre> 4.  \u751f\u6210 PSP \u4e0a\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002PSP \u652f\u6301 ELF \u548c PRX \u4e24\u79cd\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u3002    - \uff08\u9009\u62e9 1\uff09\u4f7f\u7528 psp-strip \u5220\u9664 ELF \u6587\u4ef6\u4e2d\u7684\u7b26\u53f7\u8868\u4fe1\u606f   <pre><code>$(STRIP) $(TARGET).elf -o $(TARGET)_strip.elf\n</code></pre></p> <ul> <li> <p>\uff08\u9009\u62e9 2\uff09\u7528 psp-prxgen \u751f\u6210 PRX \u6587\u4ef6\uff08\u671f\u95f4\u4f1a\u5220\u9664\u7b26\u53f7\u8868\u4fe1\u606f\uff09\u3002\u6307\u5b9a\u53d8\u91cf<code>BUILD_PRX</code> <pre><code>%.prx: %.elf\n  psp-prxgen $&lt; $@\n</code></pre></p> </li> <li> <p>\u5bf9\u4e8e PRX \u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528<code>PrxEncrypter</code>\u8fdb\u884c\u52a0\u5bc6\u4f7f\u5176\u80fd\u5728\u672a\u7ecf\u4fee\u6539\u7684 PSP \u4e0a\u8fd0\u884c\u3002\u6307\u5b9a\u53d8\u91cf<code>ENCRYPT</code> <pre><code>ifeq ($(ENCRYPT), 1)\n  - $(ENC) $(TARGET).prx $(TARGET).prx\n</code></pre></p> </li> </ul> <p>Hint</p> <p>PRX \u6587\u4ef6\u7684\u751f\u6210\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684 ELF \u6587\u4ef6\u3002\u5982\u679c\u6700\u7ec8\u76ee\u6807\u662f\u751f\u6210 PRX \u6587\u4ef6\uff0c\u5219\u5728\u7b2c\u4e8c\u6b65\u94fe\u63a5\u751f\u6210 ELF \u6587\u4ef6\u65f6\u9664\u4e86\u6307\u5b9a\u9759\u6001\u94fe\u63a5\u5e93\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e9b\u9644\u52a0\u7684\u6307\u4ee4\u3002 <pre><code>LDFLAGS  := $(addprefix -L,$(LIBDIR)) -specs=$(PSPSDK)/lib/prxspecs -Wl,-q,-T$(PSPSDK)/lib/linkfile.prx $(LDFLAGS)\n</code></pre> 5.  \u4f7f\u7528 mksfo/mksfoex \u751f\u6210 SFO \u4fe1\u606f\u6587\u4ef6\u3002\u6307\u5b9a\u76f8\u5173\u53d8\u91cf<code>SFOFLAGS</code> <code>PSP_EBOOT_TITLE</code> <pre><code>$(PSP_EBOOT_SFO):\n$(MKSFO) $(SFOFLAGS) '$(PSP_EBOOT_TITLE)' $@\n</code></pre></p> <p>Hint</p> <p>\u6709\u5173 SFO \u6587\u4ef6\u683c\u5f0f\uff0c\u53c2\u8003\u6587\u4ef6\u683c\u5f0f\u4e00\u9875\u3002   \u6709\u5173mksfo\u4f7f\u7528\u53ca\u6e90\u7801\u89e3\u6790\uff0c\u53c2\u8003\u5de5\u5177\u4e00\u9875\u3002</p> </li> <li> <p>\u4f7f\u7528 pack-pbp \u5c06 SFO \u6587\u4ef6\u3001ELF/PRX \u6587\u4ef6\u548c\u5176\u4ed6\u8d44\u6e90\u6587\u4ef6\u6253\u5305\u751f\u6210 EBOOT.PBP\u3002\u6307\u5b9a\u76f8\u5173\u53d8\u91cf<code>PSP_EBOOT_SFO</code>\u3001<code>PSP_EBOOT_ICON</code>\u3001<code>PSP_EBOOT_ICON1</code>\u3001<code>PSP_EBOOT_UNKPNG</code>\u3001<code>PSP_EBOOT_PIC1</code>\u3001<code>PSP_EBOOT_SND0</code>\u3001<code>PSP_EBOOT_PSAR</code></p> <pre><code>$(PACK_PBP) $(PSP_EBOOT) $(PSP_EBOOT_SFO) $(PSP_EBOOT_ICON)  \\\n    $(PSP_EBOOT_ICON1) $(PSP_EBOOT_UNKPNG) $(PSP_EBOOT_PIC1)  \\\n    $(PSP_EBOOT_SND0)  $(TARGET)_strip.elf $(PSP_EBOOT_PSAR)\n</code></pre> <p>Hint</p> <p>\u6709\u5173 PBP \u6587\u4ef6\u683c\u5f0f\uff0c\u53c2\u8003\u6587\u4ef6\u683c\u5f0f\u4e00\u9875\u3002 \u6709\u5173pack-pbp\u4f7f\u7528\u53ca\u6e90\u7801\u89e3\u6790\uff0c\u53c2\u8003\u5de5\u5177\u4e00\u9875\u3002</p> </li> </ol>"},{"location":"makefilesample/#helloworld-makefile","title":"HelloWorld \u793a\u4f8b\u4e2d\u7684 Makefile","text":""},{"location":"makefilesample/#pspdev-makefile","title":"PSPDEV \u63d0\u4f9b\u7684\u57fa\u7840 Makefile","text":"<p>\u4e0d\u8981\u5fd8\u8bb0\u4e86\uff0c\u5199\u7b14\u8bb0\u7684\u76ee\u7684\u4e0d\u4ec5\u4ec5\u662f\u4e3a\u4e86\u4f7f\u7528 PSPSDK \u5f00\u53d1\uff0c\u66f4\u662f\u4e3a\u4e86\u5b66\u4e60\u76f8\u5173\u77e5\u8bc6\u3002\u6240\u4ee5\u5728\u89e3\u6790 Makefile \u7684\u8fc7\u7a0b\u4e2d\u4f1a\u7a7f\u63d2\u77e5\u8bc6\u70b9\u548c\u53c2\u8003\u3002 \u4f4d\u4e8e<code>pspdev/psp/sdk/lib</code>\u57fa\u7840\u7684 Makefile \u6587\u4ef6<code>build.mak</code>\uff0c\u901a\u5e38\u4f1a\u5728\u81ea\u5df1\u7684 Makefile \u5305\u542b\u3002</p> pspdev/psp/sdk/lib/build.mak<pre><code># Note: The PSPSDK make variable must be defined before this file is included.\nifeq ($(PSPSDK),)\n$(error $$(PSPSDK) is undefined.  Use \"PSPSDK := $$(shell psp-config --pspsdk-path)\" in your Makefile)\nendif\n</code></pre> <p>\u4f7f\u7528\u524d\u8981\u6c42\u53d8\u91cf PSPSDK \u5df2\u7ecf\u88ab\u5b9a\u4e49\u3002</p> <pre><code>CC       = psp-gcc\nCXX      = psp-g++\nAS       = psp-gcc\nLD       = psp-gcc\nAR       = psp-gcc-ar\nRANLIB   = psp-gcc-ranlib\nSTRIP    = psp-strip\nMKSFO    = mksfoex\nPACK_PBP = pack-pbp\nFIXUP    = psp-fixup-imports\nENC      = PrxEncrypter\n</code></pre> <p>\u901a\u8fc7\u53d8\u91cf\u5b9a\u4e49\u4e86\u9700\u8981\u7528\u5230\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u7f29\u5199\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u4f4d\u4e8e\u524d\u8ff0\u7684<code>pspdev/bin</code>\u4e2d \u5176\u4e2d<code>psp-strip</code>\u7528\u4e8e\u5220\u9664 ELF \u7b26\u53f7\u8868\u4ee5\u4f18\u5316\u6587\u4ef6\u5927\u5c0f\uff0c<code>mksfoex</code>\u7528\u4e8e\u751f\u6210<code>SFO</code>\u6587\u4ef6\uff0c<code>PrxEncrypter</code>\u7528\u4e8e\u52a0\u5bc6<code>PRX</code>\u6587\u4ef6</p> <pre><code># Add PSPSDK includes and libraries.\nINCDIR   := $(INCDIR) . $(PSPDEV)/psp/include $(PSPSDK)/include\nLIBDIR   := $(LIBDIR) . $(PSPDEV)/psp/lib $(PSPSDK)/lib\n\nCFLAGS   := $(addprefix -I,$(INCDIR)) -G0 $(CFLAGS)\nCXXFLAGS := $(CFLAGS) $(CXXFLAGS)\nASFLAGS  := $(CFLAGS) $(ASFLAGS)\n\nSFOFLAGS := -d MEMSIZE=$(EXPAND_MEMORY) $(SFOFLAGS)\n\nCFLAGS += -D_PSP_FW_VERSION=$(PSP_FW_VERSION)\nCXXFLAGS += -D_PSP_FW_VERSION=$(PSP_FW_VERSION)\nLDFLAGS  := $(addprefix -L,$(LIBDIR)) -specs=$(PSPSDK)/lib/prxspecs -Wl,-q,-T$(PSPSDK)/lib/linkfile.prx $(LDFLAGS)\n# Reduce binary size\nLDFLAGS +=  -Wl,-zmax-page-size=128\n\nifeq ($(USE_KERNEL_LIBS),1)\nLIBS := -nostdlib $(LIBS) -lpspdebug -lpspdisplay_driver -lpspctrl_driver -lpspmodinfo -lpspsdk -lpspkernel\nelse\nLIBS := $(LIBS) -lpspdebug -lpspdisplay -lpspge -lpspctrl \\\n        -lpspnet -lpspnet_apctl\nendif\n\n$(PSP_EBOOT_SFO):\n    $(MKSFO) $(SFOFLAGS) '$(PSP_EBOOT_TITLE)' $@\n\nifeq ($(BUILD_PRX),1)\n$(PSP_EBOOT): $(TARGET).prx $(PSP_EBOOT_SFO)\nifeq ($(ENCRYPT), 1)\n    - $(ENC) $(TARGET).prx $(TARGET).prx\nendif\n    $(PACK_PBP) $(PSP_EBOOT) $(PSP_EBOOT_SFO) $(PSP_EBOOT_ICON)  \\\n        $(PSP_EBOOT_ICON1) $(PSP_EBOOT_UNKPNG) $(PSP_EBOOT_PIC1)  \\\n        $(PSP_EBOOT_SND0)  $(TARGET).prx $(PSP_EBOOT_PSAR)\nelse\n$(PSP_EBOOT): $(TARGET).elf $(PSP_EBOOT_SFO)\n    $(STRIP) $(TARGET).elf -o $(TARGET)_strip.elf\n    $(PACK_PBP) $(PSP_EBOOT) $(PSP_EBOOT_SFO) $(PSP_EBOOT_ICON)  \\\n        $(PSP_EBOOT_ICON1) $(PSP_EBOOT_UNKPNG) $(PSP_EBOOT_PIC1)  \\\n        $(PSP_EBOOT_SND0)  $(TARGET)_strip.elf $(PSP_EBOOT_PSAR)\n    -rm -f $(TARGET)_strip.elf\nendif\n\n%.prx: %.elf\n    psp-prxgen $&lt; $@\n\n%.c: %.exp\n    psp-build-exports -b $&lt; &gt; $@\n</code></pre> <p>LINK.c The basic cc command line to link object files, such as COMPILE.c, but without the -c option and with a reference to the LDFLAGS macro:</p> <pre><code>LINK.c=$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS)\n</code></pre> <p>https://docs.oracle.com/cd/E19504-01/802-5880/6i9k05dhg/index.html#make-40951</p> <p>Running \"make -p\" without a Makefile will show you Make's default variables and rules. Like those for linking; among others:</p> <p>LINK.o = $(CC) $(LDFLAGS) $(TARGET_ARCH) LINK.cc = $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH) LINK.C = $(LINK.cc) LINK.cpp = $(LINK.cc) https://lists.gnu.org/archive/html/help-make/2012-01/msg00058.html</p> <p>make -p | grep LINK.c</p> <p>A Makefile will automate the build process. Below is the basic actions it does. If on Linux, translation of the -I and -L switches will be needed, as this points to a typical windows install directory. To get this path correct 100% of the time, a tool called psp-config is available. Try using psp-config -p and append it with /include for -I and /lib for -L.</p> <pre><code>psp-gcc -O0 -g3 -Wall -I. -IC:/pspsdk/psp/sdk/include -L. -LC:/pspsdk/psp/sdk/lib -D_PSP_FW_VERSION=150 -c *.c -lpspdebug -lpspdisplay -lpspge -lpspctrl -lpspsdk -lc -lpspnet -lpspnet_inet -lpspnet_apctl -lpspnet_resolver -lpsputility -lpspuser -lpspkernel\n\npsp-gcc -O0 -g3 -Wall -I. -IC:/pspsdk/psp/sdk/include -L. -LC:/pspsdk/psp/sdk/lib -D_PSP_FW_VERSION=150 -o raw_eboot.elf *.o -lpspdebug -lpspdisplay -lpspge -lpspctrl -lpspsdk -lc -lpspnet -lpspnet_inet -lpspnet_apctl -lpspnet_resolver -lpsputility -lpspuser -lpspkernel\n\npsp-fixup-imports raw_eboot.elf\nmksfo 'XMB_TITLE' PARAM.SFO\npsp-strip raw_eboot.elf -o strip_eboot.elf\npack-pbp EBOOT.PBP PARAM.SFO NULL NULL NULL NULL NULL strip_eboot.elf NULL\n</code></pre> <p>Compile all the files into objects Link all objects and libraries into an .elf file Create a .SFO file for XMB use Strip the .elf file to shrink size and reduce redundancy Create an EBOOT.PBP file, which houses additional XMB information (see pack-pbp --help)</p> <p>https://en.wikibooks.org/wiki/PSP_Development/Hello_World_Application</p>"},{"location":"makefilesample/#libraries-available","title":"Libraries Available","text":"<p><pre><code>cmake\ncrt0.o\ncrt0_prx.o\nldscripts\nlibAngelscript.a\nlibGL.a\nlibGLU.a\nlibSDL.a\nlibSDL2.a\nlibSDL2_gfx.a\nlibSDL2_image.a\nlibSDL2_mixer.a\nlibSDL2_ttf.a\nlibSDL2main.a\nlibSDL_gfx.a\nlibSDL_image.a\nlibSDL_mixer.a\nlibSDL_ttf.a\nlibSDLmain.a\nlibargtable2.a\nlibatomic.a\nlibatomic.la\nlibbulletml.a\nlibbz2.a\nlibc.a\nlibcglue.a\nlibcjson.a\nlibcjson_utils.a\nlibconfuse.a\nlibconfuse.la\nlibcurl.a\nlibdumb.a\nlibenet.a\nlibexpat.a\nlibfreetype.a\nlibg.a\nlibglut.a\nlibintrafont.a\nlibjpeg.a\nlibjsoncpp.a\nliblua.a\nlibm.a\nlibmad.a\nlibmbedcrypto.a\nlibmbedtls.a\nlibmbedx509.a\nlibmikmod.a\nlibminizip.a\nlibogg.a\nlibopenal.a\nlibpixman-1.a\nlibpixman-1.la\nlibpng\nlibpng.a\nlibpng16.a\nlibpocketpy.a\nlibpolarssl.a\nlibpspkernel.a\nlibpspkubridge.a\nlibpspmodinfo.a\nlibpspnet_inet.a\nlibpspnet_resolver.a\nlibpsprtc.a\nlibpspsdk.a\nlibpspuser.a\nlibpsputility.a\nlibpspvram.a\nlibpspvramalloc.a\nlibpthread.a\nlibpthreadglue.a\nlibsmpeg.a\nlibsqlite3.a\nlibsqstdlib.a\nlibsqstdlib_static.a\nlibsquirrel.a\nlibsquirrel_static.a\nlibstdc++.a\nlibstdc++.a-gdb.py\nlibstdc++.la\nlibsupc++.a\nlibsupc++.la\nlibtri.a\nlibturbojpeg.a\nlibun7zip.a\nlibvorbis.a\nlibvorbisenc.a\nlibvorbisfile.a\nlibxmp-lite.a\nlibxmp.a\nlibyaml.a\nlibz.a\nlibzip.a\nlibzzip-0.a\nlibzzipfseeko-0.a\nlibzzipmmapped-0.a\nlibzzipwrap-0.a\nobjects-Release\npkgconfig\n</code></pre> <pre><code>if(PSP)\n40 link_libraries(\n41 SDL2::SDL2main\n42 SDL2::SDL2test\n43 SDL2::SDL2-static\n44 GL\n45 pspvram\n46 pspvfpu\n47 pspdisplay\n48 pspgu\n49 pspge\n50 pspaudio\n51 pspctrl\n52 psphprm\n53 psppower\n54 )\n\n#include &lt;pspkernel.h&gt;\n#include &lt;pspdebug.h&gt;\n#include &lt;SDL2/SDL.h&gt;\n\n/_ Define the module info section _/\nPSP_MODULE_INFO(\"SDL2\", 0, 1, 1);\n\n/_ Define the main thread's attribute value (optional) _/\nPSP_MAIN_THREAD_ATTR(THREAD_ATTR_USER | THREAD_ATTR_VFPU);\n\nint main(int argc, char \\*argv[])\n\n# \u94fe\u63a5 SDL2\n</code></pre></p>"},{"location":"makefilesample/#_2","title":"\u7f16\u5199\u8de8\u5e73\u53f0\u4ee3\u7801","text":"<p>\u5728\u7f16\u5199\u8de8\u5e73\u53f0\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u90e8\u5206\u4ee3\u7801\u6839\u636e\u76ee\u6807\u5e73\u53f0\u7684\u4e0d\u540c\u9009\u62e9\u662f\u5426\u5ffd\u7565\u3002</p> <p>\u5728\u4ee3\u7801\u4e0a\u4f53\u73b0\u4e3a\u4e0d\u540c\u5e73\u53f0\u4ee3\u7801\u4f7f\u7528\u4e0d\u540c\u7684<code>#ifdef</code>/<code>#ifndef</code>\u5305\u88f9</p> <p>\u4f8b\u5982\uff1a<code>SDL2</code></p>"},{"location":"makefilesample/#gcc","title":"GCC \u9884\u5b9a\u4e49\u7684\u5b8f","text":"<p>\u4f60\u662f Linux \u7cfb\u7edf\uff0c\u90a3\u4e48 GNUC \u4f1a\u7ed9\u4f60\u5b8f <code>linux</code>,<code>**linux</code>,<code>**linux**</code>\u4e09\u4e2a\u5b8f\u4e2d\u7684\u4e00\u4e2a\u3002</p> <p>\u5982\u679c\u4f60\u662f\u5b89\u5353\u7cfb\u7edf\uff0c\u90a3\u4e48\u5c31\u4f1a\u7ed9 ANDROID,<code>**ANDROID**</code>\u5b8f\u4e2d\u7684\u4e00\u4e2a\u3002 </p> <p>\u6240\u4ee5\u8de8\u5e73\u53f0\u5c31\u662f\u6839\u636e\u8fd9\u4e9b GNUC \u7ed9\u51fa\u7684\u5b8f\u6765\u5224\u65ad\u7684\u3002</p>"},{"location":"makefilesample/#psp-gcc","title":"\u67e5\u770bpsp-gcc\u9884\u5b9a\u4e49\u7684\u5b8f","text":"<pre><code>psp@pspserver:~/pspdev/psp/share$ psp-gcc -E -dM - &lt; /dev/null\n// ......\n#define __PSP__ 1\n#define __DQ_FBIT__ 63\n#define _MIPS_ARCH_ALLEGREX 1\n// ......\n#define R3000 1\n// ......\n#define _MIPS_ISA _MIPS_ISA_MIPS2\n// ......\n#define _PSP 1\n// ......\n#define __INT_MAX__ 0x7fffffff\n#define mips 1\n// ......\n#define __mips__ 1\n// ......\n#define PSP 1\n</code></pre>"},{"location":"mediaengine/","title":"Media Engine (ME): PSP's second CPU","text":"<p>PSP\u62e5\u6709\u4e24\u9897CPU\u3002</p> <p>\u5217\u4e3e\u4e00\u4e0b\u4f7f\u7528ME\u7684\u9879\u76ee + yabause(2011) <pre><code>0.9.12 -&gt; 0.9.13\n general:\n  - Removed Carbon, PSP, Wii and Windows ports\n0.9.10 -&gt; 0.9.11\n psp port:\n  - Added support for Media Engine CPU\n  - Improvements to the PSP port \n</code></pre> + DaedalusX64 / daedalus + IridescentRose / MElib</p> <p>\u770b\u6765\u770b\u53bb\uff0c\u8d8a\u770b\u8d8a\u7d2f\u3002\u4e0d\u5199\u4ee3\u7801\u5728\u8fd9\u91cc\u778e\u7814\u7a76\u5c31\u662f\u8fd9\u4e2a\u574f\u5904\u3002 \u8fd8\u6709\u4e2a\u53e4\u65e9\u7248\u672c\u7684MELib\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u7528\u3002 \u6216\u8bb8\u65b0\u65e7PSPSDK\u7684\u8854\u63a5\u5c31\u5728\u8fd9\u91cc\uff1a\u4f7f\u7528PRX\u6587\u4ef6\uff01</p> <p>melib.h <pre><code>/*\nPMP Mod\nCopyright (C) 2006 jonny\n\n/*\nsimple lib to use the psp me\n\na lot of code is taken from here: http://forums.ps2dev.org/viewtopic.php?t=2652\nthanks to crazyc, mrbrown, Brunni, xdeadbeef and anyone else involved\n(major optimizations in libavcodec are done with the me)\n*/\n</code></pre></p>"},{"location":"patch/","title":"Patching an existing PSP Game","text":"<p>\u53c2\u8003\u8d44\u6599 CSAPP\uff1aAttack Lab https://github.com/Bunkai9448/digipet_PSP/blob/main/RE_Guide.md#Text-File https://datacrystal.romhacking.net/wiki/CwCheat</p> <p>\u8bf4\u767d\u4e86\uff0c\u8fd8\u662fpatch\u4ee5\u4e0b\u4e24\u4e2a\u65b9\u9762\u3002</p> <ul> <li>\u53ef\u6267\u884c\u6587\u4ef6(ELF)</li> <li>\u6570\u636e\u6bb5</li> <li>\u4ee3\u7801\u6bb5</li> <li>\u8d44\u6e90\u6587\u4ef6</li> <li>\u56fe\u7247\u7b49</li> </ul> <p>\u9488\u5bf9\u8fd9\u4e9b\u9700\u6c42\u6709\u4e0d\u540c\u7684patch\u65b9\u6cd5\uff0c\u5927\u81f4\u5206\u7c7b\u5982\u4e0b\u3002</p>"},{"location":"patch/#patch-umd-file-iso-patch","title":"Patch UMD file (ISO Patch)","text":""},{"location":"patch/#patch-resource-files","title":"Patch Resource Files","text":"<p>\u901a\u5e38\u6765\u8bf4\uff0c\u6e38\u620f\u6587\u4ef6\u4e2d\u6587\u5b57\u548c\u56fe\u7247\u4e3b\u8981\u50a8\u5b58\u5728<code>SYSDIR</code>\u7684\u6587\u4ef6\u4e2d\u3002\u800c\u8fd9\u4e9b\u6587\u4ef6\u5f80\u5f80\u91c7\u53d6\u5947\u7279\u7684\u5f62\u5f0f\u8fdb\u884c\u538b\u7f29\u3002\u9700\u8981\u7ecf\u9a8c\u4e30\u5bcc\u8005\u8bc6\u522b\u5176\u6587\u4ef6\u7ed3\u6784\uff0c\u65b9\u80fd\u8fdb\u884c\u201c\u89e3\u5305\u201d\u3002\u5bf9\u5f97\u5230\u7684\u6587\u4ef6\u8fdb\u884cPatch\u540e\u91cd\u65b0\u5c01\u88c5\u3002\u5219\u4e3b\u7a0b\u5e8f\u52a0\u8f7d\u8fd9\u4e9b\u6587\u4ef6\u65f6\u80fd\u4f7f\u7528\u4fee\u6539\u540e\u7684\u6570\u636e\u3002</p>"},{"location":"patch/#patch-executable-files","title":"Patch Executable files","text":"<p>\u5f80\u5f80\u5bf9\u8d44\u6e90\u6587\u4ef6\u7684\u6253\u5305\u8fd8\u4e0d\u591f\u3002 + EBOOT.BIN -&gt; BOOT.BIN(\u4f7f\u7528PPSSPP)</p> <ul> <li> <p>PATCH BOOT.BIN</p> </li> <li> <p>Relink EBOOT.BIN to BOOT.bin using <code>UMDGEN</code></p> </li> </ul> <p>\u5728Windows\u4e0b\u7f16\u8bd1\u7b80\u5355\u7684<code>Hello World</code>\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002</p> <ul> <li>\u53ef\u4ee5\u901a\u8fc7<code>Cutter</code>\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u3002</li> <li>\u53ef\u4ee5\u901a\u8fc7<code>Hex Editor</code>\u76f4\u63a5\u5b9a\u4f4d\u5230\u5b57\u7b26\u4e32\u3002</li> </ul>"},{"location":"patch/#load-prx-at-runtime-using-cfw","title":"Load PRX at Runtime Using CFW","text":"<p>There are two ways of dealing with the system calls (used to print messages with system code): Using a PSP plugin, or modifying the ELF/BIN file.</p> <p>\u52ab\u6301\u52a8\u6001\u94fe\u63a5\u5e93\uff1f\uff08Module Tutorial\uff09 \u6539\u5185\u5b58 Metal Gear Solid\uff0c\u6539\u52a8libfont.prx</p> <p>\u76d1\u6d4b\u8fd0\u884c\u72b6\u6001\uff1f</p>"},{"location":"patch/#load-cheat-code-using-cw-cheat","title":"load cheat code using CW Cheat (\u91d1\u624b\u6307)","text":"<p>\u672c\u8d28\u4e0a\u662f\u5185\u5b58\u4fee\u6539\u5668\u3002 \u7528\u4e8e\u66ff\u6362\u5185\u5b58\u4e2d\u6570\u503c/\u673a\u5668\u4ee3\u7801\uff0c\u6216\u5411\u5185\u5b58\u4e2d\u6dfb\u52a0\u6570\u636e/\u673a\u5668\u4ee3\u7801\u3002 \u5728PPSSPP\u652f\u6301\u6b64\u79cd\u683c\u5f0f\u540e\u5f97\u5230\u63a8\u5e7f\u3002</p>"},{"location":"patchexe/","title":"Patching an Executable File","text":"<p>\u901a\u8fc7\u5bf9\u6e38\u620f\u6587\u4ef6\u672c\u8eab\u8fdb\u884cPatch</p>"},{"location":"patchexe/#pathch-elf-files","title":"Pathch ELF files","text":"<p>\u5728Windows\u4e0b\u7f16\u8bd1\u7b80\u5355\u7684<code>Hello World</code>\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002</p> <ul> <li>\u53ef\u4ee5\u901a\u8fc7<code>Cutter</code>\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u3002</li> <li>\u53ef\u4ee5\u901a\u8fc7<code>Hex Editor</code>\u76f4\u63a5\u5b9a\u4f4d\u5230\u5b57\u7b26\u4e32\u3002</li> </ul> <p>\u53c2\u8003CSAPP \u94fe\u63a5\u548c\u865a\u62df\u5730\u5740\u7ae0\u8282\u3002 ELF\u6587\u4ef6\u7684\u4fee\u6539\u4e0d\u662f\u90a3\u4e48\u76f4\u63a5\uff0c\u56e0\u4e3a\u5b58\u5728\u865a\u62df\u5730\u5740\u7684\u6620\u5c04\u3002 ELF Header \u4e2d\u5b9a\u4e49\u4e86\u6587\u4ef6\u5230\u865a\u62df\u5730\u5740\u7684\u6620\u5c04\u3002 \u4f7f\u7528objdump\u5f97\u5230\u7684\u662f\u865a\u62df\u5730\u5740\u3002 <code>objdump -x</code>\u67e5\u770bheader\u548c\u5404\u4e2a\u6bb5</p> <p>\u4f7f\u7528<code>Rizin</code>\u4fee\u6539\u6570\u636e\u6bb5</p>"},{"location":"patchexe/#patch-umd-file-iso-patch","title":"Patch UMD file (ISO Patch)","text":"<p>EBOOT.BIN -&gt; BOOT.BIN</p> <p>PATCH BOOT.BIN</p> <p>Relink EBOOT.BIN to BOOT.bin using <code>UMDGEN</code></p>"},{"location":"profiling/","title":"Profiling","text":"<p>PSP Toolchain \u652f\u6301 <code>gprof</code>(GNU Prof)\u3002</p>"},{"location":"profiling/#gnu-prof","title":"GNU Prof","text":""},{"location":"profiling/#_1","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<ol> <li>\u7f16\u8bd1\u7a0b\u5e8f \u76f4\u63a5\u7f16\u8bd1\uff1a \u94fe\u63a5\uff1a</li> <li>\u751f\u6210.out</li> <li>\u4f7f\u7528gprof\u5206\u6790.out\u6587\u4ef6\u3002</li> </ol> <p>\u53c2\u8003\u8d44\u6599\uff1agprof\u5b98\u7f51</p>"},{"location":"prx2stub/","title":"\u4ece\u5df2\u6709\u7684PRX\u6a21\u5757\u751f\u6210Stub Library","text":"<p>\u4e3b\u8981\u6b65\u9aa4\uff1a</p> <ol> <li>\u5f97\u5230PRX\u6587\u4ef6\u7684\u5bfc\u51fa\u8868</li> <li>\u7528\u5bfc\u51fa\u8868\u751f\u6210Stub Library</li> </ol>"},{"location":"prx2stub/#pspsdk","title":"PSPSDK\u7684\u5e93\u4ece\u54ea\u91cc\u6765\uff1f","text":"<p>2021 PSPHDC: uofw</p> <p>2022 PSPHDC: Toolchain</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u76ee\u524d\u4e3a\u6b62\u94fe\u63a5\u7684\u6240\u6709PSPSDK\u4e2d\u5185\u7f6e\u5e93\u4e2d\u7684\u5185\u6838\u5e93\u51e0\u4e4e\u90fd\u662f<code>Stub Libraries</code>\u3002</p> <p>\u5728<code>pspsdk/src/kernel</code>\u4e2d\uff0c\u6211\u4eec\u53ea\u6709<code>.h</code>\u5934\u6587\u4ef6\u548c<code>.S</code>\u5b58\u6839\u6587\u4ef6\uff08\u5b9e\u9645\u4e0a\u662f\u5145\u6ee1\u5b8f\u7684\u6c47\u7f16\u6587\u4ef6\uff09\u3002</p> <p>\u5386\u53f2\u4e0a\uff0c\u4eba\u4eec\u8bbe\u6cd5\u4ece\u7d22\u5c3c\u63d0\u4f9b\u7684\u5b98\u65b9\u56fa\u4ef6\u5347\u7ea7\u5305\u4e2d\u63d0\u53d6\u51fa\u8bb8\u591a\u7cfb\u7edf\u7ea7<code>prx</code>\u6a21\u5757\uff0c\u63a5\u7740\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li>\u4f7f\u7528<code>prxtool</code>\u4ece<code>prx</code>\u6a21\u5757\u63d0\u53d6\u5f97\u5230\u5bfc\u51fa\u8868\uff08<code>Export Table</code>,<code>.exp</code>\u6587\u4ef6\uff09 <code>prxtool sample.prx -p</code>\u751f\u6210exports.exp     &gt;  \u5bfc\u51fa\u8868(Export Table)     &gt;     &gt; <code>prx</code>\u6587\u4ef6\u7684\u5bfc\u51fa\u8868\u53ef\u4ee5\u7c7b\u6bd4Windows PE\u6587\u4ef6\uff08\u5982DLL\u6587\u4ef6\uff09\u4e2d\u7684\u5bfc\u51fa\u8868\u3002     &gt;     &gt;\u5bfc\u51fa\u8868\u5305\u542b\u4e86\u4e00\u4e2a\u6a21\u5757\u663e\u5f0f\u5411\u5176\u4ed6\u6a21\u5757\u516c\u5f00\u4f9b\u5176\u4f7f\u7528\u7684\u7b26\u53f7\u5217\u8868\u3002     &gt;     &gt;\u5bfc\u51fa\u8868\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u5305\u62ec\uff1a     &gt;     &gt;+ \u5bfc\u51fa\u7684\u7b26\u53f7\uff1a \u53ef\u4ee5\u88ab\u5176\u4ed6\u6a21\u5757\u8bbf\u95ee\u548c\u4f7f\u7528\u7684\u51fd\u6570\u3001\u53d8\u91cf\u6216\u8d44\u6e90\u7684\u540d\u79f0\u548c\u5730\u5740\u3002     &gt;     &gt;+ \u5e8f\u6570\u53f7\u7801(<code>NID</code>)\uff1a \u4e3a\u6bcf\u4e2a\u5bfc\u51fa\u7684\u7b26\u53f7\u5206\u914d\u4e00\u4e2a\u5e8f\u6570\u53f7\u7801\u3002\u5e8f\u6570\u53f7\u7801\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u5f15\u7528\u5bfc\u51fa\u7b26\u53f7\u7684\u65b9\u5f0f\uff0c\u7279\u522b\u662f\u5f53\u540d\u79f0\u6ca1\u6709\u88ab\u516c\u5f00\u65f6\u3002     &gt;     &gt;+ \u5730\u5740\u6216\u6307\u9488\uff1a \u6307\u793a\u6a21\u5757\u5185\u5bfc\u51fa\u51fd\u6570\u6216\u6570\u636e\u7684\u4f4d\u7f6e\u7684\u6307\u9488\u6216\u5730\u5740\u3002     <pre><code># Copyright (C) 2011, 2012 The uOFW team\n# See the file COPYING for copying permission.\n\n# Automatically exports file generated with prxtool\nPSP_BEGIN_EXPORTS\n\nPSP_EXPORT_START(syslib, 0x0000, 0x8000)\nPSP_EXPORT_FUNC_HASH(module_start)\nPSP_EXPORT_FUNC_HASH(module_reboot_phase)\nPSP_EXPORT_FUNC_HASH(module_reboot_before)\nPSP_EXPORT_VAR_HASH(module_info)\nPSP_EXPORT_VAR_HASH(module_sdk_version)\nPSP_EXPORT_END\n\nPSP_EXPORT_START(sceGe_driver, 0x0011, 0x0001)\nPSP_EXPORT_FUNC_NID(sceGePutBreakpoint, 0x05238809)\n......\nPSP_EXPORT_END\n\nPSP_EXPORT_START(sceGe_user, 0x0011, 0x4001)\nPSP_EXPORT_FUNC_NID(sceGeListSync, 0x03444EB4)\n......\nPSP_EXPORT_END\n\nPSP_END_EXPORTS\n</code></pre></li> <li> <p>\u5229\u7528\u5bfc\u51fa\u8868\u4fe1\u606f\u751f\u6210\u5b58\u6839\u6587\u4ef6/\u5bfc\u5165\u8868(<code>.S</code>\u6587\u4ef6)</p> <p>\u5de5\u5177\uff1a<code>psp-build-exports</code>/<code>prxtool</code></p> <p>\u547d\u4ee4\uff1a<code>psp-build-exports -k supervisor_exp.exp</code></p> <p>\u683c\u5f0f\uff1a\u4e24\u79cd\uff0c<code>-k</code>\u548c\uff1f</p> <p>\u4f8b\u5b50\uff1a<code>pspsdk/src/ge/sceGe_user.S</code>(from GitHub) <pre><code>    .set noreorder\n\n#include \"pspimport.s\"\n\n#ifdef F_sceGe_user_0000\n    IMPORT_START    \"sceGe_user\",0x40010000\n#endif\n#ifdef F_sceGe_user_0001\n    //Module Name, NID, Function Name(Used only during linking)\n    IMPORT_FUNC \"sceGe_user\",0x1F6752AD,sceGeEdramGetSize\n#endif\n......\n</code></pre></p> <p>\u6ce8\u91ca\uff1apspimport.s</p> </li> <li> <p>\u5b58\u6839\u6587\u4ef6\u7f16\u8bd1\u5f62\u6210\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6<code>.o</code>\u5e76\u8fdb\u4e00\u6b65\u6253\u5305\u6210\u5b58\u6839\u5e93<code>.a</code></p> <p>\u4f8b\u5b50\uff1a<code>sceGe_user_0000.o</code> <code>sceGe_user_0001.o</code>...  -&gt; <code>libpspge.a</code></p> <p><pre><code>GE_OBJS = sceGe_user_0000.o sceGe_user_0001.o\n\n$(GE_OBJS): ge.S \npsp-gcc $(CFLAGS) -DF_$* $&lt; -c -o $@\n</code></pre> \u5728\u8fd0\u884c\u65f6\u5b58\u6839\u5e93\u5728\u529f\u80fd\u4e0a\u88ab\u5176\u6240\u6307\u7684<code>prx</code>\u6a21\u5757\u4ee3\u66ff\u3002</p> </li> </ol> <p>\u5c06\u81ea\u5df1\u7684\u4ee3\u7801\u4e0e\u5b58\u6839\u5e93\u94fe\u63a5\u540e\uff0c\u6211\u4eec\u7406\u8bba\u4e0a\u5df2\u7ecf\u53ef\u4ee5\u501f\u6b64\u8c03\u7528\u5176\u4e2d\u7684\u51fd\u6570\u4e86\uff0c\u4f46\u5bfc\u51fa\u7684\u51fd\u6570\u82e5\u4e0d\u77e5\u5176\u542b\u4e49\uff0c\u663e\u7136\u65e0\u4ece\u4f7f\u7528\uff1b\u4e14\u5bfc\u51fa\u7684\u51fd\u6570\u540d\u5747\u4ee5<code>sceMgr_driver_949CAC22</code>\u8fd9\u6837<code>\u5e93\u540d+NID</code>\u7684\u5f62\u5f0f\u547d\u540d\uff0c\u4e0d\u5229\u4e8e\u5f00\u53d1\u4f7f\u7528\u3002</p> <ol> <li>\u5bf9\u8fd9\u4e9b\u6a21\u5757\u8fdb\u884c\u9006\u5411\u5de5\u7a0b\uff0c\u5f97\u5230\u5176\u673a\u5668\u8bed\u8a00\u5b9e\u73b0\uff0c\u901a\u8fc7\u5bf9\u6c47\u7f16\u4ee3\u7801\u7684\u7814\u7a76\u7406\u89e3\u5176\u4f7f\u7528\u65b9\u6cd5\uff0c\u4ee5\u6b64\u6574\u7406\u51fa\u63cf\u8ff0\u51fd\u6570\u63a5\u53e3\u7684\u5934\u6587\u4ef6\u5e76\u4fee\u6b63\u5bfc\u51fa\u7684\u51fd\u6570\u540d\u3002</li> </ol> <p>NID\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e3a\u51fd\u6570\u540d\u4f5cSHA256\u53d6\u9ad832\u4f4d\u3002\u53ef\u4ee5\u901a\u8fc7\u66b4\u529b\u7834\u89e3\u5c1d\u8bd5\u53cd\u63a8\u51fd\u6570\u540d\u3002</p> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5f97\u5230\u5305\u542b\u5934\u6587\u4ef6\u548c\u5b58\u6839\u5e93\u7684\u6574\u4e2aPSPSDK\u5f00\u53d1\u73af\u5883\u3002</p> <p>\u76ee\u524dPSPSDK\u4e2d\u6709\u4e00\u4e9b\u5e93\u7684\u5934\u6587\u4ef6\u4e2d\u51fd\u6570\u540d\u4ecd\u5e26\u6709\u5947\u602a\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u76f4\u63a5\u4ece\u5bfc\u51fa\u8868\u4e2d\u5f97\u5230\u7684\u51fd\u6570\u7684<code>NID</code>\uff0c\u7531\u4e8e\u5f7c\u65f6\u5c1a\u4e0d\u7406\u89e3\u5176\u5177\u4f53\u5b9e\u73b0\uff0c\u6ca1\u6709\u529e\u6cd5\u4e3a\u5176\u53d6\u540d\u3002</p> <p>.macro IMPORT_START module, flags_ver</p> <pre><code>.set push\n.section .rodata.sceResident, \"a\"\n.word   0\n</code></pre> <p>__stub_modulestr_\\module:     .asciz  \"\\module\"     .align  2</p> <pre><code>.section .lib.stub, \"a\", @progbits\n.global __stub_module_\\module\n</code></pre> <p>__stub_module_\\module:     .word   __stub_modulestr_\\module // Module Name String Addr     .word   \\flags_ver  // Flags     .word   0x5     .word   __executable_start  // \u5728psp-fixup-imports\u4e2d\u91cd\u5b9a\u4f4d     .word   __executable_start  // \u5728psp-fixup-imports\u4e2d\u91cd\u5b9a\u4f4d</p> <pre><code>.set pop\n</code></pre> <p>.endm</p>"},{"location":"prx2stub/#cooperating-with-different-sdks","title":"Cooperating with different SDKs","text":"<p><code>PSPSDK</code>\u662f\u6c11\u95f4\u7231\u597d\u8005\u81ea\u53d1\u901a\u8fc7\u9006\u5411\u5de5\u7a0b\u7814\u7a76\u5f97\u5230\u7684SDK\u3002\u56f4\u7ed5\u7740\u8fd9\u5957SDK\uff0c\u5df2\u7ecf\u79fb\u690d\u51fa\u591a\u79cd\u5e93\u3002<code>PSPSDK</code>\u968f\u7740PSP\u7834\u89e3\u7684\u53d1\u5c55\u4e0d\u65ad\u8fed\u4ee3\uff0c\u4ece\u4ee5\u524d\u7684<code>M33</code>\u683c\u5f0f\u5230\u540e\u6765\u7684\u683c\u5f0f\u3002</p> <p>\u76ee\u524d\uff0c\u5b98\u65b9\u7684SDK\u5df2\u7ecf\u6cc4\u9732\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u901a\u8fc7\u5728\u4e92\u8054\u7f51\u6863\u6848\u9986\u641c\u5bfb\u4e0d\u96be\u5f97\u5230\u3002\u968f\u7740\u5b98\u65b9SDK\u7684\u6cc4\u9732\uff0c\u968f\u4e4b\u800c\u6765\u7684\u662f\u5927\u91cf\u7684\u5b98\u65b9\u6587\u6863\uff0c\u5b83\u4eec\u5bf9\u4e8ePSP\u7684\u8fd0\u4f5c\u673a\u7406\u8fdb\u884c\u4e86\u5f88\u597d\u7684\u8865\u5145\u3002\u4f5c\u4e3a\u521d\u5b66\u8005\u9605\u8bfb\u8fd9\u4e9b\u6587\u6863\u6709\u52a9\u4e8e\u6211\u4eec\u66f4\u597d\u5730\u4f7f\u7528<code>PSPSDK</code>\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u73b0\u5728<code>PSPSDK</code>\u7684\u529f\u80fd\u548c\u914d\u5957\u8f6f\u4ef6\u5728\u67d0\u4e9b\u65b9\u9762\u5df2\u7ecf\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u5b98\u65b9SDK\u3002\u4f46\u662f<code>PSPSDK</code>\u5c11\u6536\u5f55\u4e86\u90e8\u5206\u7cfb\u7edf\u5e93\uff08\u7cfb\u7edf\u8c03\u7528\uff09\u7684\u51fd\u6570\uff0c\u4ea6\u7f3a\u4e4f\u8bb8\u591a\u51fd\u6570\u53c2\u6570\u7684\u89e3\u91ca\u3002\u53e6\u5916\uff0c\u5b98\u65b9SDK\u8fd8\u6536\u5f55\u4e86\u7d22\u5c3c\u5f00\u53d1\u7684\u7684\u90e8\u5206\u7b2c\u4e09\u65b9\u5e93\u3002\u8fd9\u4e9b\u5e93\u80fd\u591f\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2dUI\u7b49\u7684\u8bbe\u8ba1\u66f4\u63a5\u8fd1\u5f53\u65f6PSP\u5b98\u65b9\u51fa\u54c1\u7684\u7a0b\u5e8f\u3002</p>"},{"location":"prxfilestruct/","title":"PRX\u4e2d\u5305\u542b\u7684\u4fe1\u606f","text":"<p>\u6ce8\uff1a\u6b64\u5904\u8bba\u8ff0\u7684\u5747\u4e3a\u672a\u52a0\u5bc6\u7684PRX\u6587\u4ef6</p> <p>PRX\u662f\u7279\u6b8a\u7684ELF\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u4e00\u4e9bPSP\u72ec\u6709\u7684\u6bb5(Section)</p> <p>Dump information in <code>prx</code> file</p>"},{"location":"prxfilestruct/#prx_1","title":"\u53cd\u6c47\u7f16PRX\u7684\u5de5\u5177","text":"<ul> <li> <p><code>prxtool</code></p> <p>\u4f7f\u7528<code>prxTool</code>\u53ef\u4ee5\u53cd\u6c47\u7f16PRX\u6587\u4ef6\u5e76\u4e14\u4ee5\u6e05\u6670\u7684\u683c\u5f0f\u5448\u73b0\u51fa\u6765\u3002</p> </li> </ul>"},{"location":"prxfilestruct/#file-section","title":"File section","text":"<p><code>psp-objdump -x ./ULJS00064_USER_MAIN.BIN</code> <pre><code>psp@pspserver:~/code/test$ psp-objdump -x ./ULJS00064_USER_MAIN.BIN \n\n./ULJS00064_USER_MAIN.BIN:     file format elf32-littlemips\n./ULJS00064_USER_MAIN.BIN\narchitecture: mips:allegrex, flags 0x00000000:\n\nstart address 0x00000128\n\nProgram Header:\n    LOAD off    0x00000080 vaddr 0x00000000 paddr 0x001aeeec align 2**6\n         filesz 0x001da9e0 memsz 0x001da9e0 flags rwx\n    LOAD off    0x001daa80 vaddr 0x001daa00 paddr 0x00000000 align 2**6\n         filesz 0x000793fc memsz 0x0020cbb8 flags rw-\nprivate flags = 10a23001: [abi=EABI32] [mips2] [not 32bitmode] [noreorder]\n\nSections:\nIdx Name          Size      VMA       LMA       File off  Algn\n  0 .init         00000024  00000000  001aeeec  00000080  2**0\n                  CONTENTS, ALLOC, LOAD, READONLY, CODE\n  1 .rel.init     00000010  00000000  00000000  00254584  2**2\n                  CONTENTS, READONLY\n  2 .text         001ae74c  00000040  001aef2c  000000c0  2**6\n                  CONTENTS, ALLOC, LOAD, READONLY, CODE\n  3 .rel.text     000a4ba8  00000000  00000000  00254594  2**2\n                  CONTENTS, READONLY\n  4 .fini         0000001c  001ae78c  0035d678  001ae80c  2**0\n                  CONTENTS, ALLOC, LOAD, READONLY, CODE\n  5 .rel.fini     00000008  00000000  00000000  002f913c  2**2\n                  CONTENTS, READONLY\n  6 .sceStub.text 00000528  001ae7a8  0035d694  001ae828  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, CODE\n  7 .lib.ent.top  00000004  001aecd0  0035dbbc  001aed50  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n  8 .lib.ent      00000010  001aecd4  0035dbc0  001aed54  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n  9 .rel.lib.ent  00000008  00000000  00000000  002f9144  2**2\n                  CONTENTS, READONLY\n 10 .lib.ent.btm  00000004  001aece4  0035dbd0  001aed64  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 11 .lib.stub.top 00000004  001aece8  0035dbd4  001aed68  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 12 .lib.stub     0000017c  001aecec  0035dbd8  001aed6c  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 13 .rel.lib.stub 000001c8  00000000  00000000  002f914c  2**2\n                  CONTENTS, READONLY\n 14 .lib.stub.btm 00000004  001aee68  0035dd54  001aeee8  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 15 .rodata.sceModuleInfo 00000034  001aee6c  0035dd58  001aeeec  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 16 .rel.rodata.sceModuleInfo 00000028  00000000  00000000  002f9314  2**2\n                  CONTENTS, READONLY\n 17 .rodata.sceResident 00000190  001aeea0  0035dd8c  001aef20  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 18 .rel.rodata.sceResident 00000028  00000000  00000000  002f933c  2**2\n                  CONTENTS, READONLY\n 19 .rodata.sceNid 00000294  001af030  0035df1c  001af0b0  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 20 .ctors        00000008  001af2c4  0035e1b0  001af344  2**2\n                  CONTENTS, ALLOC, LOAD, DATA\n 21 .dtors        00000008  001af2cc  0035e1b8  001af34c  2**2\n                  CONTENTS, ALLOC, LOAD, DATA\n 22 .jcr          00000004  001af2d4  0035e1c0  001af354  2**2\n                  CONTENTS, ALLOC, LOAD, DATA\n 23 .eh_frame     0000130c  001af2d8  0035e1c4  001af358  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 24 .rel.eh_frame 00000450  00000000  00000000  002f9364  2**2\n                  CONTENTS, READONLY\n 25 .gcc_except_table 00000054  001b05e4  0035f4d0  001b0664  2**2\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 26 .rodata       0002a3a0  001b0640  0035f52c  001b06c0  2**6\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n 27 .rel.rodata   0000c900  00000000  00000000  002f97b4  2**2\n                  CONTENTS, READONLY\n 28 .data         000793fc  001daa00  00000000  001daa80  2**4\n                  CONTENTS, ALLOC, LOAD, DATA\n 29 .rel.data     0001fd88  00000000  00000000  003060b4  2**2\n                  CONTENTS, READONLY\n 30 .sbss         00000000  00253e00  00079400  00253e7c  2**2\n                  ALLOC\n 31 .bss          001937b8  00253e00  00079400  00253e7c  2**6\n                  ALLOC\n 32 .comment      00009b06  00000000  00000000  00325e3c  2**0\n                  CONTENTS, READONLY\nSYMBOL TABLE:\nno symbols\n</code></pre></p>"},{"location":"prxfilestruct/#text","title":"\u4ee3\u7801\u6bb5(.text)","text":"<p>(.text, containing the module text, which is the executed machine code; .rodata, containing read-only data; .data, containing data which may be modified during the program execution.)</p> <p>uofw Wiki</p> <ul> <li> <p><code>prxtool -w</code>: Disasm the executable sections of the file`</p> </li> <li> <p><code>prxtool -m</code>: inspect import &amp; export </p> </li> </ul>"},{"location":"prxfilestruct/#prx_2","title":"PRX\u6587\u4ef6\u4e2d\u5b58\u5728\u5b9e\u73b0\u7684\u4e24\u79cd\u51fd\u6570","text":"<ul> <li> <p>Exported Functions (Referenced in <code>.rodata.sceResident</code>)</p> <p>\u4f9b\u5916\u90e8\u6a21\u5757\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u4e5f\u5373\u5bfc\u51fa\u7684\u51fd\u6570 + Subroutine</p> <p>\u4f9b\u6a21\u5757\u81ea\u8eab\u5185\u90e8\u4f7f\u7528\u7684\u51fd\u6570</p> </li> </ul>"},{"location":"prxfilestruct/#scestubtext","title":".sceStub.text","text":"<ul> <li>Imported Functinos</li> </ul> <p>\u4ece\u5916\u90e8\u6a21\u5757\u5bfc\u5165\u7684\u51fd\u6570 <pre><code>jr ra\nnop\n</code></pre> \u5305\u542b\u7684\u90fd\u662f\u7a7a\u5b9e\u73b0\u3002\u5728\u52a0\u8f7d\u65f6\u7531PSP\u5185\u6838\u8fdb\u884c\u52a8\u6001\u94fe\u63a5\u3002</p>"},{"location":"prxfilestruct/#rodata","title":"\u53ea\u8bfb\u6570\u636e\u6bb5(.rodata)","text":""},{"location":"prxfilestruct/#rodatascemoduleinfo","title":".rodata.sceModuleInfo \u6bb5","text":"<p>\u5305\u542b\u4e86\u6a21\u5757\u7684\u57fa\u672c\u4fe1\u606f\u3002\u7531PSP_MOUDULE_INFO\u5b8f\u5b9a\u4e49\u3002 <pre><code>psp@pspserver:~/code/test$ psp-objdump -s -j .rodata.sceModuleInfo ./ULJS00064_USER_MAIN.BIN \n\n./ULJS00064_USER_MAIN.BIN:     file format elf32-littlemips\n\nContents of section .rodata.sceModuleInfo:\n 1aee6c 00000101 55534552 5f4d4149 4e000000  ....USER_MAIN...\n 1aee7c 00000000 00000000 00000000 00000000  ................\n 1aee8c f0130800 d4ec1a00 e4ec1a00 ecec1a00  ................\n 1aee9c 68ee1a00                             h...      \n</code></pre></p>"},{"location":"prxfilestruct/#_1","title":"\u5bfc\u51fa\u8868\u76f8\u5173","text":""},{"location":"prxfilestruct/#libententry","title":".lib.ent(Entry)","text":"<p>\u5bfc\u51fa\u8868\u7684\u8868\u9879\u3002</p>"},{"location":"prxfilestruct/#rodatasceresidententry-table","title":".rodata.sceResident(Entry Table)","text":"<p>\u5bfc\u51fa\u7684\u4e00\u4e2a\u5e93\u4e2d\u5bfc\u51fa\u7684NID\u3001\u51fd\u6570\u5730\u5740</p>"},{"location":"pspdevdir/","title":"PSPDEV Directory Structure","text":"<p>\u4ec0\u4e48\u662fSDK\uff1fPSP\u5f00\u53d1\u7684\u5de5\u5177\u94fe\u662f\u5982\u4f55\u6784\u6210\u7684\uff1f</p> <p>\u63a8\u8350\u89c2\u770b\uff1a</p> <p>\u3010\u3010\u6280\u672f\u6742\u8c08\u3011C \u7f16\u8bd1\u4f53\u7cfb\u3011 https://www.bilibili.com/video/BV1J14y1D7Sw</p> <p>2022 PSP Homebrew Developer Conference: PSP Toolchain <pre><code>pspdev\n\u251c\u2500\u2500 bin\n\u251c\u2500\u2500 etc\n\u251c\u2500\u2500 include\n\u251c\u2500\u2500 lib\n\u251c\u2500\u2500 libexec\n\u251c\u2500\u2500 psp\n\u251c\u2500\u2500 share\n\u2514\u2500\u2500 var\n</code></pre></p>"},{"location":"pspdevdir/#bin","title":"<code>bin</code>","text":"<p><pre><code>bin\n\u251c\u2500\u2500 PrxEncrypter\n\u251c\u2500\u2500 bin2c\n\u251c\u2500\u2500 bin2o\n\u251c\u2500\u2500 bin2s\n\u251c\u2500\u2500 ebootsign\n\u251c\u2500\u2500 mksfo\n\u251c\u2500\u2500 mksfoex\n\u251c\u2500\u2500 pack-pbp\n\u251c\u2500\u2500 psp-addr2line\n\u251c\u2500\u2500 psp-ar\n\u251c\u2500\u2500 psp-as\n\u251c\u2500\u2500 psp-build-exports\n\u251c\u2500\u2500 psp-c++\n\u251c\u2500\u2500 psp-c++filt\n\u251c\u2500\u2500 psp-cmake\n\u251c\u2500\u2500 psp-config\n\u251c\u2500\u2500 psp-cpp\n\u251c\u2500\u2500 psp-elfedit\n\u251c\u2500\u2500 psp-fixup-imports\n\u251c\u2500\u2500 psp-g++\n\u251c\u2500\u2500 psp-gcc\n\u251c\u2500\u2500 psp-gcc-11.2.0\n\u251c\u2500\u2500 psp-gcc-ar\n\u251c\u2500\u2500 psp-gcc-nm\n\u251c\u2500\u2500 psp-gcc-ranlib\n\u251c\u2500\u2500 psp-gcov\n\u251c\u2500\u2500 psp-gcov-dump\n\u251c\u2500\u2500 psp-gcov-tool\n\u251c\u2500\u2500 psp-gdb\n\u251c\u2500\u2500 psp-gdb-add-index\n\u251c\u2500\u2500 psp-ld\n\u251c\u2500\u2500 psp-ld.bfd\n\u251c\u2500\u2500 psp-lto-dump\n\u251c\u2500\u2500 psp-makepkg\n\u251c\u2500\u2500 psp-nm\n\u251c\u2500\u2500 psp-objcopy\n\u251c\u2500\u2500 psp-objdump\n\u251c\u2500\u2500 psp-pacman\n\u251c\u2500\u2500 psp-pkg-config\n\u251c\u2500\u2500 psp-pkgconf -&gt; psp-pkg-config\n\u251c\u2500\u2500 psp-prxgen\n\u251c\u2500\u2500 psp-ranlib\n\u251c\u2500\u2500 psp-readelf\n\u251c\u2500\u2500 psp-run\n\u251c\u2500\u2500 psp-size\n\u251c\u2500\u2500 psp-strings\n\u251c\u2500\u2500 psp-strip\n\u251c\u2500\u2500 pspsh\n\u251c\u2500\u2500 unpack-pbp\n\u2514\u2500\u2500 usbhostfs_pc\n</code></pre> \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u50a8\u5b58\u7740PSPDev\u4e2d\u6240\u6709\u7f16\u8bd1\u597d\u540e\u53ef\u4f9b\u8fd0\u884c\u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <p>\u5176\u4e2d\u5927\u90e8\u5206\u662f\u4e0eGNU\u76f8\u5173\u7684\u7f16\u8bd1\u5957\u4ef6\u548c\u8c03\u8bd5\u5de5\u5177\uff1a + GCC Compiler + GNU Binutils     + ld - the GNU linker.     + as - the GNU assembler.     + addr2line - Converts addresses into filenames and line numbers.     + ar - A utility for creating, modifying and extracting from archives.     + c++filt - Filter to demangle encoded C++ symbols.     + elfedit - Allows alteration of ELF format files.     + nm - Lists symbols from object files.     + objcopy - Copies and translates object files.     + objdump - Displays information from object files.     + ranlib - Generates an index to the contents of an archive.     + readelf - Displays information from any ELF format object file.     + size - Lists the section sizes of an object or archive file.     + strings - Lists printable strings from files.     + strip - Discards symbols. + GDB</p> <p>\u5176\u4ed6\u7684\u5927\u591a\u4e3a\u6ee1\u8db3PSP\u5e73\u53f0\u7279\u5b9a\u9700\u6c42\u7684\u5de5\u5177\u7a0b\u5e8f + \u751f\u6210\u914d\u7f6e\u6587\u4ef6     + mksfo     + mksfoex + \u52a0\u5bc6     + PrxEncrypter     + ebootsign + \u6784\u5efa\u5b58\u6839\u5e93     + psp-build-exports + \u6253\u5305 / \u89e3\u5305     + pack-pbp     + unpack-pbp + \u8c03\u8bd5     + usbhostfs_pc     + pspsh</p> <p>\u8fd8\u6709\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u5c0f\u5de5\u5177 + \u5d4c\u5165\u8d44\u6e90\u6587\u4ef6     + bin2c/bin2o/bin2s</p> <p>\u4e0b\u9762\u9009\u53d6\u5176\u4e2d\u8f83\u4e3a\u91cd\u8981\u7684\u8fdb\u884c\u8bb2\u89e3\u3002</p>"},{"location":"pspdevdir/#bin2cbin2obin2s","title":"bin2c/bin2o/bin2s","text":"<p>\u529f\u80fd\u7b80\u4ecb\uff1a\u8fd9\u4e9b\u8f6f\u4ef6\u5206\u522b\u7528\u4e8e\u5c06\u4efb\u610f\u4e8c\u8fdb\u5236\u6587\u4ef6\u8f6c\u6362\u4e3aC\u6e90\u6587\u4ef6\u3001\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u3001\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\u3002</p> <p>\u89e3\u51b3\u75db\u70b9\uff1a\u5728\u5e94\u7528\u5f00\u53d1\u65f6\u5f80\u5f80\u9700\u8981\u5f15\u7528\u5916\u90e8\u8d44\u6e90\u6587\u4ef6\uff08\u5982\u56fe\u7247\u3001\u97f3\u9891\u7b49\uff09\uff0c\u5982\u679c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u76f4\u63a5\u4ece\u5916\u90e8\u50a8\u5b58\u5668\u4e2d\u52a0\u8f7d\u8fd9\u4e9b\u6587\u4ef6\uff0c\u90a3\u4e48 + \u7f16\u5199\u7a0b\u5e8f\u65f6\u9700\u8981\u8003\u8651\u7edd\u5bf9\u8def\u5f84\u7b49\u95ee\u9898\uff1b + \u5728\u53d1\u884c\u6e38\u620f\u65f6\u9700\u8981\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u4e0e\u8d44\u6e90\u6587\u4ef6\u4e00\u8d77\u62f7\u8d1d\u5230PSP\u4e2d\uff1b + \u8fd0\u884c\u65f6\u7a0b\u5e8f\u9700\u8981\u5373\u65f6\u4ece\u5916\u90e8\u50a8\u5b58\u5668\u4e2d\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6\uff0c\u901f\u5ea6\u53d7\u9650\u3002</p> <p>\u5177\u4f53\u8bf4\u660e\uff1a\u5c06\u4e8c\u8fdb\u5236\u8d44\u6e90\u6587\u4ef6\u6240\u6709\u5b57\u8282\u8f6c\u5316\u4e3aC\u4e2d<code>char</code>\u7c7b\u578b\u6570\u7ec4\uff0c\u901a\u8fc7\u7f16\u8bd1\u94fe\u63a5\u5c06\u5176\u5d4c\u5165\u6700\u7ec8\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u6570\u636e\u76f4\u63a5\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u4f9b\u7a0b\u5e8f\u8bbf\u95ee\u3002</p> <p>\u534f\u540c\u4ea4\u4e92\uff1a\u5728\u5176\u4ed6\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528<code>fmemopen</code>\u521b\u5efa\u5185\u5b58\u6d41\u5bf9\u5185\u5b58\u4e2d\u50a8\u5b58\u7684\u8be5\u6570\u7ec4\u52a0\u4ee5\u8bbf\u95ee\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a</p>"},{"location":"pspdevdir/#gnu-binutils","title":"GNU Binutils","text":"<ol> <li>objdump \u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u6790 objdump\u5de5\u5177\u7528\u6765\u663e\u793a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u5c31\u662f\u4ee5\u4e00\u79cd\u53ef\u9605\u8bfb\u7684\u683c\u5f0f\u8ba9\u4f60\u66f4\u591a\u5730\u4e86\u89e3\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u80fd\u5e26\u6709\u7684\u9644\u52a0\u4fe1\u606f\u3002</li> </ol> <p>14.1. \u5e38\u7528\u53c2\u6570\u8bf4\u660e -f \u663e\u793a\u6587\u4ef6\u5934\u4fe1\u606f -D \u53cd\u6c47\u7f16\u6240\u6709section (-d\u53cd\u6c47\u7f16\u7279\u5b9asection) -h \u663e\u793a\u76ee\u6807\u6587\u4ef6\u5404\u4e2asection\u7684\u5934\u90e8\u6458\u8981\u4fe1\u606f -x \u663e\u793a\u6240\u6709\u53ef\u7528\u7684\u5934\u4fe1\u606f\uff0c\u5305\u62ec\u7b26\u53f7\u8868\u3001\u91cd\u5b9a\u4f4d\u5165\u53e3\u3002-x \u7b49\u4ef7\u4e8e -a -f -h -r -t \u540c\u65f6\u6307\u5b9a\u3002 -i \u663e\u793a\u5bf9\u4e8e -b \u6216\u8005 -m \u9009\u9879\u53ef\u7528\u7684\u67b6\u6784\u548c\u76ee\u6807\u683c\u5f0f\u5217\u8868\u3002 -r \u663e\u793a\u6587\u4ef6\u7684\u91cd\u5b9a\u4f4d\u5165\u53e3\u3002\u5982\u679c\u548c-d\u6216\u8005-D\u4e00\u8d77\u4f7f\u7528\uff0c\u91cd\u5b9a\u4f4d\u90e8\u5206\u4ee5\u53cd\u6c47\u7f16\u540e\u7684\u683c\u5f0f\u663e\u793a\u51fa\u6765\u3002 -R \u663e\u793a\u6587\u4ef6\u7684\u52a8\u6001\u91cd\u5b9a\u4f4d\u5165\u53e3\uff0c\u4ec5\u4ec5\u5bf9\u4e8e\u52a8\u6001\u76ee\u6807\u6587\u4ef6\u6709\u610f\u4e49\uff0c\u6bd4\u5982\u67d0\u4e9b\u5171\u4eab\u5e93\u3002 -S \u5c3d\u53ef\u80fd\u53cd\u6c47\u7f16\u51fa\u6e90\u4ee3\u7801\uff0c\u5c24\u5176\u5f53\u7f16\u8bd1\u7684\u65f6\u5019\u6307\u5b9a\u4e86-g\u8fd9\u79cd\u8c03\u8bd5\u53c2\u6570\u65f6\uff0c\u6548\u679c\u6bd4\u8f83\u660e\u663e\u3002\u9690\u542b\u4e86-d\u53c2\u6570\u3002 -t \u663e\u793a\u6587\u4ef6\u7684\u7b26\u53f7\u8868\u5165\u53e3\u3002\u7c7b\u4f3c\u4e8enm -s\u63d0\u4f9b\u7684\u4fe1\u606f</p> <p>\u5f15\u7528</p> <p>Usage: psp-build-exports -b|-s|-k [-v] export.exp Options: -b, --build-exports     : Build an export file to stdout -s, --build-stubs       : Build a batch of stub files for the exports -k, --build-stubs-new   : Build a batch of stub files (in new format) -v, --verbose           : Verbose output</p>"},{"location":"recentprojects/","title":"\u8fd1\u5e74\u9879\u76ee","text":"<p>\u81ea2020\u5e74\u5f00\u59cb\uff0cPSP Homebrew \u793e\u533a\u6bcf\u5e74\u53ec\u5f00\u4e00\u6b21PSP\u5f00\u53d1\u8005\u5927\u4f1a(PSP Homebrew Developer Conference)\uff0c\u5206\u4eabPSP\u8f6f\u786c\u4ef6\u5f00\u53d1\u7684\u6700\u65b0\u6210\u679c\uff0c\u6709\u5fc5\u8981\u5217\u4e3e\u4e00\u4e0b\uff0c\u4ee5\u589e\u8fdb\u5bf9PSP\u5f00\u53d1\u73b0\u72b6\u4e0e\u524d\u666f\u7684\u4e86\u89e3\u3002</p> <p>\u77e5\u9053\u54ea\u4e9b\u4e1c\u897f\u5df2\u7ecf\u6709\u4eba\u505a\u8fc7\u4e86\uff0c\u81ea\u5df2\u53c8\u80fd\u7528\u54ea\u4e9b\u4e1c\u897f\uff0c\u5341\u5206\u91cd\u8981\u3002</p>"},{"location":"recentprojects/#emulators","title":"\u6a21\u62df\u5668 (Emulators)","text":"<p>\u4e3a\u4e86\u5b9e\u73b0\u6e32\u67d3\u548c\u89c6\u9891\u7b49\u65b9\u9762\u7684\u786c\u4ef6\u52a0\u901f\uff0c\u6a21\u62df\u5668\u5bf9PSP\u7684\u5404\u9879\u5904\u7406\u5668\u5982VFPU, Graphics Engine(GE)\u548cMedia Engine(ME)\u7684\u4f7f\u7528\u91cf\u5747\u8fbe\u5230\u8f83\u9ad8\u6c34\u5e73\u3002\u7814\u7a76\u8fd9\u4e9b\u6a21\u62df\u5668\u7684\u5b9e\u73b0\u5bf9\u4e8e\u5f00\u53d1\u8005\u4e86\u89e3\u5982\u4f55\u4f18\u5316PSP\u7a0b\u5e8f\u6027\u80fd\u6709\u5f88\u5927\u5e2e\u52a9\u3002</p> <p>\u73b0\u5728\u8fd8\u662f\u6ca1\u770b\u61c2\u6709\u5173ME\u7684\u4e1c\u897f\u2026\u2026</p> <ul> <li> <p>2021</p> <ul> <li> <p>DeSmuME: \u4efb\u5929\u5802DS\u6a21\u62df\u5668</p> </li> <li> <p>nullDC: \u4e16\u5609Dreamcast\u6a21\u62df\u5668</p> </li> </ul> </li> <li> <p>2023</p> <ul> <li>retroArch: \u8de8\u5e73\u53f0\u65e9\u671f\u6e38\u620f\u7ec8\u7aef\uff08\u5982GBA\uff09\u6a21\u62df\u5668\uff0c\u5bf9\u4e8e\u4f7f\u7528Kernal Function\u548c\u591aPRX\u52a0\u8f7d\u6781\u5177\u7814\u7a76\u4ef7\u503c\u3002\u53ef\u4ee5\u5728 <code>PPSSPP</code>\u4e0a\u8fd0\u884c\u3002</li> </ul> </li> </ul>"},{"location":"recentprojects/#game-engine","title":"\u6e38\u620f\u5f15\u64ce (Game Engine)","text":"<p>\u6e38\u620f\u5f15\u64ce\u4f3c\u4e4e\u4e00\u76f4\u662f\u5f00\u53d1\u8005\u5927\u4f1a\u4e0a\u7684\u5927\u70ed\u95e8\u3002\u6bcf\u4e2a\u4eba\u90fd\u60f3\u63a8\u5e7f\u81ea\u5df1\u7684API\u7528\u6765\u505a\u6e38\u620f\u3002</p> <p>openTRI? + 2020     + Startdust Engine</p> <ul> <li>2021<ul> <li>Gen7 Engine</li> <li>Integrity Engine</li> </ul> </li> <li> <p>2022</p> </li> <li> <p>2023</p> </li> </ul>"},{"location":"recentprojects/#port","title":"\u79fb\u690d(Port)","text":"<p>\u5bf9\u5176\u4ed6\u7ec8\u7aef\u72ec\u5360\u6e38\u620f\u7684\u79fb\u690d\u6216\u91cd\u7f6e\u4ea6\u662f\u5f00\u53d1\u8005\u5927\u4f1a\u4e0a\u7684\u70ed\u95e8\u3002 + 2020     + Spelunky PSP: \u8de8\u5e73\u53f0\u5f00\u53d1\u7684\u542f\u793a\u3002Youtube\u4e0a\u6709\u4e00\u7ec4\u89c6\u9891\u5c55\u793a\u3002 + 2021</p>"},{"location":"recentprojects/#tutorials","title":"\u6559\u7a0b(Tutorials)","text":"<ul> <li>2021<ul> <li>Platformer Template: openTri\u5f15\u64ce\u7684\u4f7f\u7528\u3002</li> </ul> </li> </ul>"},{"location":"release/","title":"UMD Image File","text":""},{"location":"release/#dir-structure","title":"Dir structure","text":""},{"location":"release/#ebootbin-bootbin","title":"EBOOT.BIN / BOOT.BIN","text":"<ul> <li> <p>EBOOT.BIN: \u52a0\u5bc6\u7684prx\u6587\u4ef6</p> </li> <li> <p>BOOT.BIN: \u672a\u52a0\u5bc6\u7684prx\u6587\u4ef6</p> </li> </ul>"},{"location":"release/#decrypte-ebootbin","title":"Decrypte EBOOT.BIN","text":"<ul> <li> <p><code>PRXdecrypter 2.7a</code> </p> <p>(Runs on a PSP or PSVita)  </p> </li> <li> <p><code>PPSSPP</code> </p> <p>(Check on Setting -&gt; Tools -&gt; Developer tools -&gt; Dump decrypted EBOOT.BIN on game boot, and run the game. Then you will get decrypted EBOOT.BIN under (memorystick)/PSP/SYSTEM/DUMP with a name like (game-id).bin.)</p> </li> </ul> <p>\u751f\u6210\u672a\u52a0\u5bc6\u7684PRX\u6587\u4ef6</p>"},{"location":"release/#umd-gen-relink-ebootpbp","title":"UMD GEN Relink EBOOT.PBP","text":"<p>Maybe we can use an encrypted prx file to load an unencrypted one?</p> <p>Can we do that on OFW?</p>"},{"location":"release/#cso","title":"CSO","text":"<p>ISO Compressor</p>"},{"location":"sdks/","title":"Cooperating with different SDKs","text":"<p><code>PSPSDK</code>\u662f\u6c11\u95f4\u7231\u597d\u8005\u81ea\u53d1\u901a\u8fc7\u9006\u5411\u5de5\u7a0b\u7814\u7a76\u5f97\u5230\u7684SDK\u3002\u56f4\u7ed5\u7740\u8fd9\u5957SDK\uff0c\u5df2\u7ecf\u79fb\u690d\u51fa\u591a\u79cd\u5e93\u3002<code>PSPSDK</code>\u968f\u7740PSP\u7834\u89e3\u7684\u53d1\u5c55\u4e0d\u65ad\u8fed\u4ee3\uff0c\u4ece\u4ee5\u524d\u7684<code>M33</code>\u683c\u5f0f\u5230\u540e\u6765\u7684\u683c\u5f0f\u3002</p> <p>\u76ee\u524d\uff0c\u5b98\u65b9\u7684SDK\u5df2\u7ecf\u6cc4\u9732\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u901a\u8fc7\u5728\u4e92\u8054\u7f51\u6863\u6848\u9986\u641c\u5bfb\u4e0d\u96be\u5f97\u5230\u3002\u968f\u7740\u5b98\u65b9SDK\u7684\u6cc4\u9732\uff0c\u968f\u4e4b\u800c\u6765\u7684\u662f\u5927\u91cf\u7684\u5b98\u65b9\u6587\u6863\uff0c\u5b83\u4eec\u5bf9\u4e8ePSP\u7684\u8fd0\u4f5c\u673a\u7406\u8fdb\u884c\u4e86\u5f88\u597d\u7684\u8865\u5145\u3002\u4f5c\u4e3a\u521d\u5b66\u8005\u9605\u8bfb\u8fd9\u4e9b\u6587\u6863\u6709\u52a9\u4e8e\u6211\u4eec\u66f4\u597d\u5730\u4f7f\u7528<code>PSPSDK</code>\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u73b0\u5728<code>PSPSDK</code>\u7684\u529f\u80fd\u548c\u914d\u5957\u8f6f\u4ef6\u5728\u67d0\u4e9b\u65b9\u9762\u5df2\u7ecf\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u5b98\u65b9SDK\u3002\u4f46\u662f<code>PSPSDK</code>\u5c11\u6536\u5f55\u4e86\u90e8\u5206\u7cfb\u7edf\u5e93\uff08\u7cfb\u7edf\u8c03\u7528\uff09\u7684\u51fd\u6570\uff0c\u4ea6\u7f3a\u4e4f\u8bb8\u591a\u51fd\u6570\u53c2\u6570\u7684\u89e3\u91ca\u3002\u53e6\u5916\uff0c\u5b98\u65b9SDK\u8fd8\u6536\u5f55\u4e86\u7d22\u5c3c\u5f00\u53d1\u7684\u7684\u90e8\u5206\u7b2c\u4e09\u65b9\u5e93\u3002\u8fd9\u4e9b\u5e93\u80fd\u591f\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2dUI\u7b49\u7684\u8bbe\u8ba1\u66f4\u63a5\u8fd1\u5f53\u65f6PSP\u5b98\u65b9\u51fa\u54c1\u7684\u7a0b\u5e8f\u3002</p>"},{"location":"sdl/","title":"Working with other libraries","text":"<p>PSPDEV\u968f\u9644\u4e86\u8bb8\u591a\u53ef\u4f9b\u94fe\u63a5\u7684\u5916\u90e8\u5e93\uff0c\u5168\u90e8\u4ee5\u5b58\u6863\uff08archive\uff09\u6587\u4ef6\uff08.a\u6587\u4ef6\uff09\u5f62\u5f0f\u50a8\u5b58\u5728pspdev/psp/lib\u4e2d\u3002\u5728Github\u4e0a\u4e5f\u4ecb\u7ecd\u4e86\u901a\u8fc7pacman\u5b89\u88c5\u5b58\u653e\u5728Github\u4e0a\u7684\u5916\u90e8\u5e93\u7684\u65b9\u6cd5\u3002 \u4e0b\u9762\u6211\u4eec\u4ee5SDL\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u94fe\u63a5\u548c\u4f7f\u7528\u5916\u90e8\u5e93\u7684\u65b9\u6cd5</p>"},{"location":"sdl/#_1","title":"\u63a8\u8350\u9605\u8bfb","text":"<p>CS:APP \u94fe\u63a5</p>"},{"location":"sdl/#working-with-sdl2","title":"Working with SDL2","text":"<p>SDL\uff08Simple DirectMedia Layer\uff09 \u662f\u4e00\u4e2a\u4f4e\u5c42\u6b21\u8de8\u5e73\u53f0\u56fe\u5f62\u5f00\u53d1\u5e93\uff0c\u5e38\u7528\u4e8e\u6e38\u620f\u5f00\u53d1\u3002 \u9002\u914d PSP\u3001PS2 \u7b49\u591a\u79cd\u6e38\u620f\u7ec8\u7aef\u3002</p> <p>\u5b83\u4e3a\u56fe\u5f62\u754c\u9762\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u5957\u7edf\u4e00\u7684API\uff0c\u800c\u5728\u5e95\u5c42\u9488\u5bf9\u4e0d\u540c\u5e73\u53f0\u6709\u4e0d\u540c\u7684\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u3002</p> <p>\u622a\u81f3\u76ee\u524d\uff0cSDL\u5df2\u7ecf\u66f4\u65b0\u5230SDL3.\u800c\u5b98\u65b9\u7684PSPDEV\u968f\u9644\u7684\u4ecd\u662fSDL2\uff0c\u6545\u5148\u4ecb\u7ecdSDL2</p>"},{"location":"sdl/#_2","title":"\u94fe\u63a5","text":"<p>\u6ce8\u610f\uff1a\u6ca1\u770b\u6e05\u8fd9\u4e00\u5757\u4f1a\u5bfc\u81f4\u65e0\u7a77\u65e0\u5c3d\u7684\u94fe\u63a5\u62a5\u9519\uff0c\u8bf7\u8ba4\u771f\u9605\u8bfb</p> <p>\u663e\u7136\uff0cSDL2\u7ed9PSP\u5f00\u53d1\u8005\u63d0\u4f9b\u7684API\u5185\u90e8\u90fd\u57fa\u4e8e <code>pspsdk</code> \u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u5728\u94fe\u63a5\u7684\u8bed\u5883\u4e0b\u5c31\u662f\u5f15\u7528\u4e86\u8bb8\u591a\u5916\u90e8\u7684\u7b26\u53f7\u3002\u3002SDL2\u60f3\u8981\u8c03\u7528\u8fd9\u4e9b\u4e0d\u5c5e\u4e8e\u5b83\u81ea\u8eab\u7684\u51fd\u6570\uff0c\u5c31\u5fc5\u987b\u94fe\u63a5<code>pspsdk</code>\u4e2d\u7f16\u8bd1\u597d\u7684\u542b\u6709\u76f8\u5e94\u51fd\u6570\u5b9e\u73b0\u90e8\u5206\u7684\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6\u3002</p> <p>\u56e0\u6b64\u8981\u4f7f\u7528 SDL2 \u5e93\uff0c\u5728\u94fe\u63a5\u65f6\u4e0d\u4ec5\u8981\u94fe\u63a5 SDL2\uff0c\u8fd8\u9700\u8981\u94fe\u63a5\u5176\u4f9d\u8d56\u7684\u5176\u4ed6 PSP \u76f8\u5173\u5e93\u3002</p> <p>\u4ece pspdev \u63d0\u4f9b\u7684 CMake \u6587\u4ef6\u4e2d\u53ef\u4ee5\u770b\u51fa\u4e00\u4e9b\u94fe\u63a5\u65f6\u5fc5\u987b\u968f\u9644\u7684\u5e93\u3002</p> <pre><code>if(PSP)\n40 link_libraries(\n41 SDL2::SDL2main\n42 SDL2::SDL2test\n43 SDL2::SDL2-static\n44 GL\n45 pspvram\n46 pspvfpu\n47 pspdisplay\n48 pspgu\n49 pspge\n50 pspaudio\n51 pspctrl\n52 psphprm\n53 psppower\n54 )\n</code></pre> <p>\u7f51\u7edc\u4e0a\u4e00\u4e9b\u793a\u4f8b\u9879\u76ee\u7684 Makefile \u4e5f\u6307\u51fa\u4e86\u76f8\u5173\u7684\u5e93</p> <pre><code>LIBS = -lSDLmain -lSDL2 -lGL -lGLU -lglut -lz -lpspvfpu -lpsphprm -lpspsdk -lpspctrl -lpspumd -lpsprtc \\\n       -lpsppower -lpspgum -lpspgu -lpspaudiolib -lpspaudio -lpsphttp -lpspssl -lpspwlan \\\n       -lpspnet_adhocmatching -lpspnet_adhoc -lpspnet_adhocctl -lm -lpspvram\n</code></pre> <p>\u5177\u4f53\u54ea\u4e9b\u5e93\u662f\u7edd\u5bf9\u5fc5\u987b\u7684\u8fd8\u6709\u5f85\u7814\u7a76\u3002</p>"},{"location":"sdl/#sdl-main","title":"SDL \u4e2d\u7684 main \u51fd\u6570","text":"<p>SDL \u4f7f\u7528\u4e86\u4e00\u79cd\u6280\u5de7\uff0c\u901a\u8fc7\u5b8f\u5b9a\u4e49\u5c06\u7528\u6237\u7684 main \u51fd\u6570\u91cd\u547d\u540d\u4e3a SDL_main\uff0c\u7136\u540e\u63d0\u4f9b\u81ea\u5df1\u7684 main \u51fd\u6570\u3002\u8fd9\u6837\uff0c\u5f53\u4f60\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5199 main \u51fd\u6570\u65f6\uff0c\u9884\u5904\u7406\u5668\u5b9e\u9645\u4e0a\u4f1a\u5c06\u5176\u91cd\u547d\u540d\u4e3a SDL_main</p> <p>\u4e0b\u9762\u662f\u4e00\u6bb5\u6765\u81ea pspdev \u5b98\u7f51\u7684\u793a\u4f8b\u4ee3\u7801 </p> <p>\u5047\u5982\u6211\u4eec\u4e0d\u52a0-SDLmain\uff0c\u53ea\u52a0-SDL2 \u76f4\u63a5\u7f16\u8bd1\uff0c\u4f1a\u62a5\u9519<code>undefined refernce to 'main'</code> \u8fd9\u662f\u5341\u5206\u5947\u602a\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6211\u4eec\u663e\u7136\u5b9a\u4e49\u4e86 main \u51fd\u6570\u3002</p> <p>\u8fd9\u5c31\u8981\u8c08\u5230 SDL \u8fd9\u4e2a\u5e93\u7684\u7279\u6027\uff1a\u5728\u9884\u5904\u7406\u65f6\uff0cSDL\u4f1a\u901a\u8fc7\u5b8f\u5b9a\u4e49\u5c06\u7528\u6237\u7684 main \u51fd\u6570\u91cd\u547d\u540d\u4e3a SDL_main\u3002\u8fd9\u6837\uff0c\u5f53\u4f60\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5199 main \u51fd\u6570\u65f6\uff0c\u9884\u5904\u7406\u5668\u5b9e\u9645\u4e0a\u4f1a\u5c06\u5176\u91cd\u547d\u540d\u4e3a SDL_main\u3002\u6b64\u540e SDL \u4f1a\u91cd\u65b0\u5b9e\u73b0\u65b0\u7684 main \u51fd\u6570\uff0c\u5728\u5176\u4e2d\u8c03\u7528 SDL_main \u5e76\u5728\u524d\u540e\u8fd0\u884c\u6dfb\u52a0\u989d\u5916\u7684\u5904\u7406\u6d41\u7a0b\u3002</p> <p>\u6ce8\u610f\u5230\u793a\u4f8b\u4ee3\u7801\u91cc\u4e0d\u518d\u6709\u5404\u79cd\u7ebf\u7a0b\u7684\u6ce8\u518c\u548c\u6a21\u5757\u4fe1\u606f\u7684\u6307\u5b9a\uff0c\u8fd9\u6b63\u662f\u56e0\u4e3a SDL \u91cd\u65b0\u4e3a\u6211\u4eec\u5b9a\u4e49\u7684 main \u51fd\u6570\u80fd\u591f\u5e2e\u6211\u4eec\u505a\u5230\u8fd9\u4e00\u70b9\u3002 \u800c\u81ea\u5efa main \u51fd\u6570\u8fd9\u4e00\u8fc7\u7a0b\u7684\u5b9e\u73b0\u4f4d\u4e8e SDL_main \u5e93</p> <p>\u4e0b\u9762\u662f\u6458\u5f55\u81ea SDL_main.h \u7684\u4e00\u6bb5\u6ce8\u91ca</p> <p><pre><code>#elif defined(__PSP__)\n/* On PSP SDL provides a main function that sets the module info,\n   activates the GPU and starts the thread required to be able to exit\n   the software.\n\n   If you provide this yourself, you may define SDL_MAIN_HANDLED\n */\n#define SDL_MAIN_AVAILABLE\n</code></pre> <pre><code>#if defined(SDL_MAIN_NEEDED) || defined(SDL_MAIN_AVAILABLE) || defined(SDL_MAIN_USE_CALLBACKS)\n#define main    SDL_main\n#endif\n</code></pre> \u4e0b\u9762\u662f\u4e00\u6bb5 SDL_main.c \u7684\u4ee3\u7801</p> <p>2023\u5e7412\u670824\u65e5\u6ce8\uff1a SDL2\u5df2\u7ecf\u88ab\u9057\u5f03\uff0c\u73b0\u901a\u884c\u7684\u662fSDL3\u3002 SDL_main.c\u5df2\u4e0d\u590d\u5b58\u5728\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u4e9b\u66f4\u52a0\u6a21\u5757\u5316\u7684\u8bbe\u8ba1\u3002</p> <p>The SDLmain library has been removed, it's been entirely replaced by SDL_main.h.</p> <p>\u7531\u4e8e<code>SDL_main.h</code>\u5df2\u7ecf\u5728<code>SDL.h</code>\u4e2d\u88ab\u5305\u542b\uff0c\u6545\u793a\u4f8b\u4ee3\u7801\u4e2d\u4ec5<code>#include &lt;SDL.h&gt;</code>\u3002</p> <p>\u9700\u8981 include SDL_main(\u5728 SDL.h \u4e2d\u5df2\u7ecf\u5305\u542b) \u9700\u8981\u94fe\u63a5 SDL_main</p>"},{"location":"sdl/#working-with-sdl3","title":"Working with SDL3","text":"<p>\u51fa\u4eba\u610f\u6599\u7684\u662f\uff0c\u5728Github\u4e0aSDL\u4ed3\u5e93\u7684main\u5206\u652f\u5df2\u7ecf\u88abSDL3\u66ff\u4ee3\u3002\u4e0d\u8fc7\u8fd9\u6837\u66f4\u597d\uff0c\u8ba9\u6211\u4eec\u6709\u673a\u4f1a\u5f97\u4ee5\u5c1d\u8bd5\u6ca1\u6709\u8d44\u6599\u4e0b\u7684\u63a2\u7d22\uff0c\u5e76\u4ee5\u6b64\u68c0\u9a8c\u81ea\u5df1\u7684\u7406\u89e3\u60c5\u51b5\u3002</p>"},{"location":"sdl/#_3","title":"\u4e0b\u8f7d\u4ed3\u5e93","text":"<pre><code>git clone https://github.com/libsdl-org/SDL\ncd SDL\n</code></pre> <p>Building To build SDL library for the PSP, make sure you have the latest PSPDev status and run: <pre><code>cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$PSPDEV/psp/share/pspdev.cmake\ncmake --build build\ncmake --install build\n</code></pre></p>"},{"location":"sdl/#_4","title":"\u6b65\u9aa4","text":"<p><pre><code>cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$PSPDEV/psp/share/pspdev.cmake\n</code></pre> \u7528pspdev.cmake\u63d0\u4f9b\u7684\u53c2\u6570\u4f7f\u7528pspdev\u5de5\u5177\u94fe\u6784\u5efa</p> <p>\u4f1a\u5b89\u88c5\u5230\u54ea\u91cc\uff1f <code>psp@pspserver:~/SDL/build$ cat cmake_install.cmake</code> <pre><code>if(NOT DEFINED CMAKE_INSTALL_PREFIX)\n  set(CMAKE_INSTALL_PREFIX \"/home/psp/pspdev/psp\")\nendif()\n</code></pre></p> <pre><code>psp@pspserver:~/pspdev/psp/include$ ll\ntotal 2048\ndrwxr-xr-x 33 psp psp   4096 Dec 24 14:28 ./\ndrwxr-xr-x  9 psp psp   4096 Dec  2 09:25 ../\ndrwxr-xr-x  2 psp psp   4096 Dec  2 09:25 SDL/\ndrwxr-xr-x  2 psp psp   4096 Dec  2 09:25 SDL2/\ndrwxrwxr-x  2 psp psp   4096 Dec 24 14:28 SDL3/\n</code></pre> <pre><code>psp@pspserver:~/pspdev/psp/lib$ ll\ntotal 47884\ndrwxr-xr-x  7 psp psp    4096 Dec 24 14:28 ./\ndrwxr-xr-x  9 psp psp    4096 Dec  2 09:25 ../\n-rw-r--r--  1 psp psp  373754 Dec  2 08:58 libSDL.a\n-rw-r--r--  1 psp psp 2142412 Dec  2 08:58 libSDL2.a\n-rw-r--r--  1 psp psp   76952 Dec  2 08:59 libSDL2_gfx.a\n-rw-r--r--  1 psp psp  228316 Dec  2 08:59 libSDL2_image.a\n-rw-r--r--  1 psp psp  287696 Dec  2 08:59 libSDL2_mixer.a\n-rw-r--r--  1 psp psp   77684 Dec  2 08:59 libSDL2_ttf.a\n-rw-r--r--  1 psp psp    2896 Dec  2 08:58 libSDL2main.a\n-rw-r--r--  1 psp psp 1695386 Dec 24 14:25 libSDL3.a\n-rw-r--r--  1 psp psp  136880 Dec 24 14:25 libSDL3_test.a\n-rw-r--r--  1 psp psp   99226 Dec  2 08:59 libSDL_gfx.a\n-rw-r--r--  1 psp psp   69128 Dec  2 08:59 libSDL_image.a\n-rw-r--r--  1 psp psp  234946 Dec  2 08:59 libSDL_mixer.a\n-rw-r--r--  1 psp psp   33122 Dec  2 08:59 libSDL_ttf.a\n-rw-r--r--  1 psp psp    2820 Dec  2 08:58 libSDLmain.a\n</code></pre> <p>\u5927\u91cf\u7684\u5b8f\u88ab\u91cd\u547d\u540d\uff0c\u51fd\u6570\u539f\u578b\u4e5f\u88ab\u4fee\u6539\u2026\u2026 \u8fd8\u597d\u65b0\u540d\u5b57\u4e5f\u7528\u5b8f\u544a\u8bc9\u4f60\u4e86</p> <p>\u5728SDL3\u4e2d\uff0c\u524d\u9762\u63d0\u5230\u7684\u4ee4\u4eba\u8d39\u89e3\u7684SDL2\u90e8\u5206\u57fa\u672c\u5f97\u5230\u89e3\u51b3\u3002</p> <p>\u7531\u4e8e<code>SDL_main.h</code>\u5df2\u4e0d\u518d\u9ed8\u8ba4\u5305\u542b\u5728<code>SDL.h</code>\u4e2d\uff0cmain\u51fd\u6570\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u88ab\u5b8f\u8fdb\u884c\u5f3a\u884c\u66ff\u6362\u3002<code>PSP_MODULE_INFO</code>\u7684\u53c2\u6570\u53ef\u4ee5\u81ea\u5df1\u65b9\u4fbf\u7684\u6307\u5b9a\u800c\u4e0d\u518d\u5c40\u9650\u4e8e\u4f7f\u7528SDL_main\u63d0\u4f9b\u7684\u9ed8\u8ba4\u503c\u3002</p> <p>\u7531\u4e8e\u4ee3\u7801\u7684\u6539\u52a8\uff0cmain\u51fd\u6570\u7684\u66ff\u6362\u5de5\u4f5c\u5168\u90e8\u7531SDL_main.h\u5934\u6587\u4ef6\u5b9e\u73b0\uff0c\u6ca1\u6709\u4e86\u6e90\u6587\u4ef6\uff0c\u610f\u5473\u7740\u53ef\u4f9b\u94fe\u63a5\u7684SDL_main\u5e93\u4e0d\u590d\u5b58\u5728\u3002\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u5176\u66ff\u6362\u529f\u80fd\uff0c\u4e0d\u518d\u9700\u8981\u94fe\u63a5<code>SDL_main</code></p> <p>\u7ed9\u4e2a\u81ea\u5df1\u6d4b\u8bd5\u51fa\u6765\u7684\u6837\u4f8b <pre><code>TARGET = main\nOBJS= main.o\n\nLIBDIR  =\nLIBS = -lSDL3 -lGL -lGLU -lglut -lz \\\n         -lpspvfpu -lpsphprm -lpspsdk -lpspctrl -lpspumd -lpsprtc -lpsppower -lpspgum -lpspgu -lpspaudiolib -lpspaudio -lpsphttp -lpspssl -lpspwlan \\\n         -lpspnet_adhocmatching -lpspnet_adhoc -lpspnet_adhocctl -lm -lpspvram\n\nEXTRA_TARGETS   = EBOOT.PBP\nPSPSDK=$(shell psp-config --pspsdk-path)\ninclude $(PSPSDK)/lib/build.mak\n</code></pre></p> <pre><code>#include &lt;pspkernel.h&gt;\n#include &lt;SDL3/SDL.h&gt;\n#include &lt;SDL3/SDL_main.h&gt;\n// If not using SDL_main.h. Uncomment lines below and register exit callbacks.\n// /* Define the module info section */\n// PSP_MODULE_INFO(\"HelloSDL\", 0, 1, 1);\n// /* Define the main thread's attribute value (essential) */\n// PSP_MAIN_THREAD_ATTR(THREAD_ATTR_USER | THREAD_ATTR_VFPU);\n\nint main(int argc, char *argv[])\n{\n    SDL_Init(SDL_INIT_VIDEO | SDL_INIT_GAMEPAD);\n\n    SDL_Window * window = SDL_CreateWindow(\n        \"window\",\n        480,\n        272,\n        0\n    );\n\n    SDL_Renderer * renderer = SDL_CreateRenderer(window, NULL, SDL_RENDERER_ACCELERATED);\n\n    SDL_FRect square = {216, 96, 34, 64}; \n\n    int running = 1;\n    SDL_Event event;\n    while (running) { \n        if (SDL_PollEvent(&amp;event)) {\n            switch (event.type) {\n                case SDL_EVENT_QUIT:\n                    running = 0;\n                    break;\n                case SDL_EVENT_GAMEPAD_ADDED:\n                    SDL_OpenGamepad(event.gdevice.which);\n                    break;\n                case SDL_EVENT_GAMEPAD_BUTTON_DOWN:\n                    if(event.gbutton.button == SDL_GAMEPAD_BUTTON_START)\n                        running = 0;\n                    break;\n            }\n        }\n\n        // Clear the screen\n        SDL_RenderClear(renderer);\n\n        // Draw a red square\n        SDL_SetRenderDrawColor(renderer, 255, 0, 0, 255);\n        SDL_RenderFillRect(renderer, &amp;square);\n\n        // Draw everything on a white background\n        SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);\n        SDL_RenderPresent(renderer);\n    }\n\n    return 0;\n}\n</code></pre> <p>SDL3\u5173\u4e8emain\u51fd\u6570\u7684\u8ba8\u8bba</p>"},{"location":"sdl/#working-with-c","title":"Working with C++","text":"<p>\u5927\u591a\u6570\u5e93\uff0c\u5305\u62ecPSPSDK\u81ea\u8eab\u5728\u5185\uff0c\u90fd\u662f\u4f7f\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u3002\u4e3a\u4e86\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7279\u6027\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u5c06C\u4e0eC++\u6df7\u5408\u7f16\u8bd1\u3002 \u7136\u800c\uff0c\u5f80\u5f80\u88ab\u4eba\u4eec\u5ffd\u7565\u7684\u662f\uff0c\u4f7f\u7528g++\u7f16\u8bd1\u51fa\u7684\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\uff08.o\u6587\u4ef6\uff09\u5728\u94fe\u63a5\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u65f6\u9700\u8981\u94fe\u63a5C++\u7684\u8fd0\u884c\u5e93<code>libstdc++</code>\u3002</p> <p>\u4ee5\u5f80\u4f7f\u7528g++\u8fdb\u884c\u7f16\u8bd1\u94fe\u63a5\u65f6\uff0c\u5f80\u5f80\u81ea\u52a8\u94fe\u63a5\u4e86<code>libstdc++</code>\u3002\u7136\u800c\uff0cPSPDEV\u968f\u9644\u7684Makefile\u9ed8\u8ba4\u4f7f\u7528gcc\u8fdb\u884c\u94fe\u63a5\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5176\u4ec5\u4ec5\u81ea\u52a8\u94fe\u63a5<code>libc</code>\u800c\u5e76\u672a\u94fe\u63a5<code>libstdc++</code>\u3002</p> <p>\u56e0\u800c\uff0c\u8bf7\u4e8eMakefile\u4e2d\u6307\u5b9a <pre><code>LIBS = -lstdc++\n</code></pre></p> <p>\u5982\u679c\u4e0d\u94fe\u63a5\uff0c\u4f1a\u51fa\u73b0\u5404\u79cd\u672a\u5b9a\u4e49\u7684\u7b26\u53f7\uff08symbol not defined\uff09\uff0c\u5982<code>new</code>\u4e4b\u7c7b\u7684\u5173\u952e\u5b57\u5168\u90e8\u65e0\u6cd5\u8bc6\u522b\u3002</p>"},{"location":"sdl/#how-to-manage-existing-libraries","title":"How to manage existing libraries?","text":"<p>\u63a8\u8350\u9605\u8bfb\uff1a</p> <p>2021 PSPHDC: Manage libraries <code>PSPDEV/packages</code></p> <p>\u5305\u7ba1\u7406\u5de5\u5177packman</p> <p><code>psp-pacman</code>: Nothing but a Shell Script.</p> <pre><code>#!/bin/bash\n\n## Make sure PSPDEV is set\nif [ -z \"${PSPDEV}\" ]; then\n    echo \"The PSPDEV environment variable has not been set\"\n    exit 1\nfi\n\nif [ ! -d \"${PSPDEV}\" ]; then\n    echo \"${PSPDEV} does not exist\"\n    exit 2\nfi\n\n## Use sudo if the current user doesn't own $PSPDEV\nif ! touch \"${PSPDEV}\" &gt;/dev/null 2&gt;&amp;1; then\n    sudo PSPDEV=\"${PSPDEV}\" \"$0\" \"$@\"\n    exit $?\nfi\n\n## Add the directory with pacman's binaries to the start of the PATH\nexport PATH=\"${PSPDEV}/share/pacman/bin:${PATH}\"\n\n## Run pacman and make sure to use the current PSPDEV\npacman \\\n  --root \"${PSPDEV}\" \\\n  --dbpath \"${PSPDEV}/var/lib/pacman\" \\\n  --config \"${PSPDEV}/etc/pacman.conf\" \\\n  --cachedir \"${PSPDEV}/var/cache/pacman/pkg\" \\\n  --gpgdir \"${PSPDEV}/etc/pacman.d/gnupg/\" \\\n  --logfile \"${PSPDEV}/var/log/pacman.log\" \\\n  --hookdir \"${PSPDEV}/share/libalpm/hooks\" \\\n  --hookdir \"${PSPDEV}/etc/pacman.d/hooks\" \\\n  \"$@\"\n</code></pre> <p>pacman.conf <pre><code>psp@pspserver:~/pspdev/etc$ cat pacman.conf \n#\n# # ${PSPDEV}/pacman/share/etc/pacman.conf\n#\n# See the pacman.conf(5) manpage for option and repository directives\n\n#\n# GENERAL OPTIONS\n#\n[options]\n# \u53ef\u4ee5\u5728\u6b64\u5904\u66f4\u6539\u4ee3\u7406\u8bbe\u7f6e\nXferCommand = /usr/bin/curl --proxy http://192.168.132.1:7890 -L -C - -f -o %o %u\nArchitecture = mips\n\n# Misc options\n#UseSyslog\n#Color\n#NoProgressBar\n#TotalDownload\nCheckSpace\n#VerbosePkgLists\n\n# An example of a custom package repository.  See the pacman manpage for\n# tips on creating your own repositories.\n#[custom]\n#SigLevel = Optional TrustAll\n#Server = file:///home/custompkgs\n\n# \u5728\u7ebf\u4ed3\u5e93\u5728\u6b64\u5904\n[pspdev]\nSigLevel = Optional TrustAll\nServer = https://github.com/pspdev/psp-packages/releases/latest/download/\n</code></pre></p> <p>Implement C Functions in C++. <pre><code>extern \"C\"\n</code></pre></p> <p>\u7b26\u53f7\u4fee\u9970\u3001\u51fd\u6570\u7b7e\u540d\u3001\u7b26\u53f7\u91cd\u6574</p>"},{"location":"stublibs/","title":"Stub Libraries","text":"<p>\u63a8\u8350\u9605\u8bfb</p> <p><code>uofw</code> Github wiki https://github.com/uofw/uofw/wiki</p> <p>PSP Modules, Exports, Imports and Patches https://uofw.github.io/upspd/docs/</p> <p><code>uofw</code> Document</p> <p><code>pspsdk/src/samples/prx/</code></p> <p>\u5f53\u6211\u4eec\u4e4b\u524d\u94fe\u63a5\u7b2c\u4e09\u65b9\u5e93\u65f6\uff0c\u90fd\u662f\u76f4\u63a5\u4e0e\u662f\u771f\u6b63\u5305\u542b\u4ee3\u7801\u7684\u5e93\u94fe\u63a5\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5e0c\u671b\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u8f7d\u5165\u5176\u4ed6\u6a21\u5757\uff0c\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u94fe\u63a5\uff0c\u4e0d\u8fc7\u94fe\u63a5\u7684\u662f\u53ea\u5305\u542b\u6a21\u5757\u540d\u79f0\u3001NID\u3001\u51fd\u6570\u63a5\u53e3\u548c\u5176\u7a7a\u5b9e\u73b0\u7684\u5b58\u6839\u5e93(<code>Stub/Resident Library</code>)\u3002\u901a\u8fc7PSPSDK\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u52a0\u8f7d\u6a21\u5757\u7684\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u6a21\u5757\u8fd0\u884c\u65f6\u7684\u52a0\u8f7d\u3002</p> <p>Multiple programs can be loaded at the same time in PSP\u2122 memory.</p> <p>Use other modules in your own module Dynamically.</p>"},{"location":"stublibs/#prx","title":"\u7f16\u5199\u53ef\u88ab\u5176\u4ed6\u6a21\u5757\u52a8\u6001\u52a0\u8f7d\u7684PRX\u6a21\u5757","text":"<p>A PRX-format module can be used as a resident library. A resident library provides some of its functions to another module.</p> <p>\u6211\u4eec\u901a\u8fc7\u7f16\u5199\u5bfc\u51fa\u8868\u6765\u6307\u5b9a\u81ea\u5df1\u6a21\u5757\u4e2d\u54ea\u4e9b\u51fd\u6570\u53ef\u4ee5\u88ab\u5916\u90e8\u8bbf\u95ee</p> <p>\u5e76\u901a\u8fc7\u5411\u6a21\u5757\u4f7f\u7528\u8005\u63d0\u4f9b\u5bfc\u5165\u8868\u4f7f\u5176\u80fd\u5f15\u5165\u81ea\u5df1\u7684\u6a21\u5757\u3002</p> <p>\u7531\u4e8e\u4f7f\u7528\u8005\u80fd\u591f\u5bfc\u5165\u7684\u51fd\u6570\u4e5f\u5c31\u662f\u7f16\u5199\u8005\u5bfc\u51fa\u7684\u51fd\u6570\uff0c</p> <p>\u6211\u4eec\u53ea\u9700\u8981\u7f16\u5199\u4e00\u6b21\u5bfc\u51fa\u8868\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5bfc\u51fa\u8868\u751f\u6210\u5bfc\u5165\u8868\u3002</p>"},{"location":"stublibs/#step-1prx","title":"Step 1\uff1a\u7f16\u5199\u5bfc\u51fa\u8868\uff0c\u5c06\u5bfc\u51fa\u8868\u5d4c\u5165PRX\u6a21\u5757\u3002","text":"<ol> <li>\u64b0\u5199PRX\u7a0b\u5e8f\u7684C\u4ee3\u7801\uff1a\u4e0d\u5199<code>main</code>\u51fd\u6570\uff0c\u5199<code>module_start()</code>\u548c<code>module_stop()</code>\u51fd\u6570 <p>Hint</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e8emodule_start()\u51fd\u6570\u4e2d\u52a0\u4e00\u884c\u5bf9\u5916\u90e8prx\u7684\u8c03\u7528<code>printf()</code>\u51fd\u6570\u8c03\u7528\u3002\u5426\u5219\u5728\u7531ELF\u6587\u4ef6\u751f\u6210PRX\u6587\u4ef6\u65f6\u4f1a\u51fa\u73b0\u7f3a\u5c11.lib.stub\u6bb5\u7684\u95ee\u9898\u3002\u8fd9\u662f\u7531\u4e8e\u76ee\u524dprx\u6587\u4ef6\u5fc5\u987b\u540c\u65f6\u542b\u6709\u5bfc\u5165\u8868\u548c\u5bfc\u51fa\u8868\u5bfc\u81f4\u7684\u3002</p> </li> <li>\u7f16\u5199\u5bfc\u51fa\u8868(<code>.exp</code>\u540e\u7f00\u7684\u6587\u672c\u6587\u4ef6)\uff0c\u6307\u5b9a\u54ea\u4e9b\u51fd\u6570\u53ef\u88ab\u5176\u4ed6\u6a21\u5757\u5f15\u7528 <p>\u5bfc\u51fa\u683c\u5f0f\u3002</p> <ul> <li>\u5fc5\u987b\u5bfc\u51fa\uff1asyslib</li> <li>\u81ea\u5b9a\u4e49\u5bfc\u51fa\uff1a</li> </ul> <p>\u636e\u8bf4\u4e0d\u63a8\u8350\u5bfc\u51fa\u53d8\u91cf\u3002</p> </li> <li>\u5bf9\u5bfc\u51fa\u8868\u4f7f\u7528<code>psp-build-exports -b</code>\u751f\u6210C\u4ee3\u7801      build.mak<pre><code>%.c: %.exp\n    psp-build-exports -b $&lt; &gt; $@\n</code></pre> <pre><code>#include &lt;pspmoduleexport.h&gt;\n#define NULL ((void *) 0)\n\nextern int module_info;\nextern int module_sdk_version;\nstatic const unsigned int __syslib_exports[4] __attribute__((section(\".rodata.sceResident\"))) = {\n    0xF01D73A7,\n    0x11B97506,\n    (unsigned int) &amp;module_info,\n    (unsigned int) &amp;module_sdk_version,\n};\n\nextern int sceLibFttt_02D7F94B;\nextern int sceLibFttt_099EF33C;\nextern int sceLibFttt_0DA7535E;\nextern int sceLibFttt_27F6E642;\nextern int sceLibFttt_2F67356A;\nextern int sceLibFttt_3AEA8CB6;\nextern int sceLibFttt_3C4B7E82;\nextern int sceLibFttt_472694CD;\nextern int sceLibFttt_48293280;\nextern int sceLibFttt_48B06520;\nextern int sceLibFttt_5333322D;\nextern int sceLibFttt_568BE516;\nextern int sceLibFttt_574B6FBC;\nextern int sceLibFttt_57FCB733;\nextern int sceLibFttt_5C3E4A9E;\nextern int sceLibFttt_5DCF6858;\nextern int sceLibFttt_67F17ED7;\nextern int sceLibFttt_681E61A7;\nextern int sceLibFttt_74B21701;\nextern int sceLibFttt_980F4895;\nextern int sceLibFttt_A834319D;\nextern int sceLibFttt_AA3DE7B5;\nextern int sceLibFttt_BB8E7FE6;\nextern int sceLibFttt_BC75D85B;\nextern int sceLibFttt_CA1E6945;\nextern int sceLibFttt_DCC80C2F;\nextern int sceLibFttt_EE232411;\nextern int sceLibFttt_F8F0752E;\nstatic const unsigned int __sceLibFttt_exports[56] __attribute__((section(\".rodata.sceResident\"))) = {\n    0x02D7F94B,\n    0x099EF33C,\n    0x0DA7535E,\n    0x27F6E642,\n    0x2F67356A,\n    0x3AEA8CB6,\n    0x3C4B7E82,\n    0x472694CD,\n    0x48293280,\n    0x48B06520,\n    0x5333322D,\n    0x568BE516,\n    0x574B6FBC,\n    0x57FCB733,\n    0x5C3E4A9E,\n    0x5DCF6858,\n    0x67F17ED7,\n    0x681E61A7,\n    0x74B21701,\n    0x980F4895,\n    0xA834319D,\n    0xAA3DE7B5,\n    0xBB8E7FE6,\n    0xBC75D85B,\n    0xCA1E6945,\n    0xDCC80C2F,\n    0xEE232411,\n    0xF8F0752E,\n    (unsigned int) &amp;sceLibFttt_02D7F94B,\n    (unsigned int) &amp;sceLibFttt_099EF33C,\n    (unsigned int) &amp;sceLibFttt_0DA7535E,\n    (unsigned int) &amp;sceLibFttt_27F6E642,\n    (unsigned int) &amp;sceLibFttt_2F67356A,\n    (unsigned int) &amp;sceLibFttt_3AEA8CB6,\n    (unsigned int) &amp;sceLibFttt_3C4B7E82,\n    (unsigned int) &amp;sceLibFttt_472694CD,\n    (unsigned int) &amp;sceLibFttt_48293280,\n    (unsigned int) &amp;sceLibFttt_48B06520,\n    (unsigned int) &amp;sceLibFttt_5333322D,\n    (unsigned int) &amp;sceLibFttt_568BE516,\n    (unsigned int) &amp;sceLibFttt_574B6FBC,\n    (unsigned int) &amp;sceLibFttt_57FCB733,\n    (unsigned int) &amp;sceLibFttt_5C3E4A9E,\n    (unsigned int) &amp;sceLibFttt_5DCF6858,\n    (unsigned int) &amp;sceLibFttt_67F17ED7,\n    (unsigned int) &amp;sceLibFttt_681E61A7,\n    (unsigned int) &amp;sceLibFttt_74B21701,\n    (unsigned int) &amp;sceLibFttt_980F4895,\n    (unsigned int) &amp;sceLibFttt_A834319D,\n    (unsigned int) &amp;sceLibFttt_AA3DE7B5,\n    (unsigned int) &amp;sceLibFttt_BB8E7FE6,\n    (unsigned int) &amp;sceLibFttt_BC75D85B,\n    (unsigned int) &amp;sceLibFttt_CA1E6945,\n    (unsigned int) &amp;sceLibFttt_DCC80C2F,\n    (unsigned int) &amp;sceLibFttt_EE232411,\n    (unsigned int) &amp;sceLibFttt_F8F0752E,\n};\n\nconst struct _PspLibraryEntry __library_exports[2] __attribute__((section(\".lib.ent\"), used)) = {\n    { NULL, 0x0000, 0x8000, 4, 2, 0, (unsigned int *) &amp;__syslib_exports },\n    { \"sceLibFttt\", 0x0011, 0x0001, 4, 0, 28, (unsigned int *) &amp;__sceLibFttt_exports },\n};\n</code></pre> \u751f\u6210\u7684C\u4ee3\u7801\u7684\u4f5c\u7528\u5b9e\u9645\u4e0a\u662f\u5728<code>.rodata.sceResident</code>\u6bb5\u4e2d\u4ee5\u8fde\u7eed\u7684\u7ed3\u6784\u4f53\u6570\u7ec4\u5b58\u5165\u6bcf\u4e2a\u5bfc\u51fa\u7684Library\u4e2d\u5bfc\u51fa\u51fd\u6570\u7684NID\u548c\u5bfc\u51fa\u7684\u51fd\u6570\u7684\u5730\u5740\u3002\u7136\u540e\u5728<code>.lib.ent</code>\u6bb5\u4f7f\u7528\u6a21\u5757\u540d\u548c<code>.rodata.sceResient</code>\u4e2d\u5bf9\u5e94\u9879\u7684\u5730\u5740\u521b\u5efa\u76f8\u5e94\u7684\u5bfc\u51fa\u6761\u76ee\u3002</li> </ol> <p></p> <pre><code>struct _PspLibraryEntry {\n   20         const char *    name;\n   21         unsigned short  version;\n   22         unsigned short  attribute;\n   23         unsigned char   entLen;\n   24         unsigned char   varCount;\n   25         unsigned short  funcCount;\n   26         void *                  entrytable;\n   27 \n}; \n</code></pre> Segment Name Export Index Export Entry Data Type .rodata.sceResident 1 __syslib_exports MagicNumber uint32 MagicNumber uint32 Address of module_info in .rodata.moduleInfo uint32 Address of module_sdk_version in .rodata.moduleInfo uint32 2 __sceLibFttt_exports 1st Function NID uint32 Function NID ... uint32 Address of 1st Function Addr Address of Functions... Addr .lib.ent 1 syslib Library Name(NULL) const char* 0x0000 u16 0x8000 u16 4 u8 2 Export Var Number u8 0 Export Fuction Number u16 &amp;__syslib_exports Addr <ol> <li> <p>\u5c06\u6b65\u9aa43\u4e2d\u7684C\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u4e0e\u6e90\u7a0b\u5e8f\u76f8\u94fe\u63a5\uff0c\u4ece\u800c\u5c06\u5bfc\u51fa\u8868\u4fe1\u606f\u5d4c\u5165\u6e90\u7a0b\u5e8f\u3002     build.mak<pre><code>ifdef PRX_EXPORTS # \u9884\u5148\u6307\u5b9a PRX_EXPORTS = your_name.exp\nEXPORT_OBJ=$(patsubst %.exp,%.o,$(PRX_EXPORTS)) # \u5c06\u5176\u7eb3\u5165\u6784\u5efa\u76ee\u6807\nEXTRA_CLEAN += $(EXPORT_OBJ) # \u5c06\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u7eb3\u5165clean\u76ee\u6807\n</code></pre> <pre><code># \u7f16\u8bd1\u94fe\u63a5\n$(TARGET).elf: $(OBJS) $(EXPORT_OBJ)\n$(LINK.c) $^ $(LIBS) -o $@\n$(FIXUP) $@\n</code></pre>     \u6ce8\u610f\uff0c\u94fe\u63a5\u65f6\u9700\u8981\u6307\u5b9a<code>LDFLAGS = -nostartfiles</code>\u4ee5\u907f\u514d\u51fa\u73b0<code>main</code>\u51fd\u6570\u7b26\u53f7\u672a\u5b9a\u4e49\u7684\u95ee\u9898\u3002</p> <p>\u81f3\u6b64\uff0c\u5bfc\u51fa\u8868\u5df2\u5d4c\u5165PRX\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u662f\u4e3a\u5c06\u8981\u4f7f\u7528\u8be5PRX\u6587\u4ef6\u7684\u6a21\u5757\u51c6\u5907\u7684</p> <p>\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u6307\u5b9a\u6bb5\u3002 \u5728.exp\u6587\u4ef6\u4e2d\u586b\u5199\u7684\u51fd\u6570\u540d\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5728\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u8fc7\u7a0b\u4e2d\u627e\u5230\u51fd\u6570\u5b9e\u73b0\u7684\u5730\u5740\u3002\u5728PSP\u5185\u6838\u8c03\u7528\u5916\u90e8prx\u65f6\uff0c\u6a21\u5757\u540d\u548c<code>NID</code>\u6210\u4e3a\u552f\u4e00\u7684\u6807\u8bc6\u7b26\u3002</p> </li> </ol>"},{"location":"stublibs/#step-2","title":"Step 2: \u4ece\u5bfc\u51fa\u8868\u751f\u6210\u5bfc\u5165\u8868","text":"<ol> <li>\u5bf9\u4e0a\u4e00\u6b65\u7f16\u5199\u7684\u5bfc\u51fa\u8868\u4f7f\u7528<code>psp-build-exports -k</code>\u751f\u6210\u5b58\u6839.S\u6587\u4ef6\uff08module stubs / import table\uff09</li> <li>\uff08\u53ef\u9009\uff09\u7f16\u8bd1<code>.S</code>\u5b58\u6839\u6587\u4ef6\u81f3<code>.o</code>\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u5e76\u901a\u8fc7ar\u6253\u5305\u6210<code>.a</code>\u9759\u6001\u94fe\u63a5\u5e93\u5b58\u6863\u6587\u4ef6\u5373\u5f97\u5230\u5b58\u6839\u5e93</li> </ol>"},{"location":"stublibs/#prx_1","title":"\u5728\u7a0b\u5e8f\u4e2d\u52a8\u6001\u52a0\u8f7dPRX\u6a21\u5757","text":"<ul> <li> <p>\u5199\u4ee3\u7801\u65f6\uff1a\u5305\u542b\u5b58\u6839\u5e93\u7684\u5934\u6587\u4ef6 \u4f7f\u7528PSPSDK\u4e2d\u52a0\u8f7d\u52a8\u6001\u5e93\u7684\u51fd\u6570 sceKernelLoadModule sceKernelFindModuleByUID sceKernelStartModule</p> </li> <li> <p>\u94fe\u63a5\u65f6\uff1a\u7f16\u8bd1\u5b58\u6839<code>.S</code>\u6587\u4ef6\u81f3\u5e76\u4e0e\u4e4b\u94fe\u63a5 / \u94fe\u63a5\u5b58\u6839\u5e93 <code>OBJS</code>\u4e2d\u6307\u5b9a.S-&gt;.o\u7684\u6587\u4ef6\u540d</p> </li> </ul> <p>.rodata.sceResident\u5b58\u5165\u5bfc\u5165\u7684\u6a21\u5757\u540d .lib.stub\u5b58\u5165Stub\u8868\u9879 // \u5176\u4e2d\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u6a21\u5757\u540d\u3002 // flags // 5 (entry size) x32bit // \u6307\u5411NID\u8868 // \u6307\u5411.sceStub.text .sceStub.text\u5b58\u5165\u51fd\u6570\u7a7a\u5b9e\u73b0\uff0c//\u5305\u62ec.lib.stub\u4e2dStub\u8868\u9879\u7684\u4f4d\u7f6e .rodata.sceNid\u5b58\u5165NID</p> <pre><code>.macro IMPORT_START module, flags_ver\n\n    .set push\n    .section .rodata.sceResident, \"a\"\n    .word   0\n__stub_modulestr_\\module:\n    .asciz  \"\\module\"\n    .align  2\n\n    .section .lib.stub, \"a\", @progbits\n    .global __stub_module_\\module   # \u5b9a\u4e49\u53d8\u91cf__stub_module\u5373\u4e3a\u6b64\u5904\u5730\u5740\n__stub_module_\\module:\n    .word   __stub_modulestr_\\module # Module Name String Addr\n    .word   \\flags_ver  // Flags\n    .word   0x5\n    .word   __executable_start  # \u5728psp-fixup-imports\u4e2d\u91cd\u5b9a\u4f4d\uff0c\u6307\u5411NID\u8868\n    .word   __executable_start  # \u5728psp-fixup-imports\u4e2d\u91cd\u5b9a\u4f4d\uff0c\u6307\u5411sceStub.text\n\n    .set pop\n.endm\n</code></pre> <p>.lib.stub has Stub Entries</p> <p><pre><code>.macro IMPORT_FUNC module, funcid, funcname\n    .set push\n    .set noreorder\n\n    .extern __stub_module_\\module\n    .section .sceStub.text, \"ax\", @progbits\n    .globl  \\funcname   // Make the symbol global\n    .type   \\funcname, @function\n    .ent    \\funcname, 0\n\\funcname:\n    .word   __stub_module_\\module   # Address of Module\uff0c\u5728psp-fixup-imports\u4e2d\u91cd\u5b9a\u4f4d\u7528\u3002\u88ab\u66ff\u6362\u4e3ajr ra;\n    .word   \\funcid # NID\uff0c\u5728psp-fixup-imports\u4e2d\u91cd\u5b9a\u4f4d\u7528, nop.\n    .end    \\funcname\n    .size   \\funcname, .-\\funcname\n\n    .section .rodata.sceNid, \"a\"\n    .word   \\funcid\n\n    .set pop\n.endm\n</code></pre> + \u94fe\u63a5\u4e4b\u540e</p> <p>\u5728<code>psp-fixup-imports</code>\u4e2d\u5229\u7528<code>.stub.text</code>\u4e2d\u5b58\u50a8\u7684\u4fe1\u606f\uff0c\u91cd\u5b9a\u4f4d<code>.lib.stub</code>\u4e2dNID\u5730\u5740\u4e0e\u5b58\u6839\u51fd\u6570\u5730\u5740\uff0c\u5e76\u5c06<code>.stub.text</code>\u4e2d\u5185\u5bb9\u586b\u5199\u4e3a<code>jr ra</code>\u4e0e<code>nop</code>\u3002</p> <p>https://uofw.github.io/upspd/docs/SilverSpring_Blog/my.malloc.us/silverspring/category/nids/index.html</p> <p>https://artart78.github.io/PSPLibDoc/</p>"},{"location":"time/","title":"Time / Timer","text":""},{"location":"time/#psp","title":"PSP\u7684\u8ba1\u65f6\u5668","text":""},{"location":"time/#newlibtimeh","title":"<code>newlib</code>\u4e2d<code>time.h</code>","text":""},{"location":"time/#unix-timestamp","title":"Unix timestamp.","text":"<p>Unix \u65f6\u95f4\u6233\u662f\u4ece1970\u5e741\u67081\u65e5\uff08UTC/GMT\u7684\u5348\u591c\uff09\u5f00\u59cb\u6240\u7ecf\u8fc7\u7684\u79d2\u6570\uff0c\u4e0d\u8003\u8651\u95f0\u79d2\u3002 <pre><code>struct timeval\n{\n    long tv_sec; /*\u79d2*/\n    long tv_usec; /*\u5fae\u79d2*/\n};\n</code></pre></p> <pre><code>struct tm\n{\n    int tm_sec;  /*\u79d2\uff0c\u6b63\u5e38\u8303\u56f40-59\uff0c \u4f46\u5141\u8bb8\u81f361*/\n    int tm_min;  /*\u5206\u949f\uff0c0-59*/\n    int tm_hour; /*\u5c0f\u65f6\uff0c 0-23*/\n    int tm_mday; /*\u65e5\uff0c\u5373\u4e00\u4e2a\u6708\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c1-31*/\n    int tm_mon;  /*\u6708\uff0c \u4ece\u4e00\u6708\u7b97\u8d77\uff0c0-11*/  1+p-&gt;tm_mon;\n    int tm_year;  /*\u5e74\uff0c \u4ece1900\u81f3\u4eca\u5df2\u7ecf\u591a\u5c11\u5e74*/  1900\uff0b p-&gt;tm_year;\n    int tm_wday; /*\u661f\u671f\uff0c\u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c \u4ece\u661f\u671f\u65e5\u7b97\u8d77\uff0c0-6*/\n    int tm_yday; /*\u4ece\u4eca\u5e741\u67081\u65e5\u5230\u76ee\u524d\u7684\u5929\u6570\uff0c\u8303\u56f40-365*/\n    int tm_isdst; /*\u65e5\u5149\u8282\u7ea6\u65f6\u95f4\u7684\u65d7\u6807*/\n};\n</code></pre>"},{"location":"time/#sdl_tick","title":"SDL_Tick();","text":""},{"location":"videoplayback/","title":"\u64ad\u653e\u89c6\u9891\u7684\u53ef\u80fd\u6027\uff1f","text":""},{"location":"videoplayback/#psp","title":"PSP\u5185\u7f6e\u7684\u89c6\u9891\u529f\u80fd","text":"<p>\u5728PSP\u5b98\u65b9\u56fa\u4ef6\u4e2d\u5176\u89c6\u9891\u64ad\u653e\u529f\u80fd\u4f53\u73b0\u5728\u4e24\u5904</p> <ul> <li> <p>\u7cfb\u7edf\u5185\u7f6e\u7684\u89c6\u9891\u64ad\u653e\u5668\u8f6f\u4ef6</p> </li> <li> <p>\u5728XMB\u4e2d\u663e\u793a\u6e38\u620f\u65f6\u64ad\u653e\u7684\u77ed\u7247</p> </li> </ul> <p>\u524d\u8005\u80fd\u8bfb\u53d6\u8bb0\u5fc6\u68d2\u4e2d\u5b58\u50a8\u7684<code>MP4</code>\u5c01\u88c5\u7684\u89c6\u9891\u6587\u4ef6\uff0c\u800c\u540e\u8005\u5219\u64ad\u653e\u5d4c\u5165PBP\u6587\u4ef6\u4e2d\u7684<code>pmf</code>(PlayStation Movie Format)\u89c6\u9891\u6587\u4ef6\u3002</p> <p>\u4e8c\u8005\u5177\u4f53\u652f\u6301\u7684\u89c4\u683c\u5982\u4e0b(\u53ef\u80fd\u6709\u8bef)\uff1a</p> \u5c01\u88c5\u683c\u5f0f(Container) \u89c6\u9891\u5206\u8fa8\u7387(Resolution) \u89c6\u9891\u7f16\u7801(Codec) \u97f3\u9891\u91c7\u6837\u7387 \u97f3\u9891\u7f16\u7801 \u9650\u5236 MP4 (MPEG-4 Part 12) 320 x 240 (QVGA) MPEG-4 Simple Profile (MPEG-4 Part 2) / H.264 Main Profile / H.264 Baseline Profile 24000Hz AAC LC Non Statanrd Resolution &amp; Bitrate \u53c2\u89c1YAPSPD <sup>1</sup> PMF can be as small as 64x64 pixels H.264 (MPEG-4 Part 10 AVC) ATRAC3plus 64kbps<sup>2</sup> <p>MPEG-4 Simple Profile \u5728MPEG-4 Part 2 \u4e2d\u5b9a\u4e49\uff0c\u4e0d\u540c\u4e8e Advanced Simple Profile<sup>3</sup>\uff0c\u66f4\u4e0eH.264\u65e0\u5173 </p> <p>\u4f9d\u636e\u4e92\u8054\u7f51\u4e0a\u5b58\u5728\u7684\u90e8\u5206\u538b\u5236\u6307\u5357\u53ca\u5b98\u65b9\u6587\u6863\uff0c\u4f3c\u4e4e\u6700\u65b0\u56fa\u4ef6\u4e0a\u7684\u89c6\u9891\u64ad\u653e\u5668\u5bf9\u5206\u8fa8\u7387\u548c\u7f16\u7801\u9650\u5236\u5e76\u4e0d\u5982\u6b64\u4e25\u683c</p> <p><code>PSvid</code> script on <code>Github</code></p> <p><code>ffmpeg -i sample.mp4 c:a aac -c:v libx264 -profile:v main -level:v 3.0 -x264opts ref=3:b-pyramid=none:weightp=1 -r 29.97 -s 320x240 -pix_fmt yuv420p -b:v 768k -ar 48000 -ab 96k</code></p> <p>AVC MainProfile CABAC codec  </p> <p>OFW 6.60 Manual</p> <p>You can play files of the following types on the PSP\u2122 system.</p> <p>Memory Stick\u2122 Video Format - MPEG-4 Simple Profile (AAC)</p> <ul> <li>H.264/MPEG-4 AVC Main Profile (CABAC) (AAC) and Baseline Profile (AAC)</li> </ul> <p>MP4 - MPEG-4 Simple Profile (AAC)</p> <ul> <li>H.264/MPEG-4 AVC Main Profile (CABAC) (AAC) and Baseline Profile (AAC)</li> </ul> <p>AVI - Motion JPEG (Linear PCM)</p> <ul> <li>Motion JPEG (\u03bc-Law)</li> </ul> <p>\u4e0d\u8bba\u5982\u4f55\uff0c\u8fd9\u81f3\u5c11\u8bc1\u660e\u4e86PSP\u80fd\u901a\u8fc7\u786c\u4ef6\u52a0\u901f\u89e3\u7801\u7684\u89c6\u9891\u7f16\u7801\u81f3\u5c11\u5305\u62ec<code>MPEG-4 SP</code>\u548c<code>H.264 Main Profile</code></p>"},{"location":"videoplayback/#psp-libmpeg-libvideocodec","title":"PSP \u5185\u7f6e\u7684 <code>libMpeg</code> \u4e0e <code>libVideocodec</code> \u6709\u591a\u5927\u80fd\u529b?","text":"<p>\u6027\u80fd\u5982\u4f55\uff1f\u80fd\u89e3\u7801\u4f55\u79cd\u89c6\u9891\u6d41\uff1f + libmpeg(pspmpeg)   + Codec Library(pspvideocodec)   + Mpegbase Library(pspmpegbase)     </p>"},{"location":"videoplayback/#_2","title":"\u524d\u4eba\u7684\u52aa\u529b","text":"<ul> <li> <p><code>PMP(PSP Media Player)</code>(2005 JiniCho) -&gt; <code>PMP MOD</code> (jonny)</p> </li> <li> <p>\u4f7f\u7528FFmpeg\u8fdb\u884c\u89c6\u9891\u89e3\u5c01\u88c5\u53ca\u89e3\u7801</p> </li> <li> <p><code>pmfplayer</code>/<code>pmfplayer-lib</code>(2006 magiK)</p> </li> <li> <p>\u4f7f\u7528PSP\u5185\u90e8\u5e93\u89e3\u5c01\u88c5<code>pmf</code>\u53ca\u89e3\u7801<code>H.264</code></p> </li> <li> <p><code>PMP MOD AVC</code>(2006 jonny) / <code>PMPlayer Advanced(PPA)</code>(2011 cooleyes)</p> </li> <li> <p>\u7efc\u5408\u4f7f\u7528\u4e8c\u8005\u8fdb\u884c\u89e3\u7801</p> </li> <li>\u6211\u60f3<code>PPA</code>\u5e94\u8be5\u662f\u7edd\u54cd\u4e86\uff0c\u636e\u79f0\u652f\u6301<code>OFW 6.60</code></li> </ul> <p>\u6709\u4e9b\u611f\u6168\uff0c\u4ee5\u524d\u7684\u4eba\u4eec\u4ee3\u7801\u4ea4\u6d41\u5168\u9760\u5728\u8bba\u575b\u53d1\u4e34\u65f6\u7684\u7f51\u76d8\u94fe\u63a5\uff0c\u5982\u4eca\u5de5\u4f5c\u6d41\u5df2\u7136\u5927\u5927\u6539\u5584\u3002</p>"},{"location":"videoplayback/#libmpeg","title":"libmpeg","text":"<p>libmpeg is a library that can be used for <code>demultiplexing</code> a PSP\u2122 Movie Format (for game) stream (hereafter, PSMF stream), and <code>decoding</code> the demultiplexed video and audio streams.</p> <p>access unit: A set of NAL units that are consecutive in decoding order and contain exactly one primary coded  picture. In addition to the primary coded picture, an access unit may also contain one or more redundant coded  pictures, one auxiliary coded picture, or other NAL units not containing slices or slice data partitions of a coded picture. The decoding of an access unit always results in a decoded picture.</p>"},{"location":"videoplayback/#ffmpeg","title":"FFmpeg","text":"<p>\u5728Github\u4e0a\u5b58\u5728\u7740\u5229\u7528\u4e86\u5c11\u91cfPSP\u6c47\u7f16\u4ee3\u7801\u4f18\u5316\u7684\u7684FFmpeg 0.5\u5b9e\u73b0\uff08ffmpeg-psp\uff09\uff0c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u5176\u4f18\u5316\u7a0b\u5ea6\uff0c\u800cAPI\u4ea6\u8fc7\u4e8e\u8001\u65e7\u3002 + \u89e3\u7801\u901f\u5ea6\u5b9e\u9645\u4e0a\u76f8\u5f53\u5feb\uff0c\u81f3\u5c11\u8089\u773c\u4e0a\u6bd42023\u5e74\u6784\u5efa\u7684\u7248\u672c\u5feb\u4e0d\u5c11\u3002\uff08\u4e0b\u4e00\u6b65\u8981\u5b9e\u6d4b\uff01\uff09 + \u611f\u89c9\u901f\u5ea6\u8fd8\u662f\u9650\u5236\u5728\u4e86<code>swscale</code>\u548c<code>SDL</code>\u7684\u6e32\u67d3\u4e0a\u3002 + \u67e5\u4e00\u4e0bFFmpeg Release\uff0c\u5927\u7ea6\u662f2010\u5e74\u7684\u7248\u672c\u3002</p> <p>\u4e0d\u663e\u793a\u4f30\u8ba1\u670922fps.</p> <p>\u8ba9\u6211\u4eec\u4eceFFmpeg\u5f00\u59cb\u5427\uff0c\u91cd\u8d70\u8fd120\u5e74\u524d\u4eba\u4eec\u8d70\u8fc7\u7684\u8001\u8def\u3002\u4e0d\u8fc7FFmpeg\u81f3\u4eca\u672a\u65ad\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u5982\u4eca\u6700\u597d\u8d70\u7684\u8def\u5427\u3002</p> <p>\u81f4\u656c\u96f7\u795e\u3002</p>"},{"location":"videoplayback/#build-ffmpeg-from-source","title":"Build FFmpeg from source","text":"<p>\u4e0d\u8bba\u662fFFmpeg-psp\u8fd8\u662f\u5982\u4eca\u6bcf\u65e5\u6784\u5efa\u7684ffmpeg\uff0c\u60f3\u8981\u53d6\u51fa\u5176\u7279\u5b9a\u529f\u80fd\u6211\u4eec\u8fd8\u5f97\u624b\u52a8\u6784\u5efa</p> <ul> <li>\u534f\u52a9\u63a7\u5236\u7f16\u8bd1\u7684./configure \u6587\u4ef6\uff08\u4fee\u6539\u8ba9\u4ed6\u652f\u6301\u6211\u7684psp\u53c2\u6570\uff1a\u4e5f\u5c31\u662f\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u56e0\u4e3a\u4e0d\u652f\u6301\u5e73\u53f0-specific\u7684code\uff09</li> <li>\u652f\u6301\u4ec0\u4e48\uff0c\u53c2\u6570\u600e\u4e48\u6539\uff1f<ul> <li>disable/enable</li> <li>install\u7684\u4f4d\u7f6e</li> <li>cross-compile</li> </ul> </li> <li> <p>\u6211\u4eec\u9700\u8981\u7684\u5e93 <code>libav?</code></p> </li> <li> <p>\u6ca1\u6709\u786c\u89e3\u884c\u4e0d\u884c\uff1f</p> </li> <li> <p> \u76ee\u524d\u7248\u672c\u53f7\u663e\u793a\u53ef\u4ee5\u505a\u5230</p> </li> <li> \u6587\u4ef6\u8bfb\u53d6/\u89e3\u5c01\u88c5\u6210\u529f</li> <li> \u89e3\u7801\u6210\u529f</li> <li> \u7f29\u653e\u6210\u529f</li> <li>[] \u5e27\u7387\u5982\u4f55\uff1f</li> <li>[] \u97f3\u9891\u64ad\u653e</li> <li>[] \u97f3\u89c6\u9891\u540c\u6b65</li> </ul>"},{"location":"videoplayback/#demuxing","title":"Demuxing","text":"<p>\u6211\u60f3\u8fd9\u4e2a\u5de5\u4f5c\u5c31\u4ea4\u7ed9FFmpeg\u5427\uff0c\u6bd5\u7adf\u683c\u5f0f\u786e\u5b9e\u53d8\u5316\u4e07\u5343\u3002</p>"},{"location":"videoplayback/#decoding","title":"Decoding","text":"<p>\u4f7f\u7528PSP\u5185\u7f6eME\u6709\u65e0\u53ef\u80fd\uff1f\u4f9d\u636e<code>PMP AVC</code>\u4f3c\u4e4e\u53ef\u4ee5\u8003\u8651<code>MElib</code>.</p>"},{"location":"videoplayback/#rendering","title":"Rendering","text":"<p>\u4f7f\u7528SDL\uff1f</p>"},{"location":"videoplayback/#ffplay","title":"FFPlay","text":"<p>FFPlay\u662f\u4e00\u4e2a\u5355\u6587\u4ef6\u7684\u64ad\u653e\u5668\u793a\u4f8b\u3002\u5177\u6709\u6781\u9ad8\u7684\u53c2\u8003\u4ef7\u503c\u3002\u5c24\u5176\u5bf9\u4e8e\u5982\u4f55\u4f7f\u7528\u8001\u65e7API\u800c\u8a00\u3002 FFmpeg\u662f\u4e2a\u5386\u53f2\u6587\u6863\u6e05\u6670\u53ef\u67e5\u8be2\u7684\u5927\u9879\u76ee\u3002\u8fd9\u4e00\u70b9\u8fd8\u662f\u5341\u5206\u4ee4\u4eba\u611f\u52a8\u3002 \u53ef\u60dc\u7684\u662fSDL2\u7684API\u4ea6\u5728\u6025\u5267\u53d8\u5316\u3002 \u60f3\u8981\u628a\u8fd9\u4e24\u8005\u6b63\u786e\u878d\u5408\u8fd8\u662f\u5f88\u96be\u554a\uff01 \u4e0d\u8fc7SDL\u4e00\u4ee3\u4e8c\u4ee3\u5747\u6709PSP\u7248\u672c\u3002\u8003\u53e4\u4e5f\u662f\u6709\u5f88\u5927\u6210\u529f\u673a\u4f1a\u7684\uff01 \u9119\u4eba\u5df2\u7ecf\u7ef7\u4e0d\u4f4f\u4e86\uff0c\u8fd8\u662f\u7528GUI\u5148\u6d4b\u8bd5\u4e00\u6ce2\u5427\uff01</p>"},{"location":"videoplayback/#audio-playback","title":"Audio Playback","text":"<p>\u592a\u72d7\u4e86\uff0c\u65e7\u7248FFmpeg\u4e0d\u652f\u6301SBR\uff1f\uff1f <pre><code>\u97f3\u9891\nID                             : 2\n\u683c\u5f0f                             : AAC LC SBR\n\u683c\u5f0f/\u4fe1\u606f                          : Advanced Audio Codec Low Complexity with Spectral Band Replication\n\u4f20\u64ad\u540d                            : HE-AAC\n\u683c\u5f0f\u8bbe\u7f6e                           : NBC\n\u7f16\u89e3\u7801\u5668 ID                        : mp4a-40-5\n\u65f6\u957f                             : 21 \u5206 36 \u79d2\nDuration_LastFrame             : -1 \u6beb\u79d2\n\u7801\u7387\u6a21\u5f0f                           : \u6052\u5b9a\u7801\u7387 (CBR)\n\u7801\u7387                             : 48.0 kb/s\n\u58f0\u9053\u6570                            : 2 \u58f0\u9053\n\u58f0\u9053\u5e03\u5c40                           : L R\n\u91c7\u6837\u7387                            : 48.0 kHz\n\u5e27\u7387                             : 23.438 FPS (2048 SPF)\n\u538b\u7f29\u6a21\u5f0f                           : \u6709\u635f\n\u6d41\u5927\u5c0f                            : 7.17 MiB (22%)\nDefault                        : \u662f\n\u7ec4\u522b                             : 1\n</code></pre></p> <p>\u53c2\u8003\u4e86FFplay\u548c\u5176\u4ed6\u6559\u7a0b\u3002\u7136\u800c\u5b9e\u673a\u64ad\u653e\u6781\u4e3a\u5361\u987f\u3002\u4ec5\u64ad\u653e\u97f3\u9891\u90fd\u4e0d\u884c\u3002\u52a0\u4e0a\u89c6\u9891\u89e3\u7801\u66f4\u662f\u65e0\u6bd4\u7f13\u6162\u3002\u5341\u5206\u4f24\u5fc3\uff0c\u611f\u89c9\u6682\u65f6\u662f\u65e0\u671b\u4e86\u3002</p>"},{"location":"videoplayback/#_3","title":"\u53c2\u8003\u8d44\u6599","text":"<p>Reference form YAPSPD</p> <pre><code>Video Limitation Resolution: 320 x 240 (QVGA), Nonstandard resolutions can be used but are still limited to the 76,800 pixel resolution of QVGA. \n\nCodec: MPEG-4 SP (Simple Profile), which has different headers than the more common MPEG-4 formats.\n\nAudio Limitation Codec: AAC Sampling Rate: 24000hz Bitrate Limitation: 1-768kb/s &amp; 1500kb/s.\n\nAny combination of video and audio bitrate that is equal to or less than 768kb/s is acceptable (i.e. 640kb/s video + 128kb/s audio = 768kb/s total, or 300kb/s video + 32kb/s audio = 332kb/s total). The PSP also supports a bitrate of 1500kb/s, but no bitrates inbetween 768kb/s and 1500kb/s.\n\nnote: ffmpeg can create PSP compatible mpeg4 files using the '3gp' profile\n</code></pre> <pre><code>PMP Mod AVC by jonny\n\nHomepage: http://jonny.leffe.dnsalias.com\nE-mail:   jonny@leffe.dnsalias.com\n\n\nPMP Mod uses libavcodec from FFMPEG (http://ffmpeg.sourceforge.net/)\nMany thanks goes to:\n\n- magiK (PMF Player author) for unlocking the avc api and\n  x264 compatibility, great work\n- FFMPEG developers\n- JiniCho (PMP Mod is a modified version of his original FFMPEG and\n  FFPLAY psp port)\n- ps2dev.org developers and users\n- malloc/Raphael for the nice \"modmod\" version :)\n- Swede (http://www.doom9.org/), my super webspace provider\n- argandona &amp; all the others helping with the icon/bg\n</code></pre> <pre><code>Bilibili:\n\u89c6\u9891\nID                             : 1\n\u683c\u5f0f                             : AVC\n\u683c\u5f0f/\u4fe1\u606f                          : Advanced Video Codec\n\u683c\u5f0f\u914d\u7f6e (Profile)                 : High@L5.1\n\u683c\u5f0f\u8bbe\u7f6e                           : CABAC / 4 Ref Frames\n\u683c\u5f0f\u8bbe\u7f6e, CABAC                    : \u662f\n\u683c\u5f0f\u8bbe\u7f6e, \u53c2\u8003\u5e27                      : 4 \u5e27\n\u7f16\u89e3\u7801\u5668 ID                        : avc1\n\u7f16\u89e3\u7801\u5668 ID/\u4fe1\u606f                     : Advanced Video Coding\n</code></pre> <p><pre><code>PSP DEV\n\u89c6\u9891\nID                             : 2\n\u683c\u5f0f                             : AVC\n\u683c\u5f0f/\u4fe1\u606f                          : Advanced Video Codec\n\u683c\u5f0f\u914d\u7f6e (Profile)                 : Main@L2.1\n\u683c\u5f0f\u8bbe\u7f6e                           : CABAC / 2 Ref Frames\n\u683c\u5f0f\u8bbe\u7f6e, CABAC                    : \u662f\n\u683c\u5f0f\u8bbe\u7f6e, \u53c2\u8003\u5e27                      : 2 \u5e27\n\u683c\u5f0f\u8bbe\u7f6e, GOP                      : M=1, N=30\n\u7f16\u89e3\u7801\u5668 ID                        : avc1\n\u7f16\u89e3\u7801\u5668 ID/\u4fe1\u606f                     : Advanced Video Coding\n</code></pre> <pre><code>PSVid\n\u89c6\u9891\nID                             : 1\n\u683c\u5f0f                             : AVC\n\u683c\u5f0f/\u4fe1\u606f                          : Advanced Video Codec\n\u683c\u5f0f\u914d\u7f6e (Profile)                 : Main@L3\n\u683c\u5f0f\u8bbe\u7f6e                           : CABAC / 3 Ref Frames\n\u683c\u5f0f\u8bbe\u7f6e, CABAC                    : \u662f\n\u683c\u5f0f\u8bbe\u7f6e, \u53c2\u8003\u5e27                      : 3 \u5e27\n\u7f16\u89e3\u7801\u5668 ID                        : avc1\n\u7f16\u89e3\u7801\u5668 ID/\u4fe1\u606f                     : Advanced Video Coding\n</code></pre></p>"},{"location":"webrequest/","title":"\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42","text":""},{"location":"webrequest/#psp","title":"PSP\u5982\u4f55\u8fde\u63a5\u7f51\u7edc","text":""},{"location":"webrequest/#pspwi-fi","title":"PSP\u652f\u6301\u7684<code>Wi-Fi</code>\u534f\u8bae","text":"<p><code>802.11b</code>(1999): \u5de5\u4f5c\u9891\u6bb5\u4e3a<code>2.4GHz</code>\uff0c\u6700\u9ad8\u901f\u7387\u534a\u53cc\u5de511 Mbit/s</p> <p>Wi-Fi\u6807\u51c6\u63d0\u4f9b\u5411\u540e\u517c\u5bb9\u6027\uff0c\u4ee5\u4fbf\u65e7\u8bbe\u5907\u4ecd\u7136\u53ef\u4ee5\u4e0e\u65b0\u7684\u63a5\u5165\u70b9\u548c\u8bbe\u5907\u8fdb\u884c\u4e92\u64cd\u4f5c\u3002</p> <p>Wi-Fi 4 (802.11n)(2008)</p> <p>Wi-Fi 5 (802.11ac)(2014)</p> <p>Wi-Fi 6 (802.11ax)(2019)</p>"},{"location":"webrequest/#pspwifi","title":"PSP\u652f\u6301\u7684WiFi\u52a0\u5bc6\u534f\u8bae","text":"<ul> <li>WEP</li> <li>WPA-PSK(TKIP)</li> <li>WPA-PSK(AES) <p>\u4e0d\u652f\u6301 + WPA2 + WPA2-PSK + WPA3</p> </li> </ul>"},{"location":"webrequest/#_2","title":"\u5728\u5e94\u7528\u4e2d\u8fde\u63a5\u7f51\u7edc","text":"<p>\u5f39\u51fa\u5f39\u7a97\uff0c\u9009\u62e9\u5e76\u8fde\u63a5</p>"},{"location":"webrequest/#network-dialog","title":"\u5524\u8d77\u7f51\u7edc\u8fde\u63a5\u5f39\u7a97 Network Dialog","text":""},{"location":"webrequest/#sockethttp-lib-in-pspsdk","title":"<code>socket&amp;http lib</code> in PSPSDK","text":"<p>\u6682\u65e0\u7814\u7a76\u8ba1\u5212</p>"},{"location":"webrequest/#curl-mbedtls-in-pspdev-package-enable-https","title":"<code>curl</code> &amp; <code>mbedtls</code> in PSPDEV package (enable https)","text":"<p>PSPHDC-23/Jokr at main \u00b7 KorigamiK/PSPHDC-23</p> <p>main.c <pre><code>size_t writeCallback(char *contents, size_t size, size_t nmemb, void *userp)\n{\n    ((std::string *)userp)-&gt;append((char *)contents, size * nmemb);\n    return size * nmemb;\n}\n\nCURLcode getRequest(const std::string &amp;url, std::string &amp;buffer, bool verbose = false)\n{\n    CURL *curl = curl_easy_init();\n    if (!curl)\n    {\n        SDL_Log(\"Failed to initialize curl\");\n        return CURLE_FAILED_INIT;\n    }\n\n    curl_easy_setopt(curl, CURLOPT_URL, url.c_str());\n    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, writeCallback);\n    curl_easy_setopt(curl, CURLOPT_WRITEDATA, &amp;buffer);\n    curl_easy_setopt(curl, CURLOPT_VERBOSE, verbose);\n    curl_easy_setopt(curl, CURLOPT_USERAGENT, \"curl/7.64.1\");\n    curl_easy_setopt(curl, CURLOPT_HTTPHEADER, curl_slist_append(nullptr, \"Accept: text/plain\"));\n    curl_easy_setopt(curl, CURLOPT_SSL_VERIFYHOST, 0L);\n    curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, 0L);\n    curl_easy_setopt(curl, CURLOPT_SSLVERSION, CURL_SSLVERSION_TLSv1_2);\n    curl_easy_setopt(curl, CURLOPT_CONNECTTIMEOUT, 10L);\n    curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);\n    curl_easy_setopt(curl, CURLOPT_MAXREDIRS, 20L);\n    curl_easy_setopt(curl, CURLOPT_USE_SSL, CURLUSESSL_TRY);\n\n    CURLcode res = curl_easy_perform(curl);\n    if (res != CURLE_OK)\n        SDL_Log(\"Failed to perform curl request: %s\", curl_easy_strerror(res));\n\n    curl_easy_cleanup(curl);\n    return res;\n}\n</code></pre></p> <p>network.hpp <pre><code>int netDialog(SDL_Renderer *renderer)\n{\n    int done = 0;\n\n    pspUtilityNetconfData data;\n\n    memset(&amp;data, 0, sizeof(data));\n    data.base.size = sizeof(data);\n    data.base.language = PSP_SYSTEMPARAM_LANGUAGE_ENGLISH;\n    data.base.buttonSwap = PSP_UTILITY_ACCEPT_CROSS;\n    data.base.graphicsThread = 17;\n    data.base.accessThread = 19;\n    data.base.fontThread = 18;\n    data.base.soundThread = 16;\n    data.action = PSP_NETCONF_ACTION_CONNECTAP;\n\n    struct pspUtilityNetconfAdhoc adhocparam;\n    memset(&amp;adhocparam, 0, sizeof(adhocparam));\n    data.adhocparam = &amp;adhocparam;\n\n    sceUtilityNetconfInitStart(&amp;data);\n\n    while (!done)\n    {\n        SDL_RenderClear(renderer);\n        SDL_RenderPresent(renderer);\n\n        switch (sceUtilityNetconfGetStatus())\n        {\n        case PSP_UTILITY_DIALOG_NONE:\n            break;\n\n        case PSP_UTILITY_DIALOG_VISIBLE:\n            sceUtilityNetconfUpdate(1);\n            break;\n\n        case PSP_UTILITY_DIALOG_QUIT:\n            printf(\"PSP_UTILITY_DIALOG_QUIT\");\n            sceUtilityNetconfShutdownStart();\n            break;\n\n        case PSP_UTILITY_DIALOG_FINISHED:\n            done = 1;\n            break;\n\n        default:\n            break;\n        }\n\n        SDL_Delay(10);\n    }\n\n    return 1;\n}\n\nvoid netInit(void)\n{\n    sceNetInit(128 * 1024, 42, 4 * 1024, 42, 4 * 1024);\n    sceNetInetInit();\n    sceNetApctlInit(0x8000, 48);\n}\n\nvoid startNetworking(SDL_Renderer *renderer)\n{\n    int rc = sceUtilityLoadNetModule(PSP_NET_MODULE_COMMON);\n    if (rc &lt; 0)\n        printf(\"net common didn't load.\\n\");\n    rc = sceUtilityLoadNetModule(PSP_NET_MODULE_INET);\n    if (rc &lt; 0)\n        printf(\"inet didn't load.\\n\");\n\n    netInit();\n    netDialog(renderer);\n}\n\nvoid netTerm(void)\n{\n    sceNetApctlTerm();\n    sceNetInetTerm();\n    sceNetTerm();\n}\n\nvoid stopNetworking()\n{\n    sceUtilityUnloadNetModule(PSP_NET_MODULE_INET);\n    sceUtilityUnloadNetModule(PSP_NET_MODULE_COMMON);\n    netTerm();\n}\n</code></pre></p> <p>\u94fe\u63a5<code>mbedtls mbedcrypto mbedx509</code></p>"},{"location":"archive/readme/","title":"Readme","text":"<p>\u672c\u6587\u4ef6\u5939\u5185\u4e3a\u4e92\u8054\u7f51\u4e2d\u5b58\u6863\uff0c\u7248\u6743\u5f52\u539f\u4f5c\u8005\u6240\u6709\u3002</p>"},{"location":"libs/font/","title":"PGF file","text":"<p>PPSSPP\u6709PGF\u6587\u4ef6\u7684\u89e3\u6790\u5b9e\u73b0\u3002</p>"},{"location":"libs/font/#manipulating-pgf-files","title":"Manipulating PGF Files.","text":"<p>A Commandline tool for manipulating PGF File</p> <p>PGFTool</p> <p>A Windows Tool for manipulating PGF file</p> <p>PSP-Pixels</p> <p>An old and more general Locolization Tool in Chinese. </p> <p>Firefly</p>"},{"location":"libs/font/#libfont","title":"libFont","text":"<p>PPSSPP\u6709\u4e00\u4e2alibFont\u7684\u5b9e\u73b0\u3002</p> <p>charCode is UCS2. UCS2\uff0c\u53ef\u8ba4\u4e3a\u662fUTF-16\u7528\u4e8c\u4e2a\u5b57\u8282\u6765\u8868\u793a\u57fa\u672c\u5e73\u9762</p> <p>UTF-16 \u7f16\u7801\u8868 Unicode \u4e2d\u7684\u4e00\u4e2a\u7f16\u7801\u533a\u6bb5\uff0c\u7f16\u7801\u4ece U+0000 \u81f3 U+FFFF\uff0c\u4e5f\u79f0\u57fa\u672c\u591a\u6587\u79cd\u5e73\u9762\uff08Basic Multilingual Plane\uff0cBMP\uff09\uff0c\u6216\u7b2c\u96f6\u5e73\u9762\uff08Plane 0\uff09\u3002</p> <p>Unicode \u7f16\u7801\u89c4\u5b9a\u4ee5\u4e0b\u5b57\u7b26\u8303\u56f4\u4e3a\u63a7\u5236\u5b57\u7b26\uff0c\\U0000 - \\U001F, \\U007F, \\U0080 - \\U009F\u3002</p> <p>UCS-2 \u7528 0x0000 - 0xFFFF \u4ee3\u8868\u6240\u6709UTF-8\u7684\u5b57\u7b26\u3002 \u5047\u8bbe\u4e00\u4e2a\u5b57\u7b26\u4e3a16x16, \u4e00\u4e2abyte\uff088Bit\uff09\u53ef\u4ee5\u4ee3\u88688\u4e2a\u70b9, 32\u4e2abyte\u5c31\u53ef\u4ee5\u4ee3\u8868\u4e00\u4e2a\u5b57, 2Mib\u521a\u597d\u8868\u793a\u6574\u4e2aUCS-2\u5b57\u5e93\u3002</p> <p>PSP\u5728\u4f7f\u7528\u7684\u65f6\u5019, \u8ddf\u636eUCS2\u7f16\u7801\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u504f\u79fb\u91cf, \u5e76\u53d6\u51fa32\u4e2abyte, \u8fdb\u884c\u4f4d\u8fd0\u7b97, \u6253\u5370\u51fa\u4e00\u4e2a\u5b57\u7b26.</p>"},{"location":"libs/font/#pgf","title":"PGF","text":"<p>26.9  PGF</p> <p>The PSP font format (.PGF files) is a bitmap based font format. Each letter (as well as its shadow) is a single, 4bpp bitmap, saved in the font file in a RLE compressed form. The bitmaps are encoded using either vertical or horizontal rows, depending on a certain 2-bit field in character metrics. Every [character, shadow] bitmap pair is preceded by a character metrics record. For Latin fonts the length of this record appears to be 12 bytes (with an optional 7-byte extension), for other families it's different. It's not known at this time what is the determinant of the record length. The metrics record contains the following fields: 14-bit offset of the shadow header record 7-bit width 7-bit height 7-bit signed horizontal adjustment 7-bit ascender 2-bit transposition (1 - horizontal rows, 2 - vertical rows) 1-bit modified record field (adds a 7-byte extension to the 12-byte header for ltn0.pgf) 46 bits of unknown data 5-bit horizontal advance To find the character metrics one has to read the main pointer table. The table is constructed of N-bit pointers, where N is found in the file header at offset 0x1C. The number of pointers (and characters) can be found in the file header at offset 0x14. It is not known yet how to locate the main pointer table. The RLE compression works on 4-bit nibbles (the low nibble of a byte is considered to precede the high nibble in the stream). There are two sequences defined for this RLE: a nibble N&lt;8: take next nibble and replicate N+1 times into the output stream a nibble N&gt;7: take next 16-N nibbles and copy directly into the output stream</p> <p>\u4e0a\u9762\u7684\u6587\u7ae0\u597d\u50cf\u662f\u9488\u5bf9\u62c9\u4e01\u5b57\u7b26\u7684\uff0c\u4e2d\u6587\u5b57\u7b26\u611f\u89c9\u8981\u53c2\u8003\u4e00\u4e0b\u56fd\u5185\u7684\u7a0b\u5e8f\uff0c\u6216\u8005PPSSPP\u3002</p> <p><code>liquidzigong</code>? <code>TPU</code>?</p> <p>\u602a\u7269\u730e\u4eba\uff1f \u68a6\u5e7b\u4e4b\u661f\u643a\u5e26\u72482\u7b49\uff1f <code>oldfont.prx</code>?</p> <pre><code>Name:    fontfuck\nAttrib:  0000\nVersion: 1.1\nGP:      00008EF0\n\nExports:\nExport 0, Name syslib, Functions 1, Variables 1, flags 80000000\nExport 1, Name sceLibFont, Functions 15, Variables 0, flags 00010000\n\nImports:\nImport 0, Name sceLibFttt, Functions 27, Variables 0, flags 00090011\nImport 1, Name IoFileMgrForUser, Functions 5, Variables 0, flags 40010000\nImport 2, Name ModuleMgrForUser, Functions 2, Variables 0, flags 40010000\nImport 3, Name StdioForUser, Functions 1, Variables 0, flags 40010000\nImport 4, Name ThreadManForUser, Functions 4, Variables 0, flags 40010000\n</code></pre> <p>https://gist.github.com/TellowKrinkle/3414f704ba39d4dea5773df5a6f53f3c</p> <p>new Module(\"sceLibFttt\",             new SCE(0x67f17ed7, \"sceFontNewLib\", 'x', \"xx\"),             new SCE(0x574b6fbc, \"sceFontDoneLib\", 'i', \"x\"),             new SCE(0x48293280, \"sceFontSetResolution\", 'i', \"xff\"),             new SCE(0x27f6e642, \"sceFontGetNumFontList\", 'i', \"xx\"),             new SCE(0xbc75d85b, \"sceFontGetFontList\", 'i', \"xxi\"),             new SCE(0x099ef33c, \"sceFontFindOptimumFont\", 'i', \"xxx\"),             new SCE(0x681e61a7, \"sceFontFindFont\", 'i', \"xxx\"),             new SCE(0x2f67356a, \"sceFontCalcMemorySize\", 'i', \"\"),             new SCE(0x5333322d, \"sceFontGetFontInfoByIndexNumber\", 'i', \"xxx\"),             new SCE(0xa834319d, \"sceFontOpen\", 'x', \"xxxx\"),             new SCE(0x57fcb733, \"sceFontOpenUserFile\", 'x', \"xsxx\"),             new SCE(0xbb8e7fe6, \"sceFontOpenUserMemory\", 'x', \"xxxx\"),             new SCE(0x3aea8cb6, \"sceFontClose\", 'i', \"x\"),             new SCE(0x0da7535e, \"sceFontGetFontInfo\", 'i', \"xx\"),             new SCE(0xdcc80c2f, \"sceFontGetCharInfo\", 'i', \"xxx\"),             new SCE(0xaa3de7b5, \"sceFontGetShadowInfo\", 'i', \"xxx\"),             new SCE(0x5c3e4a9e, \"sceFontGetCharImageRect\", 'i', \"xxx\"),             new SCE(0x48b06520, \"sceFontGetShadowImageRect\", 'i', \"xxx\"),             new SCE(0x980f4895, \"sceFontGetCharGlyphImage\", 'i', \"xxx\"),             new SCE(0xca1e6945, \"sceFontGetCharGlyphImage_Clip\", 'i', \"xxxiiii\"),             new SCE(0x74b21701, \"sceFontPixelToPointH\", 'f', \"ifx\"),             new SCE(0xf8f0752e, \"sceFontPixelToPointV\", 'f', \"ifx\"),             new SCE(0x472694cd, \"sceFontPointToPixelH\", 'f', \"ifx\"),             new SCE(0x3c4b7e82, \"sceFontPointToPixelV\", 'f', \"ifx\"),             new SCE(0xee232411, \"sceFontSetAltCharacterCode\", 'i', \"xx\"),             new SCE(0x568be516, \"sceFontGetShadowGlyphImage\", 'i', \"xxx\"),             new SCE(0x5dcf6858, \"sceFontGetShadowGlyphImage_Clip\", 'i', \"xxxiiii\"),             new SCE(0x02d7f94b, \"sceFontFlush\", 'i', \"x\")         ),</p> <p>Module(\"sceLibFont\",             new SCE(0x67f17ed7, \"sceFontNewLib\", 'x', \"xx\"),             new SCE(0x574b6fbc, \"sceFontDoneLib\", 'i', \"x\"),             new SCE(0x48293280, \"sceFontSetResolution\", 'i', \"xff\"),             new SCE(0x27f6e642, \"sceFontGetNumFontList\", 'i', \"xx\"),             new SCE(0xbc75d85b, \"sceFontGetFontList\", 'i', \"xxi\"),             new SCE(0x099ef33c, \"sceFontFindOptimumFont\", 'i', \"xxx\"),             new SCE(0x681e61a7, \"sceFontFindFont\", 'i', \"xxx\"),             new SCE(0x2f67356a, \"sceFontCalcMemorySize\", 'i', \"\"),             new SCE(0x5333322d, \"sceFontGetFontInfoByIndexNumber\", 'i', \"xxx\"),             new SCE(0xa834319d, \"sceFontOpen\", 'x', \"xxxx\"),             new SCE(0x57fcb733, \"sceFontOpenUserFile\", 'x', \"xsxx\"),             new SCE(0xbb8e7fe6, \"sceFontOpenUserMemory\", 'x', \"xxxx\"),             new SCE(0x3aea8cb6, \"sceFontClose\", 'i', \"x\"),             new SCE(0x0da7535e, \"sceFontGetFontInfo\", 'i', \"xx\"),             new SCE(0xdcc80c2f, \"sceFontGetCharInfo\", 'i', \"xxx\"),             new SCE(0xaa3de7b5, \"sceFontGetShadowInfo\", 'i', \"xxx\"),             new SCE(0x5c3e4a9e, \"sceFontGetCharImageRect\", 'i', \"xxx\"),             new SCE(0x48b06520, \"sceFontGetShadowImageRect\", 'i', \"xxx\"),             new SCE(0x980f4895, \"sceFontGetCharGlyphImage\", 'i', \"xxx\"),             new SCE(0xca1e6945, \"sceFontGetCharGlyphImage_Clip\", 'i', \"xxxiiii\"),             new SCE(0x74b21701, \"sceFontPixelToPointH\", 'f', \"ifx\"),             new SCE(0xf8f0752e, \"sceFontPixelToPointV\", 'f', \"ifx\"),             new SCE(0x472694cd, \"sceFontPointToPixelH\", 'f', \"ifx\"),             new SCE(0x3c4b7e82, \"sceFontPointToPixelV\", 'f', \"ifx\"),             new SCE(0xee232411, \"sceFontSetAltCharacterCode\", 'i', \"xx\"),             new SCE(0x568be516, \"sceFontGetShadowGlyphImage\", 'i', \"xxx\"),             new SCE(0x5dcf6858, \"sceFontGetShadowGlyphImage_Clip\", 'i', \"xxxiiii\"),             new SCE(0x02d7f94b, \"sceFontFlush\", 'i', \"x\") )</p> <p>font_fuck library \u8fd8\u4e0d\u6b62\u4e00\u79cd\uff0c\u6709\u8bb8\u591a\u53d8\u79cd\uff0c\u4f46\u662f\u5927\u4f53\u4e0a\u5e94\u8be5\u662f\u4e00\u81f4\u7684\u3002</p> <p>29\u4e2a sceFontisElement?</p> <p>23:25:362 user_main    D[SCEFONT]: HLE\\sceFont.cpp:1333 sceFontGetCharInfo(08c4c05c, 27700, 09ff72f0) 23:25:362 user_main    D[SCEFONT]: HLE\\sceFont.cpp:1434 sceFontGetCharGlyphImage(8c4c05c, 6c34, 9ff72d0) 23:25:362 user_main    D[SCEFONT]: HLE\\sceFont.cpp:1333 sceFontGetCharInfo(08c4c05c, 28304, 09ff72f0) 23:25:362 user_main    D[SCEFONT]: HLE\\sceFont.cpp:1434 sceFontGetCharGlyphImage(8c4c05c, 6e90, 9ff72d0) 23:25:362 user_main    D[SCEFONT]: HLE\\sceFont.cpp:1333 sceFontGetCharInfo(08c4c05c, 21551, 09ff72f0) 23:25:362 user_main    D[SCEFONT]: HLE\\sceFont.cpp:1434 sceFontGetCharGlyphImage(8c4c05c, 542f, 9ff72d0) 23:25:362 user_main    D[SCEFONT]: HLE\\sceFont.cpp:1333 sceFontGetCharInfo(08c4c05c, 21160, 09ff72f0) 23:25:362 user_main    D[SCEFONT]: HLE\\sceFont.cpp:1434 sceFontGetCharGlyphImage(8c4c05c, 52a8, 9ff72d0)</p> <p>0x9480</p> <pre><code>/// param_1 SHIFT_JIS Code\nundefined2 FUN_08884680(uint param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  uint uVar3;\n\n  param_1 = param_1 &amp; 0xffff;\n  // Find in 0~0x2d\n  uVar1 = 0;\n  uVar2 = 0x2d;\n  if (DAT_08a33310 &lt;= param_1) {\n    // Find in 0x2e &lt;= index &lt; 0x5a\n    uVar1 = 0x2e;\n    uVar2 = 0x5a;\n    if (param_1 &lt;= DAT_08a33310) {\n      // At 0x2d\n      uVar3 = 0x2d;\n      goto LAB_088846d0;\n    }\n  }\n\n  // Get the index in the 2nd Table\n  uVar3 = FUN_08884724(param_1,uVar1,uVar2);\n  uVar3 = uVar3 &amp; 0xffff;\nLAB_088846d0:\n  return *(undefined2 *)\n          (&amp;DAT_08a2fb60 +\n          //(\n          //(param_1 - *(ushort *)(&amp;DAT_08a3325c + uVar3 * 4)) \n          //+\n          // Table 2 at 0x8a3325e\n          (uint)*(ushort *)(&amp;DAT_08a3325e + uVar3 * 4)\n          )\n           * 2);\n}\n\n/// param_1: SHIFT_JIS Code\nuint FUN_08884724(ushort param_1,uint param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n\n  param_3 = param_3 &amp; 0xffff;\n  param_2 = param_2 &amp; 0xffff;\n  // mid = (high+lo)/2;\n  uVar3 = param_3 + param_2 &gt;&gt; 1;\n  // high = mid - 1;\n  uVar1 = param_3 - 1 &amp; 0xffff;\n  if ((param_3 != param_2) &amp;&amp;\n     ((uVar2 = uVar3, param_1 &lt; *(ushort *)(&amp;DAT_08a3325c + uVar3 * 4) ||\n      (param_2 = uVar3 + 1 &amp; 0xffff, uVar2 = param_3, uVar1 = uVar3,\n      *(ushort *)(&amp;DAT_08a3325c + uVar3 * 4) &lt; param_1)))) {\n    uVar1 = FUN_08884724(param_1,param_2,uVar2);\n  }\n  // param1 &gt;= *(ushort *)(&amp;DAT_08a3325c + uVar3 * 4)\n  return uVar1;\n}\n</code></pre> <p>08a3325c -&gt; 0~0x5a</p> <p>20 00 00 00 a1 00 5f 00 40 81 9e 00 80 81 dd 00 b8 81 0a 01 c8 81 12 01 da 81 19 01 f0 81 28 01 fc 81 30 01 4f 82 31 01 60 82 3b 01 81 82 55 01 9f 82 6f 01 40 83 c2 01 80 83 01 02 9f 83 18 02 bf 83 30 02 40 84 48 02 70 84 69 02 80 84 78 02 9f 84 8a 02 9f 88 aa 02 40 89 08 03 80 89 47 03 40 8a c4 03 80 8a 03 04 40 8b 80 04 80 8b bf 04 40 8c 3c 05 80 8c 7b 05 40 8d f8 05 80 8d 37 06 40 8e b4 06 80 8e f3 06 40 8f 70 07 80 8f af 07 40 90 2c 08 80 90 6b 08 40 91 e8 08 80 91 27 09 40 92 a4 09 80 92 e3 09 40 93 60 0a 80 93 9f 0a 40 94 1c 0b 80 94 5b 0b 40 95 d8 0b 80 95 17 0c 40 96 94 0c 80 96 d3 0c 40 97 50 0d 80 97 8f 0d 40 98 0c 0e 9f 98 3f 0e 40 99 9d 0e 80 99 dc 0e 40 9a 59 0f 80 9a 98 0f 40 9b 15 10 80 9b 54 10 40 9c d1 10 80 9c 10 11 40 9d 8d 11 80 9d cc 11 40 9e 49 12 80 9e 88 12 40 9f 05 13 80 9f 44 13 40 e0 c1 13 80 e0 00 14 40 e1 7d 14 80 e1 bc 14 40 e2 39 15 80 e2 78 15 40 e3 f5 15 80 e3 34 16 40 e4 b1 16 80 e4 f0 16 40 e5 6d 17 80 e5 ac 17 40 e6 29 18 80 e6 68 18 40 e7 e5 18 80 e7 24 19 40 e8 a1 19 80 e8 e0 19 40 e9 5d 1a 80 e9 9c 1a 40 ea 19 1b 80 ea 58 1b</p> <p>00000020 005f00a1 009e8140 00dd8180 010a81b8 011281c8 011981da 012881f0 013081fc 0131824f 013b8260 01558281 016f829f 01c28340 02018380 0218839f 023083bf 02488440 02698470 02788480 028a849f 02aa889f 03088940 03478980 03c48a40 04038a80 04808b40 04bf8b80 053c8c40 057b8c80 05f88d40 06378d80 06b48e40 06f38e80 07708f40 07af8f80 082c9040 086b9080 08e89140 09279180 09a49240 09e39280 0a609340 0a9f9380 0b1c9440 0b5b9480 0bd89540 0c179580 0c949640 0cd39680 0d509740 0d8f9780 0e0c9840 0e3f989f 0e9d9940 0edc9980 0f599a40 0f989a80 10159b40 10549b80 10d19c40 11109c80 118d9d40 11cc9d80 12499e40 12889e80 13059f40 13449f80 13c1e040 1400e080 147de140 14bce180 1539e240 1578e280 15f5e340 1634e380 16b1e440 16f0e480 176de540 17ace580 1829e640 1868e680 18e5e740 1924e780 19a1e840 19e0e880 1a5de940 1a9ce980 1b19ea40 1b58ea80</p> <p>\u7b2c\u4e8c\u4f4d\uff0c 40-7E 80-FC</p> <p>\u4ec5\u4ec5\u6709\u7f16\u7801\u7684\u533a\u57df\u88ab\u5217\u5165\u3002 ea80-eaa4 \u6700\u672b\u4e00\u4f4d\u504f\u79fb\u91cf 1b58 + 25 = 1B7d = 7037</p> <p>\u6070\u597d\u4e3aSHIFT-JIS\u7f16\u7801\u603b\u6570 \uff087070\uff1f\uff09\u6709\u5f85\u67e5\u8be2\uff0c\u6216\u8bb8\u6709\u4e9b\u8bb8\u5220\u8282\u3002</p> <p>GB2312\u67096763\u4e2a\u6c49\u5b57+682\u4e2a\u5168\u89d2\u5b57\u7b26\u3002</p> <p>\u5b57\u4f53\u66ff\u6362\uff1a\u5c06\u5bf9SceFontOpen\u7684\u8c03\u7528\u53d8\u4e3aSceFontOpenUserFile\u7684\u8c03\u7528\u3002 \u4e0d\u77e5\u9053Fontfuck Library\u7684\u9002\u7528\u7a0b\u5ea6\u5982\u4f55\u3002</p> <p>\u5904\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0cPPSSPP\u65e0\u6cd5\u6b63\u786e\u89e3\u6790PGF\u6587\u4ef6\uff1f\u53ef\u80fd\u662f\u5176SceFont\u5b9e\u73b0\u6709\u4e00\u4e9b\u95ee\u9898\uff1f Jpcsp\u5bf9\u4e8e\u73b0\u6210\u7684\u5b57\u4f53\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u3002</p> <p>CLANNED\u7528\u7684\u662f\u5fae\u8f6f\u96c5\u9ed1\uff0c\u5bf9\u5b57\u5e93\u8fdb\u884c\u4e86\u4fee\u6539\u3002 Jpcsp\u4f7f\u7528\u7684\u662fResource Han Rounded CN\uff0c\u53ef\u4ee5\u8bf4\u662f\u5bf9\u4e8e\u4e2d\u6587\u7528\u6237\u5341\u5206\u53cb\u597d\u4e86\u3002 MGSPW\u7528\u7684\u662f\u5fae\u8f6f\u96c5\u9ed1Bold\uff0c\u6ca1\u6709\u5bf9\u5b57\u5e93\u8fdb\u884c\u4fee\u6539\u3002Font='Microsoft YaHei UI' Type='Bold'</p> <p>04bea76e94d934b878c995d594ce433b4f3be225</p>"},{"location":"locolization/iso/","title":"UMD\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u5728\u8bfb\u53d6UMD\u5f97\u5230\u7684\u7684\u955c\u50cf\u6587\u4ef6\u4e2d\uff0c\u6587\u4ef6\u76ee\u5f55\u4ee5\u5982\u4e0b\u683c\u5f0f\u7ec4\u7ec7\uff1a</p> <ul> <li>SYSDIR<ul> <li>BOOT.BIN\uff1a\u901a\u5e38\u4e3a\u7a7a</li> <li>EBOOT.BIN\uff1a\u52a0\u5bc6\u7684\u6e38\u620f\u4e3b\u7a0b\u5e8f\u6587\u4ef6</li> </ul> </li> <li>USRDIR<ul> <li>\u50a8\u5b58\u5404\u7c7b\u8d44\u6e90\u6587\u4ef6\uff0c\u5305\u62ec\u6a21\u5757\uff08Module\uff09\u7b49</li> </ul> </li> </ul>"},{"location":"locolization/patch_exec/","title":"\u4fee\u6539\u4e8c\u8fdb\u5236\u6587\u4ef6","text":"<p>\u5728\u6c49\u5316\u6e38\u620f\u65f6\uff0c\u5f80\u5f80\u6709\u90e8\u5206\u7a0b\u5e8f\u903b\u8f91\u9700\u8981\u6539\u52a8\u3002</p>"},{"location":"locolization/patch_exec/#_2","title":"\u4fee\u6539\u6c47\u7f16","text":"<p>\u9996\u5148\u9605\u8bfbMIPS\u6c47\u7f16\u76f8\u5173\u7ae0\u8282\u3002</p>"},{"location":"locolization/patch_exec/#_3","title":"\u52ab\u6301\u5bf9\u5916\u90e8\u6a21\u5757\u7684\u8c03\u7528","text":"<ul> <li>\u52ab\u6301\u5bf9<code>libfont.prx</code>\u4e2d\u51fd\u6570\u7684\u8c03\u7528\uff0c\u5b9e\u73b0\u5b57\u4f53\u66ff\u6362\u7b49\u64cd\u4f5c\u3002</li> <li>\u52ab\u6301\u5bf9<code>sceUtils</code>\u7684\u8c03\u7528\uff0c\u4fee\u6539\u5b58\u6863\u7b49\u754c\u9762\u7684\u8bed\u8a00\u3002</li> </ul> <p>\u65b9\u6cd5\uff1a 1. \u8fd0\u884c\u65f6\u52a8\u6001\u4fee\u6539\u5bfc\u5165\u8868<code>jr ra</code>\u7684\u51fd\u6570\u5730\u5740\uff0c\u4f7f\u4e4b\u6307\u5411\u4fee\u6539\u540e\u51fd\u6570\u7684\u5730\u5740 2. \u5236\u4f5c\u65b0\u6a21\u5757\uff0c\u4eff\u9020\u539f\u5916\u90e8\u6a21\u5757\u7684\u5bfc\u51fa\u8868(Export Table)\u4ee5\u53ca\u5e93\u540d(Library Name) 3. \u8fd0\u884c\u65f6\u52a8\u6001\u4fee\u6539\u6a21\u5757\u5bfc\u51fa\u8868\uff0c\u4f7f\u5f97\u5bfc\u51fa\u7684\u51fd\u6570\u6307\u5411\u4fee\u6539\u540e\u7684\u51fd\u6570\u5730\u5740 4. \u8fd0\u884c\u65f6\u52a8\u6001\u4fee\u6539<code>jal</code>\u5904\u7684\u8c03\u7528\uff0c\u5c06\u8be5\u6307\u4ee4\u7684\u53c2\u6570\u6539\u4e3a\u4fee\u6539\u540e\u7684\u51fd\u6570\u5730\u5740</p>"},{"location":"locolization/patch_exec/#_4","title":"\u52ab\u6301\u5bf9\u5185\u90e8\u51fd\u6570\u7684\u8c03\u7528","text":"<ol> <li>\u4fee\u6539\u51fd\u6570\u8c03\u7528\u5904\u7684<code>jal</code>\u6307\u4ee4\uff0c\u8df3\u8f6c\u5230\u4fee\u6539\u540e\u7684\u51fd\u6570</li> <li>\u4fee\u6539\u5185\u90e8\u51fd\u6570\u5f00\u5934\u7684\u6307\u4ee4\u4e3a<code>j</code>\u4e0e<code>nop</code>\uff0c\u8df3\u8f6c\u5230\u4fee\u6539\u540e\u7684\u51fd\u6570</li> </ol>"},{"location":"locolization/patch_exec/#jjal","title":"<code>j</code>\u4e0e<code>jal</code>\u4e8c\u8fdb\u5236\u6307\u4ee4\u7684\u751f\u6210","text":"<p>\u4ece<code>Module Tutorial</code>\u4e2d\u6458\u6284\u7684\u5b8f</p> <pre><code>\n</code></pre>"},{"location":"locolization/patch_exec/#_5","title":"\u4fee\u6539\u65b9\u5f0f","text":"<p>\u9700\u8981\u6ce8\u610f\u6e38\u620f\u4e3b\u4f53\u6a21\u5757\u52a0\u8f7d\u7684\u57fa\u5730\u5740\uff08\u901a\u5e38\u4e3a0x08804000\uff09\uff0c\u6700\u597d\u901a\u8fc7\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\uff0c\u4ee5\u4fbf\u4f9d\u636e\u9700\u4fee\u6539\u5730\u5740\u7684\u504f\u79fb\u91cf\u91cd\u65b0\u8ba1\u7b97\u5730\u5740\u3002</p>"},{"location":"locolization/patch_exec/#_6","title":"\u57fa\u672c\u6d41\u7a0b","text":"<p>\u9996\u5148\uff0c\u4f7f\u7528<code>Ghidra</code>\u6253\u5f00\u89e3\u5bc6\u540e\u7684\u6e38\u620f\u4e3b\u6a21\u5757\uff08<code>EBOOT.BIN</code>\uff09\uff0c\u6ce8\u610f\u8bbe\u7f6e\u57fa\u5730\u5740\u4e3a(0x08804000)\uff0c\u5f97\u5230\u60f3\u4fee\u6539\u5185\u5bb9\u6240\u5904\u7684\u5730\u5740<code>p</code>\uff1b \u5176\u6b21\uff0c\u4f7f\u7528<code>sceKernel...</code>\u67e5\u8be2\u4e3b\u6a21\u5757\u7684\u57fa\u5730\u5740<code>new_base</code> \u5219\u6709<code>new_p = new_base + p - 0x8804000</code> </p>"},{"location":"locolization/translate/","title":"Language Patch","text":"<p>\u8fd9\u7bc7Digivice Ver. Portable\u9006\u5411\u5de5\u7a0b\u6559\u7a0b\u5199\u7684\u592a\u597d\u4e86\uff0c\u6d89\u53ca\u4ece\u9006\u5411\u5230\u53d1\u5e03\u7684\u5168\u8fc7\u7a0b\u4e0e\u5de5\u5177\u94fe\uff0c\u6211\u89c9\u5f97\u6ca1\u5fc5\u8981\u518d\u591a\u8bf4\u4ec0\u4e48\u4e86\u3002</p> <p>digipet_PSP/RE_Guide.md </p>"},{"location":"locolization/translate/#_1","title":"\u6c49\u5316\u76f8\u5173","text":""},{"location":"locolization/translate/#_2","title":"\u4f20\u7edf\u6c49\u5316\u65b9\u6cd5","text":"<p>Hint</p> <ul> <li> <p>\u7801\u8868\uff1a\u5373\u7f16\u7801\u5b57\u8282\u540c\u5b57\u7b26\u7684\u5bf9\u5e94\u8868\u3002</p> </li> <li> <p>\u5b57\u5e93\uff1a\u5373\u50a8\u5b58\u5b57\u4f53\u5b57\u5f62\u56fe\u50cf\u7684\u6587\u4ef6\u3002</p> </li> </ul> <p>\u4ece\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u68c0\u6d4b\u6f5c\u5728\u7684\u5b57\u7b26\u4e32\u5e76\u751f\u6210&lt;\u504f\u79fb\u91cf,\u5b57\u7b26\u6570,\u5b57\u7b26\u5185\u5bb9&gt;\u7684\u4e00\u5f20\u8868\u3002\u901a\u8fc7\u8fd9\u5f20\u8868\u53ef\u4ee5\u65b9\u4fbf\u5730\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u66ff\u6362\u548c\u4fee\u6539\u3002</p> <p>\u4e3a\u4e86\u68c0\u6d4b\u6f5c\u5728\u7684\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u7f16\u7801\u5b57\u8282\u4e0e\u5b57\u7b26\u7684\u5bf9\u5e94\u8868\uff0c\u5373\u201c\u7801\u8868\u201d</p> <p>\u7531\u4e8e\u6e38\u620f\u901a\u5e38\u91c7\u7528SHIFT-JIS\u7f16\u7801\uff0c\u800c\u8be5\u7f16\u7801\u4e2d\u6c49\u5b57\u5b57\u7b26\u6570\u91cf\u6781\u4e3a\u6709\u9650\u3002</p> <p>\u56e0\u800c\u4eba\u4eec\u4f1a\u4fee\u6539\u5b57\u4f53\u6587\u4ef6\uff0c\u5373\u201c\u5b57\u5e93\u201d\uff0c\u5c06\u539f\u6765\u7684SHIFT-JIS\u5b57\u8282\u5e8f\u5217\u5bf9\u5e94\u7684\u65e5\u6587\u5b57\u7b26\u56fe\u50cf\u4fee\u6539\u4e3a\u5176\u4ed6\u7684\u6c49\u5b57\u5b57\u7b26\u56fe\u50cf\u3002</p> <p>\u6b64\u65f6\u5b57\u8282\u5e8f\u5217\u540c\u5b57\u7b26\u7684\u5bf9\u5e94\u5173\u7cfb\u5df2\u7136\u53d1\u751f\u6539\u53d8\u3002</p> <p>\u56e0\u800c\u53c8\u8981\u91cd\u65b0\u5199\u4e00\u5f20\u5b57\u7b26\u548c\u7f16\u7801\u5b57\u8282\u7684\u5bf9\u5e94\u8868\uff0c\u5c06\u7ffb\u8bd1\u540e\u7684\u6587\u672c\u6620\u5c04\u5230\u65b0\u7684\u5b57\u8282\u5e8f\u5217\u4e0a\u3002</p> <p>\u6b64\u65f6\u518d\u5bf9\u6e90\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u5e8f\u5217\u8fdb\u884c\u66ff\u6362\u4fee\u6539\uff0c\u4fbf\u5b8c\u6210\u4e86\u6587\u672c\u7684\u6c49\u5316\u8fc7\u7a0b\u3002</p> <p>\u53c2\u8003\u8d44\u6599</p> <p>\u7801\u8868\u76f8\u5173</p> <ul> <li>\u3010GBA\u3001NDS\u3001PSP\u3011\u6c49\u5316\u57fa\u7840\u6559\u7a0b\u2014\u2014\u6587\u5b57\u7bc7\uff08\u4e09\uff09by PGCG</li> <li>NDS\u6c49\u5316\u5c0f\u767d\u6559\u7a0b \u2014\u2014 fengarea\uff08A9VG\u6c49\u5316\u7ec4\uff09 \u7b2c\u4e09\u8bdd\uff1a\u5b57\u5e93\u7801\u8868\u7bc7\u2022\u521d\u6b65</li> <li>\u6e38\u620f\u6c49\u5316\u6559\u5b66\u8d34-\u6587\u672c\u7684\u5bfc\u5165\u5bfc\u51fa\u57fa\u7840\u7bc7</li> </ul>"},{"location":"locolization/translate/#_3","title":"\u7406\u60f3\u60c5\u51b5","text":"<p>\u80fd\u591f\u4ece\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u8d44\u6e90\u6587\u4ef6\u4e2d\u627e\u5230\u5b57\u7b26\u4e32\u548c\u5b57\u5e93\uff0c\u76f4\u63a5\u8fdb\u884c\u4fee\u6539\u3002 \u57282010\u5e74\u5de6\u53f3\uff0c<code>WQSG</code>\u548c<code>CrystalScript</code>\u7528\u4e8e\u5904\u7406\u7801\u8868\u3001\u68c0\u6d4b\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u6f5c\u5728\u7684\u5b57\u7b26\u4e32\uff0c<code>CrystalTile</code>\u7528\u4e8e\u5904\u7406\u4e8c\u7ea7\u5236\u6587\u4ef6\u4e2d\u7684\u56fe\u7247\u548c\u5b57\u5e93\u3002</p> <p>\u53c2\u8003\u8d44\u6599 CrystalTile</p>"},{"location":"locolization/translate/#_4","title":"\u65e0\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u6216\u5b57\u5e93","text":"<p>\u7531\u4e8e\u52a0\u5bc6\u7b49\u95ee\u9898\uff0c\u6c49\u5316\u5de5\u4f5c\u8005\u6709\u65f6\u65e0\u6cd5\u4ece\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u5bfb\u627e\u5230\u5b57\u7b26\u4e32\u548c\u5b57\u5e93\u3002\u6b64\u65f6\u5f80\u5f80\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"locolization/translate/#_5","title":"\u8fd1\u4f3c\u6c49\u5316","text":"<p>\u5728\u65e0\u6cd5\u83b7\u5f97\u5b57\u5e93\u65f6\uff0c\u4f7f\u7528SHIFT-JIS\u4e2d\u5df2\u6709\u7684\u540c\u6c49\u5b57\u76f8\u8fd1\u7684\u65e5\u6587\u5b57\u7b26\u4f5c\u4e3a\u5bf9\u5e94\u6c49\u5b57\u7684\u66ff\u4ee3\u3002</p> <p>\u8fd1\u4f3c\u5b57\u7b26\u8868\uff1ahttps://github.com/ultrapre/GBK_SJIS/blob/master/gbksjisTBL/README.md</p>"},{"location":"locolization/translate/#_6","title":"\u5185\u5b58\u6c49\u5316","text":"<p>\u65e0\u6cd5\u5728\u6e90\u6587\u4ef6\u4e2d\u83b7\u5f97\u5b57\u7b26\u4e32\u6216\u5b57\u5e93\uff0c\u4f46\u7531\u4e8e\u6e38\u620f\u8fd0\u884c\u65f6\u672a\u52a0\u5bc6\u7684\u5b57\u7b26\u4e32\u548c\u5b57\u5e93\u4f1a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u56e0\u800c\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u5728\u6e38\u620f\u8fd0\u884c\u65f6\u5bf9\u5185\u5b58\u76f8\u5e94\u533a\u57df\u8fdb\u884c\u66ff\u6362\u4fee\u6539\u3002</p> <p>CG\u6c49\u5316\u7ec4-\u5e7b\u60f3\u4f20\u8bf4\u6c49\u5316\u6d4b\u8bd5\u63d2\u4ef6</p>"},{"location":"locolization/translate/#_7","title":"\u5177\u4f53\u5b9e\u73b0","text":"<p>\u90fd\u662f2010\u5e74\u524d\u540e\uff0c\u4e0a\u4e2a\u65f6\u4ee3\u7684\u8d44\u6599\u4e86\u3002\u73b0\u5728\u7684\u4eba\u5e94\u8be5\u7528\u66f4\u73b0\u4ee3\u7684\u8bed\u8a00\u6765\u8868\u8ff0\u3002\u4f7f\u7528\u73b0\u4ee3\u7684\u5de5\u5177\u94fe\uff01</p>"},{"location":"locolization/translate/#_8","title":"\u4ec5\u4ec5\u5bf9\u6587\u4ef6\u4fee\u6539","text":"<p>\u6309\u7167\u4f20\u7edf\u7684\u6c49\u5316\u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u5bf9\u8d44\u6e90\u6587\u4ef6\u548c\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u4ee3\u8868\u5b57\u7b26\u4e32\u7684<code>\u5b57\u8282\u5e8f\u5217</code>\u548c<code>\u5b57\u5e93</code>\u8fdb\u884c\u4fee\u6539\u6c49\u5316\u5de5\u4f5c\u4fbf\u5b8c\u6210\u4e86\u3002\u8fd9\u4e00\u6b65\u7684\u96be\u70b9\u5c31\u5728\u6587\u4ef6\u683c\u5f0f\u7684\u89e3\u5bc6\u4e0a\u3002</p> <p>\u5177\u4f53\u6765\u8bb2\uff0c\u5bf9\u4e8e<code>PSP</code>\u6c49\u5316\uff0c\u53ef\u4ee5\u901a\u8fc7<code>PPSSPP</code>\u7684\u8c03\u8bd5\u529f\u80fd\u9010\u6b65\u5206\u6790\u6587\u4ef6\u683c\u5f0f\u3002\u53ef\u4ee5\u53c2\u8003\u300a\u8be1\u8ba1\u5bf9\u903b\u8f91\u300b\u6c49\u5316\u7814\u7a76</p>"},{"location":"locolization/translate/#_9","title":"\u4fee\u6539\u53ef\u6267\u884c\u6587\u4ef6/\u6dfb\u52a0\u5916\u90e8\u63d2\u4ef6","text":"<p>\u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u4f7f\u7528\u5185\u5b58\u6c49\u5316\u6cd5\u6216\u8005\u8c03\u7528\u7684\u662f\u7cfb\u7edf\u5b57\u5e93\u7684\u6e38\u620f\uff0c\u5219\u9700\u8981\u8fdb\u884c\u7a0b\u5e8f\u903b\u8f91\u7684\u4fee\u6539\u6216\u8005\u7f16\u5199\u65b0\u7684\u63d2\u4ef6\u3002\u4e5f\u5c31\u662f\u8981\u8fdb\u884c\u53cd\u6c47\u7f16\u3001\u6ce8\u5165\u3001\u52ab\u6301\u7b49\u64cd\u4f5c\u3002\u8fd9\u66f4\u63a5\u8fd1\u4e8e\u672c\u7f51\u7ad9\u7684\u4e3b\u9898\u3002</p> <p>https://uofw.github.io/upspd/docs/software/ModuleTutorialv1.pdf</p> <p>patch prx on runtime\uff1f</p> <p>z_un_088679c0 fcn.000639c0 a1: 0x8CB4 \u5185\u90e8\u8c03\u7528 ... z_un_088691b0 v0:0x539F \u6700\u7ec8\u8fd4\u56de</p> <p>8CB4-&gt; 539F</p> <p>08868dac\u8c03\u7528sceFontGetCharInfo\u548csceFontGetCharGlyph</p>"},{"location":"locolization/translate/#python","title":"Python\u5904\u7406\u5b57\u7b26\u4e32\u3001\u5b57\u8282\u6d41","text":"<p>\u5b57\u7b26\u4e32\u8f6c\u5b57\u8282\u6d41 <pre><code>binary_stream = v.encode('utf-16-le')\n</code></pre></p> <p>\u5b57\u8282\u6d41\u8f6c16\u8fdb\u5236\u5b57\u7b26\u4e32 <pre><code>import binascii\nbinascii.hexlify(binary_stream).decode('utf-8')\n</code></pre></p> <p>16\u8fdb\u5236\u5b57\u7b26\u4e32\u8f6c\u5b57\u8282\u5e8f\u5217 <pre><code>binascii.unhexlify(hex_str)\n</code></pre></p> <p>\u5b57\u7b26\u4e32\u6570\u7ec4\u62fc\u63a5 <pre><code>''.join(s for s in array)\n</code></pre></p> <p>\u7f6e\u6362\u5b57\u5178k,v <pre><code>reverse_data = {v:k for k, v in data.items()}\n</code></pre></p> <pre><code># Encode the string\nencoded_s = [reverse_data[char] for char in str if char in reverse_data]\n</code></pre> <p>dump to json <pre><code>with open('output2.json', 'w', encoding='utf-8') as f:\n    json.dump(byte_char_dict, f, ensure_ascii=False, indent=4)\n</code></pre></p> <pre><code># with open(output_file_path, \"wb\") as output_file:\n#     for k, v in data.items():\n#         b = v.encode('utf-16-le')\n#         output_file.write(b)\n</code></pre>"},{"location":"plugin/assembly/","title":"MIPS\u6c47\u7f16","text":"<p>PSP\u7684CPU\u91c7\u7528MIPS\u67b6\u6784\uff0c32\u4f4d\u3002ISA\u4e0e\u89c4\u8303\u7565\u6709\u53d8\u5316</p> <p>\u63a8\u8350\u9605\u8bfb</p> <ul> <li>\u300aCS:APP\u300b Chapter 3</li> <li>uOFW Wiki\uff1a MIPS, Logical Blocks, Functions \u4e09\u8282</li> <li>Module Tutorial</li> </ul>"},{"location":"plugin/assembly/#psp-gcc","title":"psp-gcc","text":"<p><code>psp-gcc</code>\u662f\u4e3a\u751f\u6210PSP\u53ef\u6267\u884c\u6587\u4ef6\u800c\u4fee\u6539\u8fc7\u7684<code>gcc</code>\uff0c\u4f4d\u4e8e<code>pspdev/bin</code>\u6587\u4ef6\u5939\u4e0b</p> <p>\u4e0d\u540c\u67b6\u6784\u3001\u4e0d\u540c\u7cfb\u7edf\u4e0a\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u4e0d\u540c</p> <p>\u4f7f\u7528<code>psp-gcc -v</code>\u53ef\u4ee5\u663e\u793a\u8be6\u7ec6\u4fe1\u606f</p> <pre><code>psp@pspserver:~$ psp-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=psp-gcc\nTarget: psp\ngcc version 11.2.0 (GCC)\n</code></pre>"},{"location":"plugin/assembly/#decompiler","title":"Decompiler","text":"<p>\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528<code>IDA Pro</code> / <code>Ghidra</code> / <code>prxtool</code> \u5bf9\u6587\u4ef6\u8fdb\u884c\u53cd\u6c47\u7f16\uff0c\u5e76\u5bf9\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\u8fdb\u884c\u7814\u7a76\uff0c \u6216\u8005\u53ef\u4ee5\u4f7f\u7528<code>PPSSPP</code>\u7684\u8c03\u8bd5\u529f\u80fd\u8fdb\u884c\u65ad\u70b9\u67e5\u770b\u3002</p>"},{"location":"plugin/assembly/#example","title":"Example","text":"<p><pre><code>void mult2(int* a,int *b, int *c){\n        *c = *a**b;\n}\n</code></pre> TODO\uff1a\u5e94\u8be5\u4f7f\u7528a0,a1\u7b49\u8868\u793a\u5bc4\u5b58\u5668\u3002 <pre><code>&lt;!-- a in $4 , b in $5, c in $6 --&gt;\nmult2:\n        .frame  $sp,0,$31               # vars= 0, regs= 0/0, args= 0, gp= 0\n        .mask   0x00000000,0\n        .fmask  0x00000000,0\n        .set    noreorder\n        .set    nomacro\n        lw      $3,0($4)\n        lw      $2,0($5)\n        mult    $3,$2\n        mflo    $2\n        sw      $2,0($6)\n        jr      $31\n        nop\n</code></pre></p> <p>SW $source register's address, offset($destination register's address) The SW instruction stores data to a specified address on the data memory with a possible offset, from a source register.</p> <p>LW $destination register's address, offset($source register's address).</p> <p>MIPS Multiply Unit The multiply unit of MIPS contains two 32-bit registers called hi and lo. These are not general purpose registers. When two 32-bit operands are multiplied, hi and lo hold the 64 bits of the result. Bits 32 through 63 are in hi and bits 0 through 31 are in lo.</p> <p>High and Low Registers Here are the instructions that do this. The operands are contained in general-purpose registers.</p> <p>mult    s,t        # hilo &lt;\u2014 $s * $t   (two's comp operands) multu   s,t        # hilo &lt;\u2014 $s * $t   (unsigned operands)</p>"},{"location":"plugin/memspace/","title":"Memory Address Space \u5185\u5b58\u5730\u5740\u7a7a\u95f4","text":"<p>PSP 1000 \u7684\u7269\u7406\u5185\u5b58\u4e3a 32MB. PSP 2000/3000 \u7684\u7269\u7406\u5185\u5b58\u4e3a 64MB\u3002</p> <p>32MB \u5373 2^25B\uff0c\u7269\u7406\u5185\u5b58\u5730\u5740\u8303\u56f4\u4e3a 0x00000000~0x02000000.</p>"},{"location":"plugin/memspace/#_1","title":"\u865a\u62df\u5730\u5740\u7a7a\u95f4","text":"\u865a\u62df\u5730\u5740 \u7528\u9014 0x00000000~0x40000000(2^30B=1024MB) \u7528\u6237\u6001\u53ef\u8bbf\u95ee\u5185\u5b58\uff08\u7f13\u5b58\uff09 0x40000000~0x80000000 \u7528\u6237\u6001\u53ef\u8bbf\u95ee\u5185\u5b58\uff08\u672a\u7f13\u5b58\uff09 0x80000000~0xA0000000(2^29B=512MB) \u5185\u6838\u6001\u53ef\u8bbf\u95ee\u5185\u5b58\uff08\u7f13\u5b58\uff09 0xA0000000~0xC0000000 \u5185\u6838\u6001\u53ef\u8bbf\u95ee\u5185\u5b58\uff08\u672a\u7f13\u5b58\uff09"},{"location":"plugin/memspace/#_2","title":"\u865a\u62df\u5185\u5b58\u5982\u4f55\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\uff1f","text":""},{"location":"plugin/memspace/#_3","title":"\u901a\u8fc7\u4e0b\u9762\u7684\u5730\u5740\u8bbf\u95ee\u7269\u7406\u5185\u5b58\u65f6\u4f1a\u7ecf\u8fc7\u7f13\u5b58","text":"VM Start VM End Size Segement PM Start PM End 0x88000000 0x887fffff 8MB \u5185\u6838\u6001\uff08\u7f13\u5b58\uff09 0x00000000 0x007fffff 0x08800000 0x09ffffff 24MB \u7528\u6237\u6001\uff08\u7f13\u5b58\uff09 0x00800000 0x01ffffff 0x0a00000 0x0bffffff 32MB \u7528\u6237\u6001\uff08\u7f13\u5b58\uff09(PSP2000/PSP3000) 0x02000000 0x04000000"},{"location":"plugin/memspace/#_4","title":"\u901a\u8fc7\u4e0b\u9762\u7684\u5730\u5740\u8bbf\u95ee\u7269\u7406\u5185\u5b58\u65f6\u4e0d\u7ecf\u8fc7\u7f13\u5b58","text":""},{"location":"plugin/memspace/#_5","title":"\u865a\u62df\u5185\u5b58\u5982\u4f55\u6620\u5c04\u5230\u5176\u4ed6\u7269\u7406\u8bbe\u5907\uff1f","text":"VM Start VM End Size Segement Description 0x00010000 0x00013fff \u7528\u6237\u6001\uff08\u7f13\u5b58\uff09 \u64cd\u4f5c\u6309\u94ae 0x04000000 0x041fffff 2MB \u7528\u6237\u6001\uff08\u7f13\u5b58\uff09 \u663e\u5b58/\u5e27\u7f13\u51b2\u533a 0xbfc00000 0xbfcfffff 1MB \u5185\u6838\u6001\uff08\u672a\u7f13\u5b58\uff09 \u5185\u5b58\u4e2d\u7684\u786c\u4ef6\u5f02\u5e38\u8868(Exception Vector Table)"},{"location":"plugin/memspace/#_6","title":"\u6e38\u620f\u7684\u9ed8\u8ba4\u52a0\u8f7d\u5730\u5740","text":"<p>0x08804000\uff0c\u5c5e\u4e8e\u7528\u6237\u6001\u7f13\u5b58\u533a\u57df\u3002</p>"},{"location":"plugin/moduleload/","title":"\u7a0b\u5e8f\u52a0\u8f7d","text":"<p>http://uofw.github.io/upspd/docs/software/naked_psp.pdf \u8fd9\u90e8\u5206\u53ef\u4ee5\u770buofw\u91cc\u9762\u624b\u673a\u7684\u4e00\u4efdPSPSDK\u7684PPT restart and open <code>sceKernelLoadModule</code> <code>sceKernelStartModule</code></p> <p>manage prx</p>"},{"location":"plugin/moduleload/#loadexecution-library","title":"Load&amp;Execution Library.","text":"<p>Load&amp;Execute A PRX/BOOT.BIN... from another Executable File</p> <p>You can pass some arguments to the main function of the program you are about to execute.</p> <p><pre><code>int sceKernelLoadExec (const char *file, struct SceKernelLoadExecParam *param);\n</code></pre> The PSP will reboot and execute the file you have selected. The screen will gone blank for a while. But you seem to have some choice to keep the screen on during the reboot process, according to what the official document says.</p>"},{"location":"plugin/moduleload/#_2","title":"\u5730\u5740\u7a7a\u95f4","text":"<p>sceModuleInfo \u5185\u6838\u5982\u4f55\u7ba1\u7406Moudule</p> <p>TN-HEN 6.20</p> <p>Total Noob Homebrew Enabler OF 6.20(Can not load ISO on XMB)</p> <p>Prometheus ISO Loader (liquidzigong) -&gt; Load ISO on XMB.</p> <p>You can find videos &amp; screenshots.</p> <p>https://gbatemp.net/threads/liquidzigong-has-quit-the-psp-scene.267699/</p> <p>https://baike.baidu.com/item/liquidzigong/6154040</p> <p>http://news.17173.com/content/12172020/102020086.shtml</p> <p>https://gamergen.com/actualites/liquidzigong-prometheus-quitte-scene-psp-fake-48302-1/amp</p> <p>http://zerofuga0613.blog65.fc2.com/blog-entry-76.html</p> <p>SCE_MODULE_ATTR_CANT_STOP = 0x0001 The module cannot stop (valid only when there is no stop entry).  SCE_MODULE_ATTR_EXCLUSIVE_LOAD = 0x0002 The module cannot be loaded if a module having the same name has already been loaded.  *SCE_MODULE_ATTR_EXCLUSIVE_START = 0x0004 The module cannot be started if a module having the same name has already been started. </p>"},{"location":"plugin/thread/","title":"\u7ebf\u7a0b\uff08Thread\uff09","text":""},{"location":"plugin/thread/#_1","title":"\u521b\u5efa\u7ebf\u7a0b","text":"<p><pre><code>int mythread(SceSize args , void \u2217argp)\n{ \n    /\u2217 Do something \u2217/ \n}\n</code></pre> <pre><code>SceUID thid ;\n/\u2217 Create a user thread \u2217/\nthid = sceKernelCreateThread(\u201dMyThread\u201d , // Name\n    mythread,// Entry Point\n    20, // Priority\n    16384, // Stack Size\n    0, // Attribute\n    NULL);\n\n/\u2217 Start thread with arguments \u2217/\nsceKernelStartThread (thid , args , argp)\n</code></pre></p> <ul> <li><code>SceUID sceKernelCreateThread(const char *   name, SceKernelThreadEntry entry,int    initPriority, int stackSize, SceUInt attr,SceKernelThreadOptParam *option)</code></li> </ul>"},{"location":"plugin/thread/#_2","title":"\u7ebf\u7a0b\u53c2\u6570","text":"<p><code>PSP_THREAD_ATTR_VFPU</code> Enable VFPU access for the thread.</p> <p><code>PSP_THREAD_ATTR_USER</code> Start the thread in user mode (done automatically if the thread creating it is in user mode).</p> <p><code>PSP_THREAD_ATTR_USBWLAN</code> Thread is part of the USB/WLAN API.</p> <p><code>PSP_THREAD_ATTR_VSH</code> Thread is part of the VSH API.</p> <p><code>PSP_THREAD_ATTR_SCRATCH_SRAM</code> Allow using scratchpad memory for a thread, NOT USABLE ON V1.0.</p> <p><code>PSP_THREAD_ATTR_NO_FILLSTACK</code> Disables filling the stack with 0xFF on creation.</p> <p><code>PSP_THREAD_ATTR_CLEAR_STACK</code> Clear the stack when the thread is deleted.</p>"},{"location":"plugin/thread/#_3","title":"\u7ebf\u7a0b\u5b89\u5168\u6027","text":"<ul> <li>Threads have a privilege level which indicates if they can run in kernel or user mode. This allows protection of kernel memory from user applications.  </li> <li>When creating a new thread, you cannot escalate its privilege level.  </li> <li>Thread primitives inherit permissions of the thread which created them.  </li> <li>You cannot enumerate or use thread primitives without the same privilege.  </li> <li>During syscall transition, a separately allocated stack is used to prevent attacks or data leakage.  </li> <li>All kernel functions which take pointer arguments check them based on the thread's privilege.</li> </ul>"}]}